import{r as e}from"./iframe-BiU2suBC.js";import{a as r}from"./utils-DgWKjmuI.js";const t=e.forwardRef(({className:u,...C},a)=>e.createElement("div",{"data-slot":"table-container",className:"relative w-full overflow-x-auto"},e.createElement("table",{ref:a,"data-slot":"table",className:r("w-full caption-bottom text-sm",u),...C})));t.displayName="Table";const o=e.forwardRef(({className:u,...C},a)=>e.createElement("thead",{ref:a,"data-slot":"table-header",className:r("[&_tr]:border-b",u),...C}));o.displayName="TableHeader";const D=e.forwardRef(({className:u,...C},a)=>e.createElement("tbody",{ref:a,"data-slot":"table-body",className:r("[&_tr:last-child]:border-0",u),...C}));D.displayName="TableBody";const l=e.forwardRef(({className:u,...C},a)=>e.createElement("tfoot",{ref:a,"data-slot":"table-footer",className:r("bg-muted/50 border-t font-medium [&>tr]:last:border-b-0",u),...C}));l.displayName="TableFooter";const d=e.forwardRef(({className:u,...C},a)=>e.createElement("tr",{ref:a,"data-slot":"table-row",className:r("hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors",u),...C}));d.displayName="TableRow";const c=e.forwardRef(({className:u,...C},a)=>e.createElement("th",{ref:a,"data-slot":"table-head",className:r("text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]",u),...C}));c.displayName="TableHead";const s=e.forwardRef(({className:u,...C},a)=>e.createElement("td",{ref:a,"data-slot":"table-cell",className:r("p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]",u),...C}));s.displayName="TableCell";const p=e.forwardRef(({className:u,...C},a)=>e.createElement("caption",{ref:a,"data-slot":"table-caption",className:r("text-muted-foreground mt-4 text-sm",u),...C}));p.displayName="TableCaption";try{t.displayName="Table",t.__docgenInfo={description:`🎯 목적: Table 컴포넌트에 forwardRef 적용하여 React 18/19 호환성 제공
📝 주의사항: HTML table 요소 사용, overflow wrapper div 포함
🔄 변경이력: 2025-10-11 - React 18/19 dual support를 위한 forwardRef 추가`,displayName:"Table",props:{}}}catch{}try{D.displayName="TableBody",D.__docgenInfo={description:`🎯 목적: TableBody 컴포넌트에 forwardRef 적용하여 React 18/19 호환성 제공
📝 주의사항: HTML tbody 요소 사용
🔄 변경이력: 2025-10-11 - React 18/19 dual support를 위한 forwardRef 추가`,displayName:"TableBody",props:{}}}catch{}try{p.displayName="TableCaption",p.__docgenInfo={description:`🎯 목적: TableCaption 컴포넌트에 forwardRef 적용하여 React 18/19 호환성 제공
📝 주의사항: HTML caption 요소 사용
🔄 변경이력: 2025-10-11 - React 18/19 dual support를 위한 forwardRef 추가`,displayName:"TableCaption",props:{}}}catch{}try{s.displayName="TableCell",s.__docgenInfo={description:`🎯 목적: TableCell 컴포넌트에 forwardRef 적용하여 React 18/19 호환성 제공
📝 주의사항: HTML td 요소 사용
🔄 변경이력: 2025-10-11 - React 18/19 dual support를 위한 forwardRef 추가`,displayName:"TableCell",props:{}}}catch{}try{l.displayName="TableFooter",l.__docgenInfo={description:`🎯 목적: TableFooter 컴포넌트에 forwardRef 적용하여 React 18/19 호환성 제공
📝 주의사항: HTML tfoot 요소 사용
🔄 변경이력: 2025-10-11 - React 18/19 dual support를 위한 forwardRef 추가`,displayName:"TableFooter",props:{}}}catch{}try{c.displayName="TableHead",c.__docgenInfo={description:`🎯 목적: TableHead 컴포넌트에 forwardRef 적용하여 React 18/19 호환성 제공
📝 주의사항: HTML th 요소 사용
🔄 변경이력: 2025-10-11 - React 18/19 dual support를 위한 forwardRef 추가`,displayName:"TableHead",props:{}}}catch{}try{o.displayName="TableHeader",o.__docgenInfo={description:`🎯 목적: TableHeader 컴포넌트에 forwardRef 적용하여 React 18/19 호환성 제공
📝 주의사항: HTML thead 요소 사용
🔄 변경이력: 2025-10-11 - React 18/19 dual support를 위한 forwardRef 추가`,displayName:"TableHeader",props:{}}}catch{}try{d.displayName="TableRow",d.__docgenInfo={description:`🎯 목적: TableRow 컴포넌트에 forwardRef 적용하여 React 18/19 호환성 제공
📝 주의사항: HTML tr 요소 사용
🔄 변경이력: 2025-10-11 - React 18/19 dual support를 위한 forwardRef 추가`,displayName:"TableRow",props:{}}}catch{}export{t as T,p as a,o as b,d as c,c as d,D as e,s as f,l as g};
