{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "separator-story",
  "type": "registry:component",
  "title": "Separator Story",
  "author": "Lloyd Richards <lloyd.d.richards@gmail.com>",
  "description": "Interactive Storybook stories demonstrating separator component usage and variants",
  "registryDependencies": [
    "separator"
  ],
  "files": [
    {
      "path": "src/registry/atoms/separator-story/separator.stories.tsx",
      "content": "import React from \"react\";\nimport type { Meta, StoryObj } from \"@storybook/react-vite\";\nimport { expect, within } from \"storybook/test\";\n\nimport { Separator } from \"@/components/ui/separator\";\n\n// Demo component from official docs\nexport function SeparatorDemo() {\n  return (\n    <div>\n      <div className=\"space-y-1\">\n        <h4 className=\"text-sm leading-none font-medium\">Radix Primitives</h4>\n        <p className=\"text-muted-foreground text-sm\">\n          An open-source UI component library.\n        </p>\n      </div>\n      <Separator className=\"my-4\" />\n      <div className=\"flex h-5 items-center space-x-4 text-sm\">\n        <div>Blog</div>\n        <Separator orientation=\"vertical\" />\n        <div>Docs</div>\n        <Separator orientation=\"vertical\" />\n        <div>Source</div>\n      </div>\n    </div>\n  );\n}\n\n/**\n * 시각적 또는 의미적으로 콘텐츠를 분리하는 구분선 컴포넌트입니다.\n *\n * ⚠️ **세로 Separator 사용 시 주의사항**:\n * - 부모 컨테이너에 반드시 명시적 높이(`min-h-[Npx]` 또는 `h-[Npx]`)가 필요합니다\n * - Radix UI의 CSS가 사용자 높이 설정을 덮어쓸 수 있으므로 인라인 스타일을 백업으로 사용하세요\n *\n * 자세한 사용법은 아래 스토리 예시들을 참고하세요.\n */\nconst meta = {\n  title: \"ui/Separator\",\n  component: Separator,\n  tags: [\"autodocs\"],\n  parameters: {\n    layout: \"centered\",\n    docs: {\n      description: {\n        component: `\n**중요**: 세로 Separator 사용 시 부모 컨테이너에 명시적 높이 설정이 필요합니다.\n\n\\`\\`\\`tsx\n// ❌ 잘못된 사용 - 높이가 0이 되어 보이지 않음\n<div className=\"flex items-center gap-2\">\n  <Separator orientation=\"vertical\" className=\"h-5\" />\n</div>\n\n// ✅ 올바른 사용 - 부모에 높이 + 인라인 스타일 백업\n<div className=\"flex items-center gap-2 min-h-[40px]\">\n  <Separator \n    orientation=\"vertical\" \n    className=\"h-5 w-px bg-border\"\n    style={{ height: '20px', width: '1px' }}\n  />\n</div>\n\\`\\`\\`\n        `,\n      },\n    },\n  },\n  args: {\n    orientation: \"horizontal\",\n    decorative: true,\n    className: \"w-64\",\n  },\n  excludeStories: /.*Demo$/,\n  argTypes: {\n    className: {\n      control: \"text\",\n      description: \"Additional CSS classes\",\n    },\n    orientation: {\n      control: { type: \"radio\" },\n      options: [\"horizontal\", \"vertical\"],\n      description: \"The orientation of the separator\",\n    },\n    decorative: {\n      control: \"boolean\",\n      description: \"Whether the separator is purely decorative\",\n    },\n  },\n} satisfies Meta<typeof Separator>;\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\n\n/**\n * The default form of the separator demonstrating both orientations.\n */\nexport const Default: Story = {\n  render: () => <SeparatorDemo />,\n};\n\n/**\n * Basic horizontal separator.\n */\nexport const Horizontal: Story = {\n  render: () => (\n    <div className=\"space-y-4\">\n      <div className=\"text-muted-foreground text-sm\">Content above</div>\n      <Separator orientation=\"horizontal\" className=\"w-64\" />\n      <div className=\"text-muted-foreground text-sm\">Content below</div>\n    </div>\n  ),\n};\n\n/**\n * Vertical separator.\n */\nexport const Vertical: Story = {\n  render: () => (\n    <div className=\"border-muted flex h-20 items-center space-x-4 rounded border border-dashed p-4 text-sm\">\n      <span className=\"bg-muted rounded px-2 py-1\">Left content</span>\n      <Separator orientation=\"vertical\" className=\"bg-border h-16\" />\n      <span className=\"bg-muted rounded px-2 py-1\">Right content</span>\n    </div>\n  ),\n};\n\n/**\n * Horizontal separator with custom width.\n */\nexport const CustomWidth: Story = {\n  render: () => (\n    <div className=\"space-y-4\">\n      <div className=\"text-muted-foreground text-sm\">Wide separator (w-96)</div>\n      <Separator orientation=\"horizontal\" className=\"w-96\" />\n      <div className=\"text-muted-foreground text-sm\">Content below</div>\n    </div>\n  ),\n};\n\n/**\n * Vertical separator with custom height.\n */\nexport const CustomHeight: Story = {\n  render: () => (\n    <div className=\"flex h-28 items-center space-x-4 text-sm\">\n      <span>Left content</span>\n      <Separator orientation=\"vertical\" className=\"h-24\" />\n      <span>Right content</span>\n      <div className=\"text-muted-foreground ml-4 text-xs\">(h-24)</div>\n    </div>\n  ),\n};\n\n/**\n * Separator with custom styling.\n */\nexport const CustomStyling: Story = {\n  render: () => (\n    <div className=\"w-full max-w-md space-y-4\">\n      <Separator className=\"bg-primary\" />\n      <Separator className=\"bg-secondary h-0.5\" />\n      <Separator className=\"from-primary to-secondary h-1 bg-gradient-to-r\" />\n      <div className=\"flex items-center space-x-4\">\n        <span className=\"text-sm\">Left</span>\n        <Separator orientation=\"vertical\" className=\"bg-primary h-6\" />\n        <span className=\"text-sm\">Right</span>\n      </div>\n    </div>\n  ),\n};\n\n/**\n * Separator in a card layout.\n */\nexport const InCard: Story = {\n  render: () => (\n    <div className=\"w-[350px] rounded-lg border p-4\">\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"font-semibold\">Notifications</h3>\n        <span className=\"text-muted-foreground text-sm\">3 unread</span>\n      </div>\n      <Separator className=\"my-3\" />\n      <div className=\"space-y-3\">\n        <div className=\"flex items-start space-x-2\">\n          <div className=\"size-2 translate-y-1 rounded-full bg-sky-500\" />\n          <div className=\"space-y-1\">\n            <p className=\"text-sm leading-none font-medium\">New message</p>\n            <p className=\"text-muted-foreground text-sm\">\n              You have a new message from Alex\n            </p>\n          </div>\n        </div>\n        <Separator />\n        <div className=\"flex items-start space-x-2\">\n          <div className=\"size-2 translate-y-1 rounded-full bg-sky-500\" />\n          <div className=\"space-y-1\">\n            <p className=\"text-sm leading-none font-medium\">Meeting reminder</p>\n            <p className=\"text-muted-foreground text-sm\">\n              Team standup in 30 minutes\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  ),\n};\n\n/**\n * Separator in a toolbar.\n */\nexport const InToolbar: Story = {\n  render: () => (\n    <div className=\"flex items-center rounded-md border px-3\">\n      <button className=\"hover:bg-accent hover:text-accent-foreground flex h-10 items-center justify-center rounded-md px-2 text-sm\">\n        Bold\n      </button>\n      <button className=\"hover:bg-accent hover:text-accent-foreground flex h-10 items-center justify-center rounded-md px-2 text-sm\">\n        Italic\n      </button>\n      <Separator orientation=\"vertical\" className=\"mx-2 h-6\" />\n      <button className=\"hover:bg-accent hover:text-accent-foreground flex h-10 items-center justify-center rounded-md px-2 text-sm\">\n        Left\n      </button>\n      <button className=\"hover:bg-accent hover:text-accent-foreground flex h-10 items-center justify-center rounded-md px-2 text-sm\">\n        Center\n      </button>\n      <button className=\"hover:bg-accent hover:text-accent-foreground flex h-10 items-center justify-center rounded-md px-2 text-sm\">\n        Right\n      </button>\n    </div>\n  ),\n};\n\nexport const ShouldRenderBothOrientations: Story = {\n  name: \"when rendered, should display both horizontal and vertical separators\",\n  tags: [\"!dev\", \"!autodocs\"],\n  render: () => (\n    <div className=\"space-y-6\" data-testid=\"separator-container\">\n      <div className=\"space-y-4\">\n        <h4 className=\"text-sm font-medium\">Horizontal Separator</h4>\n        <div className=\"text-muted-foreground text-sm\">\n          Content before separator\n        </div>\n        <Separator\n          orientation=\"horizontal\"\n          data-testid=\"horizontal-separator\"\n        />\n        <div className=\"text-muted-foreground text-sm\">\n          Content after separator\n        </div>\n      </div>\n\n      <div className=\"space-y-4\">\n        <h4 className=\"text-sm font-medium\">Vertical Separator</h4>\n        <div className=\"flex items-center space-x-4 text-sm\">\n          <span data-testid=\"item-1\">Item 1</span>\n          <Separator\n            orientation=\"vertical\"\n            className=\"h-6\"\n            data-testid=\"vertical-separator-1\"\n          />\n          <span data-testid=\"item-2\">Item 2</span>\n          <Separator\n            orientation=\"vertical\"\n            className=\"h-6\"\n            data-testid=\"vertical-separator-2\"\n          />\n          <span data-testid=\"item-3\">Item 3</span>\n        </div>\n      </div>\n    </div>\n  ),\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    // 🎯 목적: Separator 컴포넌트가 horizontal과 vertical 방향을 올바르게 렌더링하는지 확인\n\n    // Container 확인\n    const container = canvas.getByTestId(\"separator-container\");\n    await expect(container).toBeInTheDocument();\n\n    // Horizontal Separator 확인\n    const horizontalSeparator = canvas.getByTestId(\"horizontal-separator\");\n    await expect(horizontalSeparator).toBeInTheDocument();\n    await expect(horizontalSeparator).toHaveAttribute(\n      \"data-orientation\",\n      \"horizontal\",\n    );\n\n    // Vertical Separator 확인\n    const verticalSeparator1 = canvas.getByTestId(\"vertical-separator-1\");\n    await expect(verticalSeparator1).toBeInTheDocument();\n    await expect(verticalSeparator1).toHaveAttribute(\n      \"data-orientation\",\n      \"vertical\",\n    );\n\n    const verticalSeparator2 = canvas.getByTestId(\"vertical-separator-2\");\n    await expect(verticalSeparator2).toBeInTheDocument();\n    await expect(verticalSeparator2).toHaveAttribute(\n      \"data-orientation\",\n      \"vertical\",\n    );\n\n    // Separated items 확인\n    const item1 = canvas.getByTestId(\"item-1\");\n    await expect(item1).toHaveTextContent(\"Item 1\");\n\n    const item2 = canvas.getByTestId(\"item-2\");\n    await expect(item2).toHaveTextContent(\"Item 2\");\n\n    const item3 = canvas.getByTestId(\"item-3\");\n    await expect(item3).toHaveTextContent(\"Item 3\");\n  },\n};\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "atoms",
    "storybook",
    "separator",
    "layout"
  ]
}