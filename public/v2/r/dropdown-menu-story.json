{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dropdown-menu-story",
  "type": "registry:component",
  "title": "Dropdown Menu Story",
  "author": "Lloyd Richards <lloyd.d.richards@gmail.com>",
  "description": "Interactive Storybook stories demonstrating dropdown menu component usage and variants",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "dropdown-menu"
  ],
  "files": [
    {
      "path": "src/registry/atoms/dropdown-menu-story/dropdown-menu.stories.tsx",
      "content": "import { Button } from \"@/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuPortal,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport type { Meta, StoryObj } from \"@storybook/nextjs-vite\";\nimport * as React from \"react\";\nimport { expect, userEvent, waitFor, within } from \"storybook/test\";\n\nfunction DropdownMenuDemo() {\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"outline\">Open</Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent className=\"w-56\" align=\"start\">\n        <DropdownMenuLabel>My Account</DropdownMenuLabel>\n        <DropdownMenuGroup>\n          <DropdownMenuItem>\n            Profile\n            <DropdownMenuShortcut>‚áß‚åòP</DropdownMenuShortcut>\n          </DropdownMenuItem>\n          <DropdownMenuItem>\n            Billing\n            <DropdownMenuShortcut>‚åòB</DropdownMenuShortcut>\n          </DropdownMenuItem>\n          <DropdownMenuItem>\n            Settings\n            <DropdownMenuShortcut>‚åòS</DropdownMenuShortcut>\n          </DropdownMenuItem>\n          <DropdownMenuItem>\n            Keyboard shortcuts\n            <DropdownMenuShortcut>‚åòK</DropdownMenuShortcut>\n          </DropdownMenuItem>\n        </DropdownMenuGroup>\n        <DropdownMenuSeparator />\n        <DropdownMenuGroup>\n          <DropdownMenuItem>Team</DropdownMenuItem>\n          <DropdownMenuSub>\n            <DropdownMenuSubTrigger>Invite users</DropdownMenuSubTrigger>\n            <DropdownMenuPortal>\n              <DropdownMenuSubContent>\n                <DropdownMenuItem>Email</DropdownMenuItem>\n                <DropdownMenuItem>Message</DropdownMenuItem>\n                <DropdownMenuSeparator />\n                <DropdownMenuItem>More...</DropdownMenuItem>\n              </DropdownMenuSubContent>\n            </DropdownMenuPortal>\n          </DropdownMenuSub>\n          <DropdownMenuItem>\n            New Team\n            <DropdownMenuShortcut>‚åò+T</DropdownMenuShortcut>\n          </DropdownMenuItem>\n        </DropdownMenuGroup>\n        <DropdownMenuSeparator />\n        <DropdownMenuItem>GitHub</DropdownMenuItem>\n        <DropdownMenuItem>Support</DropdownMenuItem>\n        <DropdownMenuItem disabled>API</DropdownMenuItem>\n        <DropdownMenuSeparator />\n        <DropdownMenuItem>\n          Log out\n          <DropdownMenuShortcut>‚áß‚åòQ</DropdownMenuShortcut>\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n\n// Dropdown Menu with Checkboxes\nfunction DropdownMenuCheckboxesDemo() {\n  const [showStatusBar, setShowStatusBar] = React.useState(true);\n  const [showActivityBar, setShowActivityBar] = React.useState(false);\n  const [showPanel, setShowPanel] = React.useState(false);\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"outline\">Open</Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent className=\"w-56\">\n        <DropdownMenuLabel>Appearance</DropdownMenuLabel>\n        <DropdownMenuSeparator />\n        <DropdownMenuCheckboxItem\n          checked={showStatusBar}\n          onCheckedChange={setShowStatusBar}\n        >\n          Status Bar\n        </DropdownMenuCheckboxItem>\n        <DropdownMenuCheckboxItem\n          checked={showActivityBar}\n          onCheckedChange={setShowActivityBar}\n          disabled\n        >\n          Activity Bar\n        </DropdownMenuCheckboxItem>\n        <DropdownMenuCheckboxItem\n          checked={showPanel}\n          onCheckedChange={setShowPanel}\n        >\n          Panel\n        </DropdownMenuCheckboxItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n\n// Dropdown Menu with Radio Group\nfunction DropdownMenuRadioGroupDemo() {\n  const [position, setPosition] = React.useState(\"bottom\");\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"outline\">Open</Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent className=\"w-56\">\n        <DropdownMenuLabel>Panel Position</DropdownMenuLabel>\n        <DropdownMenuSeparator />\n        <DropdownMenuRadioGroup value={position} onValueChange={setPosition}>\n          <DropdownMenuRadioItem value=\"top\">Top</DropdownMenuRadioItem>\n          <DropdownMenuRadioItem value=\"bottom\">Bottom</DropdownMenuRadioItem>\n          <DropdownMenuRadioItem value=\"right\">Right</DropdownMenuRadioItem>\n        </DropdownMenuRadioGroup>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n\n/**\n * A comprehensive dropdown menu with shortcuts, submenus, and groups.\n */\nconst meta = {\n  title: \"ui/DropdownMenu\",\n  component: DropdownMenuDemo,\n  tags: [\"autodocs\"],\n  parameters: {\n    layout: \"centered\",\n  },\n  excludeStories: /.*Demo$/,\n} satisfies Meta<typeof DropdownMenuDemo>;\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\n\n/**\n * The default dropdown menu with all features.\n */\nexport const Default: Story = {};\n\n/**\n * Dropdown menu with checkbox items for toggling options.\n */\nexport const Checkboxes: Story = {\n  render: () => <DropdownMenuCheckboxesDemo />,\n};\n\n/**\n * Dropdown menu with radio group for selecting single option.\n */\nexport const RadioGroup: Story = {\n  render: () => <DropdownMenuRadioGroupDemo />,\n};\n\nexport const ShouldOpenAndSelectMenuItem: Story = {\n  name: \"when trigger is clicked, should open menu and select items\",\n  tags: [\"!dev\", \"!autodocs\"],\n  render: () => <DropdownMenuDemo />,\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    // üéØ Î™©Ï†Å: Dropdown MenuÍ∞Ä Ìä∏Î¶¨Í±∞ Î≤ÑÌäº ÌÅ¥Î¶≠ÏúºÎ°ú Ïó¥Î¶¨Í≥†, Î©îÎâ¥ ÏïÑÏù¥ÌÖú ÏÑ†ÌÉùÏù¥ Í∞ÄÎä•ÌïúÏßÄ ÌôïÏù∏\n    const triggerButton = canvas.getByRole(\"button\", { name: /open/i });\n    await expect(triggerButton).toBeInTheDocument();\n\n    // Ìä∏Î¶¨Í±∞ Î≤ÑÌäº ÌÅ¥Î¶≠ÌïòÏó¨ ÎìúÎ°≠Îã§Ïö¥ Î©îÎâ¥ Ïó¥Í∏∞\n    await userEvent.click(triggerButton);\n\n    // Î©îÎâ¥Í∞Ä Ïó¥Î†∏ÎäîÏßÄ ÌôïÏù∏ (Î©îÎâ¥ ÏïÑÏù¥ÌÖú ÌôïÏù∏)\n    const profileItem = await waitFor(async () => {\n      return await canvas.findByRole(\"menuitem\", {\n        name: /profile/i,\n      });\n    });\n    await expect(profileItem).toBeInTheDocument();\n\n    // Îã§Î•∏ Î©îÎâ¥ ÏïÑÏù¥ÌÖúÎì§ÎèÑ ÌôïÏù∏\n    const billingItem = canvas.getByRole(\"menuitem\", { name: /billing/i });\n    const settingsItem = canvas.getByRole(\"menuitem\", { name: /settings/i });\n\n    await expect(billingItem).toBeInTheDocument();\n    await expect(settingsItem).toBeInTheDocument();\n\n    // Î©îÎâ¥ ÏïÑÏù¥ÌÖú ÌÅ¥Î¶≠\n    await userEvent.click(profileItem);\n  },\n};\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "atoms",
    "storybook",
    "dropdown",
    "menu"
  ]
}