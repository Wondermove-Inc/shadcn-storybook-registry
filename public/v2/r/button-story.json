{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button-story",
  "type": "registry:file",
  "title": "Button Story",
  "author": "Lloyd Richards <lloyd.d.richards@gmail.com>",
  "description": "Interactive Storybook stories demonstrating button component usage and variants",
  "dependencies": [
    "lucide-react",
    "react-router-dom"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "src/registry/atoms/button-story/button.stories.tsx",
      "content": "import React from \"react\";\nimport type { Meta, StoryObj } from \"@storybook/react-vite\";\nimport { ArrowUpIcon, ChevronRight } from \"lucide-react\";\nimport { IconGitBranch } from \"@tabler/icons-react\";\nimport { withRouter } from \"storybook-addon-remix-react-router\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Spinner } from \"@/components/ui/spinner\";\nimport { fn } from \"storybook/test\";\n\nexport function ButtonDemo() {\n  return <Button>Button</Button>;\n}\n\nexport function ButtonLoading() {\n  return (\n    <Button size=\"sm\" variant=\"outline\" disabled>\n      <Spinner />\n      Submit\n    </Button>\n  );\n}\n\nexport function ButtonRounded() {\n  return (\n    <div className=\"flex flex-col gap-8\">\n      <Button variant=\"outline\" size=\"icon\" className=\"rounded-full\">\n        <ArrowUpIcon />\n      </Button>\n    </div>\n  );\n}\n\n/**\n * Displays a button or a component that looks like a button.\n */\nconst meta = {\n  title: \"ui/Button\",\n  component: Button,\n  tags: [\"autodocs\"],\n  decorators: [withRouter],\n  parameters: {\n    layout: \"centered\",\n  },\n  args: {\n    children: \"Button\",\n    variant: \"default\",\n    size: \"default\",\n    disabled: false,\n    onClick: fn(),\n  },\n  excludeStories: /.*Demo$|.*Loading$|ButtonRounded$/,\n} satisfies Meta<typeof Button>;\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\n\n/**\n * 기본 버튼 스타일입니다. 주요 액션이나 제출 버튼으로 사용하며,\n * 가장 눈에 띄는 시각적 강조를 제공합니다.\n */\nexport const Default: Story = {};\n\n/**\n * 보조 액션에 사용하는 secondary variant입니다.\n * 주요 버튼보다 덜 강조되며, 취소나 뒤로가기 같은 부차적인 액션에 적합합니다.\n */\nexport const Secondary: Story = {\n  args: {\n    variant: \"secondary\",\n    children: \"Secondary\",\n  },\n};\n\n/**\n * 삭제나 파괴적인 액션에 사용하는 destructive variant입니다.\n * 빨간색 계열로 표시되어 사용자에게 신중한 결정을 유도합니다.\n */\nexport const Destructive: Story = {\n  args: {\n    variant: \"destructive\",\n    children: \"Destructive\",\n  },\n};\n\n/**\n * 테두리만 있는 outline variant입니다.\n * 배경이 투명하여 가벼운 느낌을 주며, 보조 액션이나 필터 버튼에 적합합니다.\n */\nexport const Outline: Story = {\n  args: {\n    variant: \"outline\",\n    children: \"Outline\",\n  },\n};\n\n/**\n * 테두리와 배경이 없는 ghost variant입니다.\n * 호버 시에만 배경이 나타나며, 네비게이션이나 드롭다운 메뉴에 사용됩니다.\n */\nexport const Ghost: Story = {\n  args: {\n    variant: \"ghost\",\n    children: \"Ghost\",\n  },\n};\n\n/**\n * 링크처럼 보이는 link variant입니다.\n * 밑줄이 있는 텍스트 스타일로, 인라인 텍스트 내에서 버튼 기능이 필요할 때 사용합니다.\n */\nexport const LinkVariant: Story = {\n  args: {\n    variant: \"link\",\n    children: \"Link\",\n  },\n};\n\n/**\n * 아이콘만 표시하는 버튼입니다. size=\"icon\"을 사용하여 정사각형 모양으로 만들며,\n * 툴바나 액션 아이콘 버튼에 적합합니다. 접근성을 위해 aria-label 추가를 권장합니다.\n */\nexport const Icon: Story = {\n  render: () => (\n    <Button variant=\"outline\" size=\"icon\">\n      <ChevronRight className=\"h-4 w-4\" />\n    </Button>\n  ),\n};\n\n/**\n * 텍스트와 아이콘을 함께 표시하는 버튼입니다.\n * 공식 문서 예제: @tabler/icons-react의 IconGitBranch를 사용합니다.\n */\nexport const WithIcon: Story = {\n  render: () => (\n    <Button variant=\"outline\" size=\"sm\">\n      <IconGitBranch /> New Branch\n    </Button>\n  ),\n};\n\n/**\n * 로딩 상태를 표시하는 버튼입니다. disabled 상태와 함께 Spinner 컴포넌트를 사용하여\n * 비동기 작업이 진행 중임을 사용자에게 알립니다.\n */\nexport const LoadingSpinner: Story = {\n  render: () => <ButtonLoading />,\n};\n\n/**\n * 둥근 모양의 아이콘 버튼입니다. rounded-full 클래스를 사용하여\n * 완전히 원형 모양의 버튼을 만들 수 있습니다.\n */\nexport const Rounded: Story = {\n  render: () => <ButtonRounded />,\n};\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "atoms",
    "storybook",
    "button",
    "interaction"
  ]
}