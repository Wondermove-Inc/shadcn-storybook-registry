{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "color-story",
  "type": "registry:component",
  "title": "Color Story",
  "author": "Lloyd Richards <lloyd.d.richards@gmail.com>",
  "description": "Design system documentation and examples for color tokens and themes",
  "registryDependencies": [
    "table"
  ],
  "files": [
    {
      "path": "src/registry/tokens/color-story/color.stories.tsx",
      "content": "import {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport type { Meta, StoryObj } from \"@storybook/nextjs-vite\";\nimport { useEffect, useState } from \"react\";\n\n// 🎨 Tailwind 기본 색상 정의\nconst tailwindColors = {\n  slate: {\n    50: \"#f8fafc\",\n    100: \"#f1f5f9\",\n    200: \"#e2e8f0\",\n    300: \"#cbd5e1\",\n    400: \"#94a3b8\",\n    500: \"#64748b\",\n    600: \"#475569\",\n    700: \"#334155\",\n    800: \"#1e293b\",\n    900: \"#0f172a\",\n    950: \"#020617\",\n  },\n  gray: {\n    50: \"#f9fafb\",\n    100: \"#f3f4f6\",\n    200: \"#e5e7eb\",\n    300: \"#d1d5db\",\n    400: \"#9ca3af\",\n    500: \"#6b7280\",\n    600: \"#4b5563\",\n    700: \"#374151\",\n    800: \"#1f2937\",\n    900: \"#111827\",\n    950: \"#030712\",\n  },\n  zinc: {\n    50: \"#fafafa\",\n    100: \"#f4f4f5\",\n    200: \"#e4e4e7\",\n    300: \"#d4d4d8\",\n    400: \"#a1a1aa\",\n    500: \"#71717a\",\n    600: \"#52525b\",\n    700: \"#3f3f46\",\n    800: \"#27272a\",\n    900: \"#18181b\",\n    950: \"#09090b\",\n  },\n  neutral: {\n    50: \"#fafafa\",\n    100: \"#f5f5f5\",\n    200: \"#e5e5e5\",\n    300: \"#d4d4d4\",\n    400: \"#a3a3a3\",\n    500: \"#737373\",\n    600: \"#525252\",\n    700: \"#404040\",\n    800: \"#262626\",\n    900: \"#171717\",\n    950: \"#0a0a0a\",\n  },\n  stone: {\n    50: \"#fafaf9\",\n    100: \"#f5f5f4\",\n    200: \"#e7e5e4\",\n    300: \"#d6d3d1\",\n    400: \"#a8a29e\",\n    500: \"#78716c\",\n    600: \"#57534e\",\n    700: \"#44403c\",\n    800: \"#292524\",\n    900: \"#1c1917\",\n    950: \"#0c0a09\",\n  },\n  red: {\n    50: \"#fef2f2\",\n    100: \"#fee2e2\",\n    200: \"#fecaca\",\n    300: \"#fca5a5\",\n    400: \"#f87171\",\n    500: \"#ef4444\",\n    600: \"#dc2626\",\n    700: \"#b91c1c\",\n    800: \"#991b1b\",\n    900: \"#7f1d1d\",\n    950: \"#450a0a\",\n  },\n  orange: {\n    50: \"#fff7ed\",\n    100: \"#ffedd5\",\n    200: \"#fed7aa\",\n    300: \"#fdba74\",\n    400: \"#fb923c\",\n    500: \"#f97316\",\n    600: \"#ea580c\",\n    700: \"#c2410c\",\n    800: \"#9a3412\",\n    900: \"#7c2d12\",\n    950: \"#431407\",\n  },\n  amber: {\n    50: \"#fffbeb\",\n    100: \"#fef3c7\",\n    200: \"#fde68a\",\n    300: \"#fcd34d\",\n    400: \"#fbbf24\",\n    500: \"#f59e0b\",\n    600: \"#d97706\",\n    700: \"#b45309\",\n    800: \"#92400e\",\n    900: \"#78350f\",\n    950: \"#451a03\",\n  },\n  yellow: {\n    50: \"#fefce8\",\n    100: \"#fef9c3\",\n    200: \"#fef08a\",\n    300: \"#fde047\",\n    400: \"#facc15\",\n    500: \"#eab308\",\n    600: \"#ca8a04\",\n    700: \"#a16207\",\n    800: \"#854d0e\",\n    900: \"#713f12\",\n    950: \"#422006\",\n  },\n  lime: {\n    50: \"#f7fee7\",\n    100: \"#ecfccb\",\n    200: \"#d9f99d\",\n    300: \"#bef264\",\n    400: \"#a3e635\",\n    500: \"#84cc16\",\n    600: \"#65a30d\",\n    700: \"#4d7c0f\",\n    800: \"#3f6212\",\n    900: \"#365314\",\n    950: \"#1a2e05\",\n  },\n  green: {\n    50: \"#f0fdf4\",\n    100: \"#dcfce7\",\n    200: \"#bbf7d0\",\n    300: \"#86efac\",\n    400: \"#4ade80\",\n    500: \"#22c55e\",\n    600: \"#16a34a\",\n    700: \"#15803d\",\n    800: \"#166534\",\n    900: \"#14532d\",\n    950: \"#052e16\",\n  },\n  emerald: {\n    50: \"#ecfdf5\",\n    100: \"#d1fae5\",\n    200: \"#a7f3d0\",\n    300: \"#6ee7b7\",\n    400: \"#34d399\",\n    500: \"#10b981\",\n    600: \"#059669\",\n    700: \"#047857\",\n    800: \"#065f46\",\n    900: \"#064e3b\",\n    950: \"#022c22\",\n  },\n  teal: {\n    50: \"#f0fdfa\",\n    100: \"#ccfbf1\",\n    200: \"#99f6e4\",\n    300: \"#5eead4\",\n    400: \"#2dd4bf\",\n    500: \"#14b8a6\",\n    600: \"#0d9488\",\n    700: \"#0f766e\",\n    800: \"#115e59\",\n    900: \"#134e4a\",\n    950: \"#042f2e\",\n  },\n  cyan: {\n    50: \"#ecfeff\",\n    100: \"#cffafe\",\n    200: \"#a5f3fc\",\n    300: \"#67e8f9\",\n    400: \"#22d3ee\",\n    500: \"#06b6d4\",\n    600: \"#0891b2\",\n    700: \"#0e7490\",\n    800: \"#155e75\",\n    900: \"#164e63\",\n    950: \"#083344\",\n  },\n  sky: {\n    50: \"#f0f9ff\",\n    100: \"#e0f2fe\",\n    200: \"#bae6fd\",\n    300: \"#7dd3fc\",\n    400: \"#38bdf8\",\n    500: \"#0ea5e9\",\n    600: \"#0284c7\",\n    700: \"#0369a1\",\n    800: \"#075985\",\n    900: \"#0c4a6e\",\n    950: \"#082f49\",\n  },\n  blue: {\n    50: \"#eff6ff\",\n    100: \"#dbeafe\",\n    200: \"#bfdbfe\",\n    300: \"#93c5fd\",\n    400: \"#60a5fa\",\n    500: \"#3b82f6\",\n    600: \"#2563eb\",\n    700: \"#1d4ed8\",\n    800: \"#1e40af\",\n    900: \"#1e3a8a\",\n    950: \"#172554\",\n  },\n  indigo: {\n    50: \"#eef2ff\",\n    100: \"#e0e7ff\",\n    200: \"#c7d2fe\",\n    300: \"#a5b4fc\",\n    400: \"#818cf8\",\n    500: \"#6366f1\",\n    600: \"#4f46e5\",\n    700: \"#4338ca\",\n    800: \"#3730a3\",\n    900: \"#312e81\",\n    950: \"#1e1b4b\",\n  },\n  violet: {\n    50: \"#f5f3ff\",\n    100: \"#ede9fe\",\n    200: \"#ddd6fe\",\n    300: \"#c4b5fd\",\n    400: \"#a78bfa\",\n    500: \"#8b5cf6\",\n    600: \"#7c3aed\",\n    700: \"#6d28d9\",\n    800: \"#5b21b6\",\n    900: \"#4c1d95\",\n    950: \"#2e1065\",\n  },\n  purple: {\n    50: \"#faf5ff\",\n    100: \"#f3e8ff\",\n    200: \"#e9d5ff\",\n    300: \"#d8b4fe\",\n    400: \"#c084fc\",\n    500: \"#a855f7\",\n    600: \"#9333ea\",\n    700: \"#7e22ce\",\n    800: \"#6b21a8\",\n    900: \"#581c87\",\n    950: \"#3b0764\",\n  },\n  fuchsia: {\n    50: \"#fdf4ff\",\n    100: \"#fae8ff\",\n    200: \"#f5d0fe\",\n    300: \"#f0abfc\",\n    400: \"#e879f9\",\n    500: \"#d946ef\",\n    600: \"#c026d3\",\n    700: \"#a21caf\",\n    800: \"#86198f\",\n    900: \"#701a75\",\n    950: \"#4a044e\",\n  },\n  pink: {\n    50: \"#fdf2f8\",\n    100: \"#fce7f3\",\n    200: \"#fbcfe8\",\n    300: \"#f9a8d4\",\n    400: \"#f472b6\",\n    500: \"#ec4899\",\n    600: \"#db2777\",\n    700: \"#be185d\",\n    800: \"#9d174d\",\n    900: \"#831843\",\n    950: \"#500724\",\n  },\n  rose: {\n    50: \"#fff1f2\",\n    100: \"#ffe4e6\",\n    200: \"#fecdd3\",\n    300: \"#fda4af\",\n    400: \"#fb7185\",\n    500: \"#f43f5e\",\n    600: \"#e11d48\",\n    700: \"#be123c\",\n    800: \"#9f1239\",\n    900: \"#881337\",\n    950: \"#4c0519\",\n  },\n};\n\ntype Color = {\n  name: string;\n  value: string;\n  description?: string;\n};\n\n// 🎨 shadcn 토큰 색상 타일 컴포넌트 (다크모드 감지 포함)\nconst ColorTile = ({ value }: Pick<Color, \"value\">) => {\n  const [colorValue, setColorValue] = useState(\"\");\n\n  useEffect(() => {\n    // 🌓 CSS 변수 값을 읽어서 표시용으로만 사용\n    const updateColor = () => {\n      const styles = getComputedStyle(document.documentElement);\n      const cssValue = styles.getPropertyValue(value);\n      setColorValue(cssValue.trim());\n    };\n\n    // 초기 로드 시 색상 읽기\n    updateColor();\n\n    // 🔄 MutationObserver로 다크모드 실시간 감지\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (\n          mutation.type === \"attributes\" &&\n          mutation.attributeName === \"class\"\n        ) {\n          updateColor();\n        }\n      });\n    });\n\n    observer.observe(document.documentElement, {\n      attributes: true,\n      attributeFilter: [\"class\"],\n    });\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [value]);\n\n  // 🎨 Tailwind v4: CSS 변수 값이 이미 \"hsl(0 0% 100%)\" 형식 (hsl() 포함)\n  // React 인라인 스타일 호환을 위해 공백을 쉼표로 변환\n  const hslValue = colorValue.replace(/hsl\\(([^)]+)\\)/, (match, values) => {\n    return `hsl(${values.replace(/\\s+/g, \", \")})`;\n  });\n\n  return (\n    <div className=\"flex flex-col items-center gap-2\">\n      <div\n        className=\"size-20 rounded-md border\"\n        style={{ backgroundColor: hslValue || \"transparent\" }}\n      />\n      <p className=\"text-center text-xs opacity-70\">{value}</p>\n      <p className=\"text-center font-mono text-xs\">{colorValue}</p>\n    </div>\n  );\n};\n\n/**\n * 🎨 shadcn/ui 디자인 시스템 색상 토큰 및 Tailwind CSS 색상 팔레트\n *\n * 이 스토리는 두 가지 색상 시스템을 제공합니다:\n * 1. **shadcn Design Tokens**: 프로젝트에서 사용되는 디자인 시스템 토큰 (CSS 변수)\n * 2. **Tailwind Palette**: Tailwind CSS의 전체 색상 팔레트 (22개 색상 × 11개 shade)\n *\n * 다크모드 전환 시 shadcn 토큰 값이 실시간으로 업데이트됩니다.\n */\nconst meta: Meta<{\n  colors: Color[];\n}> = {\n  title: \"foundation/Color\",\n  tags: [\"autodocs\"],\n  argTypes: {},\n  render: (args) => (\n    <Table>\n      <TableHeader>\n        <TableRow>\n          <TableHead>Name</TableHead>\n          <TableHead>Description</TableHead>\n          <TableHead>\n            <span className=\"sr-only\">Preview</span>\n          </TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {args.colors.map(({ name, value, description }) => (\n          <TableRow key={name}>\n            <TableCell className=\"font-medium\">{name}</TableCell>\n            <TableCell className=\"text-muted-foreground text-sm\">\n              {description}\n            </TableCell>\n            <TableCell>\n              <ColorTile value={value} />\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  ),\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\n\n/**\n * 🎯 Primary: 주요 색상 토큰\n *\n * 애플리케이션의 배경, 텍스트, 주요 브랜드 색상 등 기본 색상 토큰입니다.\n * 다크모드 전환 시 자동으로 업데이트됩니다.\n */\nexport const Primary: Story = {\n  args: {\n    colors: [\n      {\n        name: \"Background\",\n        value: \"--background\",\n        description: \"애플리케이션의 메인 배경 색상\",\n      },\n      {\n        name: \"Foreground\",\n        value: \"--foreground\",\n        description: \"애플리케이션의 메인 텍스트 색상\",\n      },\n      {\n        name: \"Primary\",\n        value: \"--primary\",\n        description: \"주요 액션을 위한 브랜드 색상\",\n      },\n      {\n        name: \"Primary Foreground\",\n        value: \"--primary-foreground\",\n        description: \"Primary 배경 위의 텍스트 색상\",\n      },\n      {\n        name: \"Secondary\",\n        value: \"--secondary\",\n        description: \"덜 중요한 액션을 위한 보조 색상\",\n      },\n      {\n        name: \"Secondary Foreground\",\n        value: \"--secondary-foreground\",\n        description: \"Secondary 배경 위의 텍스트 색상\",\n      },\n    ],\n  },\n};\n\n/**\n * 🗂️ Surface: 표면 색상 토큰\n *\n * 카드, 팝오버 등 UI 표면 요소를 위한 색상 토큰입니다.\n */\nexport const Surface: Story = {\n  args: {\n    colors: [\n      {\n        name: \"Card\",\n        value: \"--card\",\n        description: \"카드 컴포넌트의 배경 색상\",\n      },\n      {\n        name: \"Card Foreground\",\n        value: \"--card-foreground\",\n        description: \"Card 배경 위의 텍스트 색상\",\n      },\n      {\n        name: \"Popover\",\n        value: \"--popover\",\n        description: \"팝오버 컴포넌트의 배경 색상\",\n      },\n      {\n        name: \"Popover Foreground\",\n        value: \"--popover-foreground\",\n        description: \"Popover 배경 위의 텍스트 색상\",\n      },\n    ],\n  },\n};\n\n/**\n * ⚡ State: 상태 및 유틸리티 색상 토큰\n *\n * 비활성화, 강조, 파괴적 액션 등 다양한 상태를 나타내는 색상 토큰입니다.\n */\nexport const State: Story = {\n  args: {\n    colors: [\n      {\n        name: \"Muted\",\n        value: \"--muted\",\n        description: \"비활성화/뮤트된 요소의 배경 색상\",\n      },\n      {\n        name: \"Muted Foreground\",\n        value: \"--muted-foreground\",\n        description: \"보조 텍스트의 색상\",\n      },\n      {\n        name: \"Accent\",\n        value: \"--accent\",\n        description: \"강조 및 하이라이트를 위한 색상\",\n      },\n      {\n        name: \"Accent Foreground\",\n        value: \"--accent-foreground\",\n        description: \"Accent 배경 위의 텍스트 색상\",\n      },\n      {\n        name: \"Destructive\",\n        value: \"--destructive\",\n        description: \"파괴적/에러 액션을 위한 색상\",\n      },\n      {\n        name: \"Destructive Foreground\",\n        value: \"--destructive-foreground\",\n        description: \"Destructive 배경 위의 텍스트 색상\",\n      },\n    ],\n  },\n};\n\n/**\n * 🔲 Border: 테두리 및 입력 색상 토큰\n *\n * 폼 컨트롤과 구분선을 위한 색상 토큰입니다.\n */\nexport const Border: Story = {\n  args: {\n    colors: [\n      {\n        name: \"Border\",\n        value: \"--border\",\n        description: \"UI 요소의 기본 테두리 색상\",\n      },\n      {\n        name: \"Input\",\n        value: \"--input\",\n        description: \"입력 필드의 테두리 색상\",\n      },\n      {\n        name: \"Ring\",\n        value: \"--ring\",\n        description: \"포커스 링 색상\",\n      },\n    ],\n  },\n};\n\n/**\n * 📊 Chart: 차트 색상 팔레트\n *\n * 데이터 시각화 컴포넌트를 위한 색상 팔레트입니다.\n */\nexport const Chart: Story = {\n  args: {\n    colors: [\n      {\n        name: \"Chart 1\",\n        value: \"--chart-1\",\n        description: \"차트 팔레트의 첫 번째 색상\",\n      },\n      {\n        name: \"Chart 2\",\n        value: \"--chart-2\",\n        description: \"차트 팔레트의 두 번째 색상\",\n      },\n      {\n        name: \"Chart 3\",\n        value: \"--chart-3\",\n        description: \"차트 팔레트의 세 번째 색상\",\n      },\n      {\n        name: \"Chart 4\",\n        value: \"--chart-4\",\n        description: \"차트 팔레트의 네 번째 색상\",\n      },\n      {\n        name: \"Chart 5\",\n        value: \"--chart-5\",\n        description: \"차트 팔레트의 다섯 번째 색상\",\n      },\n    ],\n  },\n};\n\n/**\n * 🧭 Sidebar: 사이드바 색상 토큰\n *\n * 내비게이션 사이드바 컴포넌트를 위한 색상 토큰입니다.\n */\nexport const Sidebar: Story = {\n  args: {\n    colors: [\n      {\n        name: \"Sidebar\",\n        value: \"--sidebar\",\n        description: \"사이드바의 배경 색상\",\n      },\n      {\n        name: \"Sidebar Foreground\",\n        value: \"--sidebar-foreground\",\n        description: \"사이드바의 텍스트 색상\",\n      },\n      {\n        name: \"Sidebar Primary\",\n        value: \"--sidebar-primary\",\n        description: \"사이드바의 주요 색상\",\n      },\n      {\n        name: \"Sidebar Primary Foreground\",\n        value: \"--sidebar-primary-foreground\",\n        description: \"Sidebar Primary 배경 위의 텍스트 색상\",\n      },\n      {\n        name: \"Sidebar Accent\",\n        value: \"--sidebar-accent\",\n        description: \"사이드바의 강조 색상\",\n      },\n      {\n        name: \"Sidebar Accent Foreground\",\n        value: \"--sidebar-accent-foreground\",\n        description: \"Sidebar Accent 배경 위의 텍스트 색상\",\n      },\n      {\n        name: \"Sidebar Border\",\n        value: \"--sidebar-border\",\n        description: \"사이드바의 테두리 색상\",\n      },\n      {\n        name: \"Sidebar Ring\",\n        value: \"--sidebar-ring\",\n        description: \"사이드바의 포커스 링 색상\",\n      },\n    ],\n  },\n};\n\n/**\n * 🎨 Tailwind Palette: Tailwind CSS 전체 색상 팔레트\n *\n * Tailwind CSS의 22개 색상 시스템 (각 11개 shade: 50-950)과 shadcn 토큰을 함께 보여줍니다.\n * 다크모드 전환 시 shadcn 토큰 값이 실시간으로 업데이트됩니다.\n */\nexport const TailwindPalette: Story = {\n  render: () => {\n    const [tokens, setTokens] = useState<Record<string, string>>({});\n    const [isDarkMode, setIsDarkMode] = useState(false);\n\n    // 🌓 CSS 변수 값을 가져오는 함수 (다크모드 실시간 감지)\n    const updateTokens = () => {\n      const styles = getComputedStyle(document.documentElement);\n      const tokenList = [\n        \"--background\",\n        \"--foreground\",\n        \"--primary\",\n        \"--primary-foreground\",\n        \"--secondary\",\n        \"--secondary-foreground\",\n        \"--muted\",\n        \"--muted-foreground\",\n        \"--accent\",\n        \"--accent-foreground\",\n        \"--destructive\",\n        \"--destructive-foreground\",\n        \"--border\",\n        \"--input\",\n        \"--ring\",\n        \"--card\",\n        \"--card-foreground\",\n        \"--popover\",\n        \"--popover-foreground\",\n        \"--chart-1\",\n        \"--chart-2\",\n        \"--chart-3\",\n        \"--chart-4\",\n        \"--chart-5\",\n        \"--sidebar\",\n        \"--sidebar-foreground\",\n        \"--sidebar-primary\",\n        \"--sidebar-primary-foreground\",\n        \"--sidebar-accent\",\n        \"--sidebar-accent-foreground\",\n        \"--sidebar-border\",\n        \"--sidebar-ring\",\n      ];\n      const newValues: Record<string, string> = {};\n      tokenList.forEach((token) => {\n        newValues[token] = styles.getPropertyValue(token).trim();\n      });\n      setTokens(newValues);\n      setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\n    };\n\n    // 🔄 초기 로드 및 다크모드 변경 감지\n    useEffect(() => {\n      updateTokens();\n\n      // MutationObserver로 클래스 변경 감지\n      const observer = new MutationObserver((mutations) => {\n        mutations.forEach((mutation) => {\n          if (\n            mutation.type === \"attributes\" &&\n            mutation.attributeName === \"class\"\n          ) {\n            updateTokens();\n          }\n        });\n      });\n\n      observer.observe(document.documentElement, {\n        attributes: true,\n        attributeFilter: [\"class\"],\n      });\n\n      return () => {\n        observer.disconnect();\n      };\n    }, []);\n\n    // 단일 컬러 박스 컴포넌트\n    const ColorBox = ({ name, value }: { name: string; value: string }) => (\n      <div key={name} style={{ textAlign: \"center\" }}>\n        <div\n          style={{\n            background: value || \"transparent\",\n            width: \"100%\",\n            height: \"60px\",\n            borderRadius: \"8px\",\n            border: isDarkMode ? \"1px solid #333\" : \"1px solid #e5e5e5\",\n          }}\n        />\n        <p style={{ fontSize: \"12px\", marginTop: \"4px\" }}>{name}</p>\n        <code style={{ fontSize: \"10px\" }}>{value || \"-\"}</code>\n      </div>\n    );\n\n    // Tailwind 팔레트 렌더링 함수\n    const renderTailwindColors = (\n      colors: Record<string, string | Record<string, string>>,\n      parent = \"\",\n    ) => {\n      return Object.entries(colors).map(([name, value]) => {\n        const key = parent ? `${parent}-${name}` : name;\n        if (typeof value === \"string\") {\n          return <ColorBox key={key} name={key} value={value} />;\n        }\n        if (typeof value === \"object\") {\n          return (\n            <div key={key} style={{ marginBottom: \"2rem\", width: \"100%\" }}>\n              <h3\n                style={{ marginBottom: \"0.5rem\", textTransform: \"capitalize\" }}\n              >\n                {name}\n              </h3>\n              <div\n                style={{\n                  display: \"grid\",\n                  gridTemplateColumns: \"repeat(11, 1fr)\",\n                  gap: \"0.5rem\",\n                }}\n              >\n                {renderTailwindColors(value, name)}\n              </div>\n            </div>\n          );\n        }\n        return null;\n      });\n    };\n\n    // Tailwind 클래스 매핑으로 shadcn 토큰 표시\n    const tokenClassMap: Record<string, string> = {\n      \"--background\": \"bg-background\",\n      \"--foreground\": \"bg-foreground\",\n      \"--primary\": \"bg-primary\",\n      \"--primary-foreground\": \"bg-primary-foreground\",\n      \"--secondary\": \"bg-secondary\",\n      \"--secondary-foreground\": \"bg-secondary-foreground\",\n      \"--muted\": \"bg-muted\",\n      \"--muted-foreground\": \"bg-muted-foreground\",\n      \"--accent\": \"bg-accent\",\n      \"--accent-foreground\": \"bg-accent-foreground\",\n      \"--destructive\": \"bg-destructive\",\n      \"--destructive-foreground\": \"bg-destructive-foreground\",\n      \"--border\": \"bg-border\",\n      \"--input\": \"bg-input\",\n      \"--ring\": \"bg-ring\",\n      \"--card\": \"bg-card\",\n      \"--card-foreground\": \"bg-card-foreground\",\n      \"--popover\": \"bg-popover\",\n      \"--popover-foreground\": \"bg-popover-foreground\",\n      \"--chart-1\": \"bg-chart-1\",\n      \"--chart-2\": \"bg-chart-2\",\n      \"--chart-3\": \"bg-chart-3\",\n      \"--chart-4\": \"bg-chart-4\",\n      \"--chart-5\": \"bg-chart-5\",\n      \"--sidebar\": \"bg-[hsl(var(--sidebar))]\",\n      \"--sidebar-foreground\": \"bg-[hsl(var(--sidebar-foreground))]\",\n      \"--sidebar-primary\": \"bg-[hsl(var(--sidebar-primary))]\",\n      \"--sidebar-primary-foreground\":\n        \"bg-[hsl(var(--sidebar-primary-foreground))]\",\n      \"--sidebar-accent\": \"bg-[hsl(var(--sidebar-accent))]\",\n      \"--sidebar-accent-foreground\":\n        \"bg-[hsl(var(--sidebar-accent-foreground))]\",\n      \"--sidebar-border\": \"bg-[hsl(var(--sidebar-border))]\",\n      \"--sidebar-ring\": \"bg-[hsl(var(--sidebar-ring))]\",\n    };\n\n    return (\n      <div>\n        {/* 현재 테마 표시 */}\n        <div\n          style={{\n            marginBottom: \"1rem\",\n            padding: \"0.5rem\",\n            background: isDarkMode ? \"#333\" : \"#f5f5f5\",\n            borderRadius: \"4px\",\n          }}\n        >\n          <strong>Current Theme:</strong>{\" \"}\n          {isDarkMode ? \"Dark Mode\" : \"Light Mode\"}\n        </div>\n\n        {/* shadcn 토큰 */}\n        <h2 style={{ marginBottom: \"1rem\" }}>Shadcn Design Tokens</h2>\n        <div\n          style={{\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(6, 1fr)\",\n            gap: \"1rem\",\n            marginBottom: \"2rem\",\n          }}\n        >\n          {Object.entries(tokenClassMap).map(([token, className]) => {\n            const value = tokens[token];\n            return (\n              <div key={token} style={{ textAlign: \"center\" }}>\n                <div\n                  className={className}\n                  style={{\n                    width: \"100%\",\n                    height: \"60px\",\n                    borderRadius: \"8px\",\n                    border:\n                      token === \"--card\" || token === \"--background\"\n                        ? isDarkMode\n                          ? \"2px solid #666\"\n                          : \"2px solid #ccc\"\n                        : isDarkMode\n                          ? \"1px solid #333\"\n                          : \"1px solid #e5e5e5\",\n                  }}\n                />\n                <p style={{ fontSize: \"12px\", marginTop: \"4px\" }}>{token}</p>\n                <code style={{ fontSize: \"10px\" }}>\n                  {value || \"loading...\"}\n                </code>\n              </div>\n            );\n          })}\n        </div>\n\n        {/* Tailwind 팔레트 */}\n        <h2 style={{ marginBottom: \"1rem\" }}>Tailwind Color Palette</h2>\n        {renderTailwindColors(tailwindColors)}\n      </div>\n    );\n  },\n};\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "foundation",
    "tokens",
    "storybook",
    "color"
  ]
}