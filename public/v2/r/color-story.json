{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "color-story",
  "type": "registry:component",
  "title": "Color Story",
  "author": "Lloyd Richards <lloyd.d.richards@gmail.com>",
  "description": "Design system documentation and examples for color tokens and themes",
  "registryDependencies": [
    "table"
  ],
  "files": [
    {
      "path": "src/registry/tokens/color-story/color.stories.tsx",
      "content": "import {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\n// Replace nextjs-vite with the name of your framework\nimport type { Meta, StoryObj } from \"@storybook/nextjs-vite\";\n\ntype Color = {\n  name: string;\n  value: string;\n  description?: string;\n};\n\nconst ColorTile = ({ value, name }: Pick<Color, \"value\" | \"name\">) => {\n  const style = window.getComputedStyle(document.body);\n  const colorValue = style.getPropertyValue(value);\n\n  return (\n    <div className=\"flex flex-col items-center gap-2\">\n      <div\n        className=\"size-20 rounded-md border\"\n        style={{ backgroundColor: `hsl(${colorValue})` }}\n      />\n      <p className=\"text-center text-xs opacity-70\">{value}</p>\n      <p className=\"text-center font-mono text-xs\">{colorValue}</p>\n    </div>\n  );\n};\n\n/**\n * Color tokens for the design system\n */\nconst meta: Meta<{\n  colors: Color[];\n}> = {\n  title: \"foundation/Color\",\n  argTypes: {},\n  render: (args) => (\n    <Table>\n      <TableHeader>\n        <TableRow>\n          <TableHead>Name</TableHead>\n          <TableHead>Description</TableHead>\n          <TableHead>\n            <span className=\"sr-only\">Preview</span>\n          </TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {args.colors.map(({ name, value, description }) => (\n          <TableRow key={name}>\n            <TableCell className=\"font-medium\">{name}</TableCell>\n            <TableCell className=\"text-muted-foreground text-sm\">\n              {description}\n            </TableCell>\n            <TableCell>\n              <ColorTile value={value} name={name} />\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  ),\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\n\n/**\n * Primary color tokens used throughout the application for backgrounds, text, and UI elements.\n */\nexport const Primary: Story = {\n  args: {\n    colors: [\n      {\n        name: \"Background\",\n        value: \"--background\",\n        description: \"Main background color for the application\",\n      },\n      {\n        name: \"Foreground\",\n        value: \"--foreground\",\n        description: \"Main text color for the application\",\n      },\n      {\n        name: \"Primary\",\n        value: \"--primary\",\n        description: \"Primary brand color for key actions\",\n      },\n      {\n        name: \"Primary Foreground\",\n        value: \"--primary-foreground\",\n        description: \"Text color on primary background\",\n      },\n      {\n        name: \"Secondary\",\n        value: \"--secondary\",\n        description: \"Secondary color for less prominent actions\",\n      },\n      {\n        name: \"Secondary Foreground\",\n        value: \"--secondary-foreground\",\n        description: \"Text color on secondary background\",\n      },\n    ],\n  },\n};\n\n/**\n * Semantic color tokens for cards, popovers, and overlays.\n */\nexport const Surface: Story = {\n  args: {\n    colors: [\n      {\n        name: \"Card\",\n        value: \"--card\",\n        description: \"Background color for card components\",\n      },\n      {\n        name: \"Card Foreground\",\n        value: \"--card-foreground\",\n        description: \"Text color on card background\",\n      },\n      {\n        name: \"Popover\",\n        value: \"--popover\",\n        description: \"Background color for popover components\",\n      },\n      {\n        name: \"Popover Foreground\",\n        value: \"--popover-foreground\",\n        description: \"Text color on popover background\",\n      },\n    ],\n  },\n};\n\n/**\n * State and utility color tokens for muted content, accents, and destructive actions.\n */\nexport const State: Story = {\n  args: {\n    colors: [\n      {\n        name: \"Muted\",\n        value: \"--muted\",\n        description: \"Background color for muted/disabled elements\",\n      },\n      {\n        name: \"Muted Foreground\",\n        value: \"--muted-foreground\",\n        description: \"Text color for muted/secondary text\",\n      },\n      {\n        name: \"Accent\",\n        value: \"--accent\",\n        description: \"Accent color for highlights\",\n      },\n      {\n        name: \"Accent Foreground\",\n        value: \"--accent-foreground\",\n        description: \"Text color on accent background\",\n      },\n      {\n        name: \"Destructive\",\n        value: \"--destructive\",\n        description: \"Color for destructive/error actions\",\n      },\n      {\n        name: \"Destructive Foreground\",\n        value: \"--destructive-foreground\",\n        description: \"Text color on destructive background\",\n      },\n    ],\n  },\n};\n\n/**\n * Border and input color tokens for form controls and separators.\n */\nexport const Border: Story = {\n  args: {\n    colors: [\n      {\n        name: \"Border\",\n        value: \"--border\",\n        description: \"Default border color for UI elements\",\n      },\n      {\n        name: \"Input\",\n        value: \"--input\",\n        description: \"Border color for input fields\",\n      },\n      {\n        name: \"Ring\",\n        value: \"--ring\",\n        description: \"Focus ring color for interactive elements\",\n      },\n    ],\n  },\n};\n\n/**\n * Chart color palette for data visualization components.\n */\nexport const Chart: Story = {\n  args: {\n    colors: [\n      {\n        name: \"Chart 1\",\n        value: \"--chart-1\",\n        description: \"First color in chart palette\",\n      },\n      {\n        name: \"Chart 2\",\n        value: \"--chart-2\",\n        description: \"Second color in chart palette\",\n      },\n      {\n        name: \"Chart 3\",\n        value: \"--chart-3\",\n        description: \"Third color in chart palette\",\n      },\n      {\n        name: \"Chart 4\",\n        value: \"--chart-4\",\n        description: \"Fourth color in chart palette\",\n      },\n      {\n        name: \"Chart 5\",\n        value: \"--chart-5\",\n        description: \"Fifth color in chart palette\",\n      },\n    ],\n  },\n};\n\n/**\n * Sidebar component color tokens for navigation.\n */\nexport const Sidebar: Story = {\n  args: {\n    colors: [\n      {\n        name: \"Sidebar\",\n        value: \"--sidebar\",\n        description: \"Background color for sidebar\",\n      },\n      {\n        name: \"Sidebar Foreground\",\n        value: \"--sidebar-foreground\",\n        description: \"Text color in sidebar\",\n      },\n      {\n        name: \"Sidebar Primary\",\n        value: \"--sidebar-primary\",\n        description: \"Primary color in sidebar\",\n      },\n      {\n        name: \"Sidebar Primary Foreground\",\n        value: \"--sidebar-primary-foreground\",\n        description: \"Text color on sidebar primary background\",\n      },\n      {\n        name: \"Sidebar Accent\",\n        value: \"--sidebar-accent\",\n        description: \"Accent color in sidebar\",\n      },\n      {\n        name: \"Sidebar Accent Foreground\",\n        value: \"--sidebar-accent-foreground\",\n        description: \"Text color on sidebar accent background\",\n      },\n      {\n        name: \"Sidebar Border\",\n        value: \"--sidebar-border\",\n        description: \"Border color in sidebar\",\n      },\n      {\n        name: \"Sidebar Ring\",\n        value: \"--sidebar-ring\",\n        description: \"Focus ring color in sidebar\",\n      },\n    ],\n  },\n};\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "foundation",
    "tokens",
    "storybook",
    "color"
  ]
}