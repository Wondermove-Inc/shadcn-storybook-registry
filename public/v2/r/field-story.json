{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "field-story",
  "type": "registry:component",
  "title": "Field Story",
  "author": "Lloyd Richards <lloyd.d.richards@gmail.com>",
  "description": "Interactive Storybook stories demonstrating form field component with labels, descriptions, and error states",
  "dependencies": [],
  "registryDependencies": [
    "field",
    "input",
    "textarea",
    "select",
    "checkbox",
    "radio-group",
    "button"
  ],
  "files": [
    {
      "path": "src/registry/atoms/field-story/field.stories.tsx",
      "content": "import { Button } from \"@/components/ui/button\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport {\n  Field,\n  FieldDescription,\n  FieldError,\n  FieldGroup,\n  FieldLabel,\n  FieldLegend,\n  FieldSeparator,\n  FieldSet,\n} from \"@/components/ui/field\";\nimport { Input } from \"@/components/ui/input\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport type { Meta, StoryObj } from \"@storybook/nextjs-vite\";\n\n/**\n * A composable component for building accessible form fields with labels, descriptions, and error messages.\n * Provides consistent layout and styling for form inputs.\n */\nconst meta = {\n  title: \"ui/Field\",\n  component: Field,\n  tags: [\"autodocs\"],\n  parameters: {\n    layout: \"centered\",\n  },\n} satisfies Meta<typeof Field>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\n/**\n * 기본 필드 예제입니다.\n * 레이블과 입력 필드의 기본 조합을 보여줍니다.\n */\nexport const Default: Story = {\n  render: () => (\n    <Field>\n      <FieldLabel htmlFor=\"default-field\">Name</FieldLabel>\n      <Input id=\"default-field\" placeholder=\"Enter your name\" />\n    </Field>\n  ),\n};\n\n/**\n * FieldDemo 예제입니다.\n * 결제 방법 폼을 통해 Field 컴포넌트의 다양한 기능을 보여줍니다.\n */\nexport const Demo: Story = {\n  render: () => (\n    <div className=\"w-full max-w-md\">\n      <form>\n        <FieldGroup>\n          <FieldSet>\n            <FieldLegend>Payment Method</FieldLegend>\n            <FieldDescription>\n              All transactions are secure and encrypted\n            </FieldDescription>\n            <FieldGroup>\n              <Field>\n                <FieldLabel htmlFor=\"checkout-7j9-card-name-43j\">\n                  Name on Card\n                </FieldLabel>\n                <Input\n                  id=\"checkout-7j9-card-name-43j\"\n                  placeholder=\"Evil Rabbit\"\n                  required\n                />\n              </Field>\n              <Field>\n                <FieldLabel htmlFor=\"checkout-7j9-card-number-uw1\">\n                  Card Number\n                </FieldLabel>\n                <Input\n                  id=\"checkout-7j9-card-number-uw1\"\n                  placeholder=\"1234 5678 9012 3456\"\n                  required\n                />\n                <FieldDescription>\n                  Enter your 16-digit card number\n                </FieldDescription>\n              </Field>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <Field>\n                  <FieldLabel htmlFor=\"checkout-7j9-expiry-f52\">\n                    Expiry Date\n                  </FieldLabel>\n                  <Input\n                    id=\"checkout-7j9-expiry-f52\"\n                    placeholder=\"MM/YY\"\n                    required\n                  />\n                </Field>\n                <Field>\n                  <FieldLabel htmlFor=\"checkout-7j9-cvc-u31\">CVV</FieldLabel>\n                  <Input id=\"checkout-7j9-cvc-u31\" placeholder=\"123\" required />\n                </Field>\n              </div>\n            </FieldGroup>\n            <FieldSeparator>Or</FieldSeparator>\n            <FieldGroup>\n              <Field>\n                <FieldLabel htmlFor=\"checkout-7j9-digital-wallet-w8i\">\n                  Digital Wallet\n                </FieldLabel>\n                <Select>\n                  <SelectTrigger id=\"checkout-7j9-digital-wallet-w8i\">\n                    <SelectValue placeholder=\"Select wallet\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"apple-pay\">Apple Pay</SelectItem>\n                    <SelectItem value=\"google-pay\">Google Pay</SelectItem>\n                    <SelectItem value=\"paypal\">PayPal</SelectItem>\n                  </SelectContent>\n                </Select>\n              </Field>\n            </FieldGroup>\n          </FieldSet>\n          <FieldSet>\n            <FieldLegend>Billing Address</FieldLegend>\n            <FieldGroup>\n              <Field>\n                <FieldLabel htmlFor=\"checkout-7j9-address-ert\">\n                  Address\n                </FieldLabel>\n                <Input\n                  id=\"checkout-7j9-address-ert\"\n                  placeholder=\"123 Main St\"\n                  required\n                />\n              </Field>\n              <Field>\n                <FieldLabel htmlFor=\"checkout-7j9-city-l9r\">City</FieldLabel>\n                <Input\n                  id=\"checkout-7j9-city-l9r\"\n                  placeholder=\"New York\"\n                  required\n                />\n              </Field>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <Field>\n                  <FieldLabel htmlFor=\"checkout-7j9-state-b4j\">\n                    State\n                  </FieldLabel>\n                  <Input id=\"checkout-7j9-state-b4j\" placeholder=\"NY\" />\n                </Field>\n                <Field>\n                  <FieldLabel htmlFor=\"checkout-7j9-zip-i6t\">\n                    ZIP Code\n                  </FieldLabel>\n                  <Input id=\"checkout-7j9-zip-i6t\" placeholder=\"10001\" />\n                </Field>\n              </div>\n            </FieldGroup>\n          </FieldSet>\n          <Field orientation=\"horizontal\" className=\"items-center\">\n            <Checkbox id=\"checkout-7j9-save-info-d5m\" />\n            <FieldLabel htmlFor=\"checkout-7j9-save-info-d5m\">\n              Save this information for next time\n            </FieldLabel>\n          </Field>\n          <Button type=\"submit\" className=\"w-full\">\n            Complete Purchase\n          </Button>\n        </FieldGroup>\n      </form>\n    </div>\n  ),\n};\n\n/**\n * 수직 방향 필드입니다.\n * 레이블이 입력 필드 위에 위치합니다.\n */\nexport const Vertical: Story = {\n  render: () => (\n    <Field orientation=\"vertical\" className=\"w-[300px]\">\n      <FieldLabel htmlFor=\"vertical-field\">Email</FieldLabel>\n      <Input id=\"vertical-field\" type=\"email\" placeholder=\"example@email.com\" />\n      <FieldDescription>We'll never share your email.</FieldDescription>\n    </Field>\n  ),\n};\n\n/**\n * 수평 방향 필드입니다.\n * 레이블과 입력 필드가 나란히 위치합니다.\n */\nexport const Horizontal: Story = {\n  render: () => (\n    <Field orientation=\"horizontal\" className=\"w-[400px]\">\n      <FieldLabel htmlFor=\"horizontal-field\">Username</FieldLabel>\n      <Input id=\"horizontal-field\" placeholder=\"@username\" />\n    </Field>\n  ),\n};\n\n/**\n * 반응형 필드입니다.\n * 화면 크기에 따라 수직/수평 레이아웃이 자동으로 변경됩니다.\n */\nexport const Responsive: Story = {\n  render: () => (\n    <Field orientation=\"responsive\" className=\"w-full max-w-[400px]\">\n      <FieldLabel htmlFor=\"responsive-field\">Full Name</FieldLabel>\n      <Input id=\"responsive-field\" placeholder=\"John Doe\" />\n    </Field>\n  ),\n};\n\n/**\n * 설명이 포함된 필드입니다.\n * 추가적인 도움말이나 안내를 제공합니다.\n */\nexport const WithDescription: Story = {\n  render: () => (\n    <Field>\n      <FieldLabel htmlFor=\"description-field\">Password</FieldLabel>\n      <Input id=\"description-field\" type=\"password\" />\n      <FieldDescription>Must be at least 8 characters long</FieldDescription>\n    </Field>\n  ),\n};\n\n/**\n * 오류 상태의 필드입니다.\n * 유효성 검사 실패 시 오류 메시지를 표시합니다.\n */\nexport const WithError: Story = {\n  render: () => (\n    <Field>\n      <FieldLabel htmlFor=\"error-field\">Email</FieldLabel>\n      <Input\n        id=\"error-field\"\n        type=\"email\"\n        placeholder=\"example@email.com\"\n        aria-invalid=\"true\"\n        className=\"border-destructive\"\n      />\n      <FieldError>Please enter a valid email address</FieldError>\n    </Field>\n  ),\n};\n\n/**\n * 여러 오류가 있는 필드입니다.\n * 여러 개의 유효성 검사 오류를 목록으로 표시합니다.\n */\nexport const WithMultipleErrors: Story = {\n  render: () => (\n    <Field>\n      <FieldLabel htmlFor=\"multi-error-field\">Password</FieldLabel>\n      <Input\n        id=\"multi-error-field\"\n        type=\"password\"\n        aria-invalid=\"true\"\n        className=\"border-destructive\"\n      />\n      <FieldError\n        errors={[\n          { message: \"Password must be at least 8 characters\" },\n          { message: \"Password must contain at least one number\" },\n          { message: \"Password must contain at least one special character\" },\n        ]}\n      />\n    </Field>\n  ),\n};\n\n/**\n * FieldSet 예제입니다.\n * 관련 필드들을 그룹화합니다.\n */\nexport const WithFieldSet: Story = {\n  render: () => (\n    <FieldSet className=\"w-full max-w-[400px]\">\n      <FieldLegend>Personal Information</FieldLegend>\n      <FieldDescription>Please provide your personal details</FieldDescription>\n      <FieldGroup>\n        <Field>\n          <FieldLabel htmlFor=\"fieldset-name\">Name</FieldLabel>\n          <Input id=\"fieldset-name\" placeholder=\"John Doe\" />\n        </Field>\n        <Field>\n          <FieldLabel htmlFor=\"fieldset-email\">Email</FieldLabel>\n          <Input\n            id=\"fieldset-email\"\n            type=\"email\"\n            placeholder=\"john@example.com\"\n          />\n        </Field>\n        <Field>\n          <FieldLabel htmlFor=\"fieldset-phone\">Phone</FieldLabel>\n          <Input id=\"fieldset-phone\" type=\"tel\" placeholder=\"+1234567890\" />\n        </Field>\n      </FieldGroup>\n    </FieldSet>\n  ),\n};\n\n/**\n * Textarea 필드 예제입니다.\n * 여러 줄의 텍스트 입력을 위한 필드입니다.\n */\nexport const WithTextarea: Story = {\n  render: () => (\n    <Field>\n      <FieldLabel htmlFor=\"textarea-field\">Message</FieldLabel>\n      <Textarea\n        id=\"textarea-field\"\n        placeholder=\"Type your message here...\"\n        rows={4}\n      />\n      <FieldDescription>Maximum 500 characters</FieldDescription>\n    </Field>\n  ),\n};\n\n/**\n * Select 필드 예제입니다.\n * 드롭다운 선택을 위한 필드입니다.\n */\nexport const WithSelect: Story = {\n  render: () => (\n    <Field>\n      <FieldLabel htmlFor=\"select-field\">Country</FieldLabel>\n      <Select>\n        <SelectTrigger id=\"select-field\">\n          <SelectValue placeholder=\"Select a country\" />\n        </SelectTrigger>\n        <SelectContent>\n          <SelectItem value=\"us\">United States</SelectItem>\n          <SelectItem value=\"uk\">United Kingdom</SelectItem>\n          <SelectItem value=\"ca\">Canada</SelectItem>\n          <SelectItem value=\"au\">Australia</SelectItem>\n        </SelectContent>\n      </Select>\n    </Field>\n  ),\n};\n\n/**\n * Checkbox 필드 예제입니다.\n * 체크박스와 레이블을 수평으로 배치합니다.\n */\nexport const WithCheckbox: Story = {\n  render: () => (\n    <div className=\"space-y-3\">\n      <Field orientation=\"horizontal\" className=\"items-center\">\n        <Checkbox id=\"terms-field\" />\n        <FieldLabel htmlFor=\"terms-field\">\n          I agree to the terms and conditions\n        </FieldLabel>\n      </Field>\n      <Field orientation=\"horizontal\" className=\"items-center\">\n        <Checkbox id=\"newsletter-field\" />\n        <FieldLabel htmlFor=\"newsletter-field\">\n          Subscribe to newsletter\n        </FieldLabel>\n      </Field>\n    </div>\n  ),\n};\n\n/**\n * Radio Group 필드 예제입니다.\n * 여러 옵션 중 하나를 선택할 수 있습니다.\n */\nexport const WithRadioGroup: Story = {\n  render: () => (\n    <FieldSet>\n      <FieldLegend>Notification Preferences</FieldLegend>\n      <FieldDescription>\n        Choose how you want to receive notifications\n      </FieldDescription>\n      <RadioGroup defaultValue=\"email\">\n        <Field orientation=\"horizontal\" className=\"items-center\">\n          <RadioGroupItem value=\"email\" id=\"radio-email\" />\n          <FieldLabel htmlFor=\"radio-email\">Email</FieldLabel>\n        </Field>\n        <Field orientation=\"horizontal\" className=\"items-center\">\n          <RadioGroupItem value=\"sms\" id=\"radio-sms\" />\n          <FieldLabel htmlFor=\"radio-sms\">SMS</FieldLabel>\n        </Field>\n        <Field orientation=\"horizontal\" className=\"items-center\">\n          <RadioGroupItem value=\"push\" id=\"radio-push\" />\n          <FieldLabel htmlFor=\"radio-push\">Push Notifications</FieldLabel>\n        </Field>\n      </RadioGroup>\n    </FieldSet>\n  ),\n};\n\n/**\n * FieldSeparator 예제입니다.\n * 필드 그룹 사이에 구분선과 텍스트를 추가합니다.\n */\nexport const WithSeparator: Story = {\n  render: () => (\n    <FieldGroup className=\"w-full max-w-[400px]\">\n      <Field>\n        <FieldLabel htmlFor=\"login-email\">Email</FieldLabel>\n        <Input id=\"login-email\" type=\"email\" placeholder=\"Enter your email\" />\n      </Field>\n      <Field>\n        <FieldLabel htmlFor=\"login-password\">Password</FieldLabel>\n        <Input id=\"login-password\" type=\"password\" />\n      </Field>\n      <FieldSeparator>Or continue with</FieldSeparator>\n      <Button variant=\"outline\" className=\"w-full\">\n        Sign in with Google\n      </Button>\n      <Button variant=\"outline\" className=\"w-full\">\n        Sign in with GitHub\n      </Button>\n    </FieldGroup>\n  ),\n};\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "atoms",
    "storybook",
    "field",
    "form"
  ]
}