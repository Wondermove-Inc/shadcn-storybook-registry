{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "field-story",
  "type": "registry:component",
  "title": "Field Story",
  "author": "Lloyd Richards <lloyd.d.richards@gmail.com>",
  "description": "Interactive Storybook stories demonstrating field component usage and form composition",
  "registryDependencies": [
    "field",
    "input",
    "textarea",
    "select",
    "slider",
    "checkbox",
    "radio-group",
    "switch"
  ],
  "files": [
    {
      "path": "src/registry/atoms/field-story/field.stories.tsx",
      "content": "import React, { useState } from \"react\";\nimport type { Meta, StoryObj } from \"@storybook/react-vite\";\nimport {\n  Field,\n  FieldLabel,\n  FieldDescription,\n  FieldContent,\n  FieldTitle,\n  FieldSet,\n  FieldLegend,\n  FieldGroup,\n  FieldSeparator,\n} from \"@/components/ui/field\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Slider } from \"@/components/ui/slider\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Button } from \"@/components/ui/button\";\n\n/**\n * Field 컴포넌트는 폼 필드를 구성하고 레이블, 설명, 오류 메시지를 관리하는 데 사용됩니다.\n * shadcn/ui 공식 문서의 예제들을 기반으로 구현되었습니다.\n */\nconst meta: Meta<typeof Field> = {\n  title: \"ui/Field\",\n  component: Field,\n  tags: [\"autodocs\"],\n  parameters: {\n    layout: \"centered\",\n  },\n} satisfies Meta<typeof Field>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\n/**\n * 기본 Input Field - 사용자 이름 입력\n */\nexport const InputField: Story = {\n  render: () => (\n    <Field>\n      <FieldLabel htmlFor=\"username\">Username</FieldLabel>\n      <Input id=\"username\" type=\"text\" placeholder=\"Max Leiter\" />\n      <FieldDescription>\n        Choose a unique username for your account.\n      </FieldDescription>\n    </Field>\n  ),\n};\n\n/**\n * Textarea Field - 피드백 입력\n */\nexport const TextareaField: Story = {\n  render: () => (\n    <Field>\n      <FieldLabel htmlFor=\"feedback\">Feedback</FieldLabel>\n      <Textarea\n        id=\"feedback\"\n        placeholder=\"Your feedback helps us improve...\"\n        rows={4}\n      />\n      <FieldDescription>\n        Share your thoughts about our service.\n      </FieldDescription>\n    </Field>\n  ),\n};\n\n/**\n * Select Field - 부서 선택\n */\nexport const SelectField: Story = {\n  render: () => (\n    <Field>\n      <FieldLabel>Department</FieldLabel>\n      <Select>\n        <SelectTrigger>\n          <SelectValue placeholder=\"Choose department\" />\n        </SelectTrigger>\n        <SelectContent>\n          <SelectItem value=\"engineering\">Engineering</SelectItem>\n          <SelectItem value=\"marketing\">Marketing</SelectItem>\n          <SelectItem value=\"sales\">Sales</SelectItem>\n          <SelectItem value=\"support\">Support</SelectItem>\n        </SelectContent>\n      </Select>\n      <FieldDescription>\n        Select your department or area of work.\n      </FieldDescription>\n    </Field>\n  ),\n};\n\n/**\n * Slider Field - 가격 범위 선택\n */\nexport const SliderField: Story = {\n  render: () => {\n    const [value, setValue] = useState([500]);\n\n    return (\n      <Field>\n        <FieldTitle>Price Range</FieldTitle>\n        <FieldDescription>Set your budget range ($200 - 800).</FieldDescription>\n        <Slider\n          value={value}\n          onValueChange={setValue}\n          max={1000}\n          min={0}\n          step={10}\n          className=\"w-[300px]\"\n        />\n      </Field>\n    );\n  },\n};\n\n/**\n * Fieldset - 관련 필드의 그룹화\n */\nexport const FieldsetExample: Story = {\n  render: () => (\n    <FieldSet>\n      <FieldLegend>Personal Information</FieldLegend>\n      <FieldDescription>\n        Please provide your basic information.\n      </FieldDescription>\n      <FieldGroup>\n        <Field>\n          <FieldLabel htmlFor=\"first-name\">First Name</FieldLabel>\n          <Input id=\"first-name\" placeholder=\"John\" />\n        </Field>\n        <Field>\n          <FieldLabel htmlFor=\"last-name\">Last Name</FieldLabel>\n          <Input id=\"last-name\" placeholder=\"Doe\" />\n        </Field>\n        <Field>\n          <FieldLabel htmlFor=\"email\">Email</FieldLabel>\n          <Input id=\"email\" type=\"email\" placeholder=\"john@example.com\" />\n        </Field>\n      </FieldGroup>\n    </FieldSet>\n  ),\n};\n\n/**\n * Checkbox Field - 하드 디스크 선택\n */\nexport const CheckboxField: Story = {\n  render: () => (\n    <Field orientation=\"horizontal\">\n      <Checkbox id=\"hard-disks\" />\n      <FieldLabel htmlFor=\"hard-disks\" className=\"font-normal\">\n        Hard disks\n      </FieldLabel>\n    </Field>\n  ),\n};\n\n/**\n * Radio Field - 요금제 선택\n */\nexport const RadioField: Story = {\n  render: () => (\n    <Field>\n      <FieldLabel>Choose a plan</FieldLabel>\n      <RadioGroup defaultValue=\"monthly\">\n        <Field orientation=\"horizontal\">\n          <RadioGroupItem value=\"monthly\" id=\"plan-monthly\" />\n          <FieldLabel htmlFor=\"plan-monthly\" className=\"font-normal\">\n            Monthly\n          </FieldLabel>\n        </Field>\n        <Field orientation=\"horizontal\">\n          <RadioGroupItem value=\"yearly\" id=\"plan-yearly\" />\n          <FieldLabel htmlFor=\"plan-yearly\" className=\"font-normal\">\n            Yearly\n          </FieldLabel>\n        </Field>\n      </RadioGroup>\n    </Field>\n  ),\n};\n\n/**\n * Switch Field - 알림 설정\n */\nexport const SwitchField: Story = {\n  render: () => (\n    <Field orientation=\"horizontal\">\n      <Switch id=\"notifications\" />\n      <FieldContent>\n        <FieldLabel htmlFor=\"notifications\">Notifications</FieldLabel>\n        <FieldDescription>Email, SMS, and push options.</FieldDescription>\n      </FieldContent>\n    </Field>\n  ),\n};\n\n/**\n * Choice Card - 구독 플랜 선택\n */\nexport const ChoiceCard: Story = {\n  render: () => (\n    <div className=\"w-full max-w-md\">\n      <FieldGroup>\n        <FieldSet>\n          <FieldLabel htmlFor=\"subscription-plan\">Subscription Plan</FieldLabel>\n          <FieldDescription>\n            Choose the plan that best fits your needs.\n          </FieldDescription>\n          <RadioGroup defaultValue=\"pro\">\n            <FieldLabel htmlFor=\"basic-plan\">\n              <Field orientation=\"horizontal\">\n                <FieldContent>\n                  <FieldTitle>Basic Plan</FieldTitle>\n                  <FieldDescription>\n                    Perfect for small teams getting started.\n                  </FieldDescription>\n                </FieldContent>\n                <RadioGroupItem value=\"basic\" id=\"basic-plan\" />\n              </Field>\n            </FieldLabel>\n            <FieldLabel htmlFor=\"pro-plan\">\n              <Field orientation=\"horizontal\">\n                <FieldContent>\n                  <FieldTitle>Pro Plan</FieldTitle>\n                  <FieldDescription>\n                    Advanced features for growing businesses.\n                  </FieldDescription>\n                </FieldContent>\n                <RadioGroupItem value=\"pro\" id=\"pro-plan\" />\n              </Field>\n            </FieldLabel>\n            <FieldLabel htmlFor=\"enterprise-plan\">\n              <Field orientation=\"horizontal\">\n                <FieldContent>\n                  <FieldTitle>Enterprise Plan</FieldTitle>\n                  <FieldDescription>\n                    Custom solutions for large organizations.\n                  </FieldDescription>\n                </FieldContent>\n                <RadioGroupItem value=\"enterprise\" id=\"enterprise-plan\" />\n              </Field>\n            </FieldLabel>\n          </RadioGroup>\n        </FieldSet>\n      </FieldGroup>\n    </div>\n  ),\n};\n\n/**\n * Field Group - 구분자가 있는 필드 그룹\n */\nexport const FieldGroupExample: Story = {\n  render: () => (\n    <div className=\"w-96\">\n      <FieldGroup>\n        <FieldSet>\n          <FieldLegend>Account Settings</FieldLegend>\n          <Field orientation=\"horizontal\">\n            <Checkbox id=\"newsletter\" />\n            <FieldLabel htmlFor=\"newsletter\" className=\"font-normal\">\n              Subscribe to newsletter\n            </FieldLabel>\n          </Field>\n          <Field orientation=\"horizontal\">\n            <Checkbox id=\"marketing\" />\n            <FieldLabel htmlFor=\"marketing\" className=\"font-normal\">\n              Receive marketing emails\n            </FieldLabel>\n          </Field>\n        </FieldSet>\n\n        <FieldSeparator>Privacy Settings</FieldSeparator>\n\n        <FieldSet>\n          <Field orientation=\"horizontal\">\n            <Checkbox id=\"analytics\" />\n            <FieldLabel htmlFor=\"analytics\" className=\"font-normal\">\n              Allow analytics tracking\n            </FieldLabel>\n          </Field>\n          <Field orientation=\"horizontal\">\n            <Checkbox id=\"cookies\" />\n            <FieldLabel htmlFor=\"cookies\" className=\"font-normal\">\n              Accept cookies\n            </FieldLabel>\n          </Field>\n        </FieldSet>\n      </FieldGroup>\n    </div>\n  ),\n};\n\n/**\n * Responsive Layout - 반응형 필드 레이아웃\n */\nexport const ResponsiveLayout: Story = {\n  render: () => (\n    <div className=\"w-full max-w-4xl\">\n      <form>\n        <FieldSet>\n          <FieldLegend>Profile</FieldLegend>\n          <FieldDescription>Fill in your profile information.</FieldDescription>\n          <FieldSeparator />\n          <FieldGroup>\n            <Field orientation=\"responsive\">\n              <FieldContent>\n                <FieldLabel htmlFor=\"name\">Name</FieldLabel>\n                <FieldDescription>\n                  Provide your full name for identification\n                </FieldDescription>\n              </FieldContent>\n              <Input id=\"name\" placeholder=\"Evil Rabbit\" required />\n            </Field>\n            <FieldSeparator />\n            <Field orientation=\"responsive\">\n              <FieldContent>\n                <FieldLabel htmlFor=\"message\">Message</FieldLabel>\n                <FieldDescription>\n                  You can write your message here. Keep it short, preferably\n                  under 100 characters.\n                </FieldDescription>\n              </FieldContent>\n              <Textarea\n                id=\"message\"\n                placeholder=\"Hello, world!\"\n                required\n                className=\"min-h-[100px] resize-none sm:min-w-[300px]\"\n              />\n            </Field>\n            <FieldSeparator />\n            <Field orientation=\"responsive\">\n              <Button type=\"submit\">Submit</Button>\n              <Button type=\"button\" variant=\"outline\">\n                Cancel\n              </Button>\n            </Field>\n          </FieldGroup>\n        </FieldSet>\n      </form>\n    </div>\n  ),\n};\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "atoms",
    "storybook",
    "field",
    "form"
  ]
}