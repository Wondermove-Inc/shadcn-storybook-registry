{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "chart-data-story",
  "type": "registry:component",
  "title": "Chart Data Story",
  "author": "Lloyd Richards <lloyd.d.richards@gmail.com>",
  "description": "Dark theme system monitoring dashboard with hourly usage bar chart, radial distribution charts, and warnings table",
  "dependencies": [
    "recharts",
    "lucide-react"
  ],
  "registryDependencies": [
    "chart",
    "table",
    "badge",
    "toggle-group",
    "card"
  ],
  "files": [
    {
      "path": "src/registry/templates/contents/chart-data.tsx",
      "content": "\"use client\";\n\nimport React from \"react\";\nimport { ToggleGroup, ToggleGroupItem } from \"@/components/ui/toggle-group\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Badge } from \"@/components/ui/badge\";\nimport {\n  Item,\n  ItemContent,\n  ItemGroup,\n  ItemMedia,\n  ItemTitle,\n} from \"@/components/ui/item\";\nimport {\n  Card,\n  CardContent,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { ChartContainer, ChartConfig } from \"@/components/ui/chart\";\nimport { RadialBar, RadialBarChart } from \"recharts\";\nimport { TriangleAlert, BadgeCheck } from \"lucide-react\";\nimport { Area, AreaChart, CartesianGrid, XAxis, YAxis } from \"recharts\";\nimport { ChartTooltip, ChartTooltipContent } from \"@/components/ui/chart\";\n\n/**\n * 🎯 목적: ChartData 컴포넌트 Props 타입 정의\n * 스크린샷 기반 다크 테마 대시보드 컴포넌트\n */\ninterface ChartDataProps {\n  className?: string;\n}\n\n/**\n * 🎯 목적: 시간별 사용량 데이터 (JSON UIDL 기반)\n */\nconst hourlyData = [\n  { hour: \"15:00\", value: 953.7 },\n  { hour: \"16:00\", value: 1600 },\n  { hour: \"17:00\", value: 2800 },\n  { hour: \"18:00\", value: 1800 },\n  { hour: \"19:00\", value: 1200 },\n  { hour: \"20:00\", value: 1600 },\n];\n\n/**\n * 🎯 목적: CPU 사용량 데이터 (Simple Radial Chart 형식)\n */\nconst cpuData = [\n  { metric: \"usage\", value: 0.06, fill: \"var(--color-usage)\" },\n  { metric: \"requests\", value: 1.1, fill: \"var(--color-requests)\" },\n  { metric: \"limits\", value: 0.2, fill: \"var(--color-limits)\" },\n  { metric: \"allocatable\", value: 4.0, fill: \"var(--color-allocatable)\" },\n  { metric: \"capacity\", value: 4.0, fill: \"var(--color-capacity)\" },\n];\n\n/**\n * 🎯 목적: Memory 사용량 데이터 (Simple Radial Chart 형식)\n */\nconst memoryData = [\n  { metric: \"usage\", value: 1.3, fill: \"var(--color-usage)\" },\n  { metric: \"requests\", value: 304.0, fill: \"var(--color-requests)\" },\n  { metric: \"limits\", value: 468.0, fill: \"var(--color-limits)\" },\n  { metric: \"allocatable\", value: 3700, fill: \"var(--color-allocatable)\" },\n  { metric: \"capacity\", value: 3800, fill: \"var(--color-capacity)\" },\n];\n\n/**\n * 🎯 목적: Pods 데이터 (Simple Radial Chart 형식)\n */\nconst podsData = [\n  { metric: \"usage\", value: 15, fill: \"var(--color-usage)\" },\n  { metric: \"allocatable\", value: 110, fill: \"var(--color-allocatable)\" },\n  { metric: \"capacity\", value: 110, fill: \"var(--color-capacity)\" },\n];\n\n/**\n * 🎯 목적: 경고 테이블 데이터\n */\nconst warningData = [\n  {\n    id: \"1\",\n    col1: \"Table Cell Text\",\n    col2: \"Table Cell Text\",\n    col3: \"Table Cell Text\",\n    col4: \"Table Cell Text\",\n    badge: \"Badge\",\n  },\n  {\n    id: \"2\",\n    col1: \"Table Cell Text\",\n    col2: \"Table Cell Text\",\n    col3: \"Table Cell Text\",\n    col4: \"Table Cell Text\",\n    badge: \"Badge\",\n  },\n  {\n    id: \"3\",\n    col1: \"Table Cell Text\",\n    col2: \"Table Cell Text\",\n    col3: \"Table Cell Text\",\n    col4: \"Table Cell Text\",\n    badge: \"Badge\",\n  },\n  {\n    id: \"4\",\n    col1: \"Table Cell Text\",\n    col2: \"Table Cell Text\",\n    col3: \"Table Cell Text\",\n    col4: \"Table Cell Text\",\n    badge: \"Verified\",\n    isVerified: true,\n  },\n  {\n    id: \"5\",\n    col1: \"Table Cell Text\",\n    col2: \"Table Cell Text\",\n    col3: \"Table Cell Text\",\n    col4: \"Table Cell Text\",\n    badge: \"Verified\",\n    isVerified: true,\n  },\n];\n\n/**\n * 차트와 테이블 조합의 모니터링 차트데이터 입니다.\n */\nexport function ChartData({ className }: ChartDataProps) {\n  const [selectedNode, setSelectedNode] = React.useState(\"master\");\n  const [selectedMetric, setSelectedMetric] = React.useState(\"cpu\");\n\n  // 🎯 목적: 시간별 사용량 차트 설정\n  const hourlyChartConfig = {\n    hourly: {\n      label: \"Hourly Usage\",\n      color: \"var(--chart-1)\",\n    },\n  } satisfies ChartConfig;\n\n  // 🎯 목적: CPU Radial 차트 설정\n  const cpuChartConfig = {\n    value: {\n      label: \"CPU Value\",\n    },\n    usage: {\n      label: \"Usage\",\n      color: \"var(--chart-1)\",\n    },\n    requests: {\n      label: \"Requests\",\n      color: \"var(--chart-2)\",\n    },\n    limits: {\n      label: \"Limits\",\n      color: \"var(--chart-3)\",\n    },\n    allocatable: {\n      label: \"Allocatable\",\n      color: \"var(--chart-4)\",\n    },\n    capacity: {\n      label: \"Capacity\",\n      color: \"var(--chart-5)\",\n    },\n  } satisfies ChartConfig;\n\n  // 🎯 목적: Memory Radial 차트 설정\n  const memoryChartConfig = {\n    value: {\n      label: \"Memory Value\",\n    },\n    usage: {\n      label: \"Usage\",\n      color: \"var(--chart-1)\",\n    },\n    requests: {\n      label: \"Requests\",\n      color: \"var(--chart-2)\",\n    },\n    limits: {\n      label: \"Limits\",\n      color: \"var(--chart-3)\",\n    },\n    allocatable: {\n      label: \"Allocatable\",\n      color: \"var(--chart-4)\",\n    },\n    capacity: {\n      label: \"Capacity\",\n      color: \"var(--chart-5)\",\n    },\n  } satisfies ChartConfig;\n\n  // 🎯 목적: Pods Radial 차트 설정\n  const podsChartConfig = {\n    value: {\n      label: \"Pods Value\",\n    },\n    usage: {\n      label: \"Usage\",\n      color: \"var(--chart-1)\",\n    },\n    allocatable: {\n      label: \"Allocatable\",\n      color: \"var(--chart-2)\",\n    },\n    capacity: {\n      label: \"Capacity\",\n      color: \"var(--chart-3)\",\n    },\n  } satisfies ChartConfig;\n\n  return (\n    <div className={`bg-background min-h-screen w-full p-5 ${className || \"\"}`}>\n      <div className=\"mx-auto flex max-w-[1400px] flex-col gap-5\">\n        {/* 헤더와 차트 영역 */}\n        <div className=\"flex flex-col gap-3\">\n          {/* 헤더 영역 */}\n          <div className=\"flex items-center justify-between\">\n            <h1 className=\"text-foreground text-lg leading-none font-normal\">\n              {\"{Menuname}\"}\n            </h1>\n\n            {/* Master/Worker 노드 토글 */}\n            <ToggleGroup\n              type=\"single\"\n              value={selectedNode}\n              onValueChange={(value) => value && setSelectedNode(value)}\n              variant=\"outline\"\n              size=\"default\"\n              className=\"w-[360px]\"\n            >\n              <ToggleGroupItem value=\"master\" aria-label=\"Master Nodes\">\n                Master Nodes\n              </ToggleGroupItem>\n              <ToggleGroupItem value=\"worker\" aria-label=\"Worker Nodes\">\n                Worker Nodes\n              </ToggleGroupItem>\n            </ToggleGroup>\n          </div>\n\n          {/* 차트 영역 - 1단 레이아웃 */}\n          <div className=\"border-input flex rounded-md border\">\n            {/* 왼쪽: 시간별 사용량 차트 */}\n            <div className=\"border-input flex min-w-0 flex-1 flex-col items-start gap-4 border-r bg-transparent p-4\">\n              {/* 제목과 토글 영역 */}\n              <div className=\"flex items-center justify-between gap-5 self-stretch\">\n                <h3 className=\"text-foreground text-sm leading-none font-medium\">\n                  Hourly usage\n                </h3>\n\n                {/* CPU/Memory 토글 - shadcn/ui ToggleGroup */}\n                <ToggleGroup\n                  type=\"single\"\n                  value={selectedMetric}\n                  onValueChange={(value) => value && setSelectedMetric(value)}\n                  variant=\"outline\"\n                  size=\"sm\"\n                  className=\"w-[160px]\"\n                >\n                  <ToggleGroupItem\n                    value=\"cpu\"\n                    aria-label=\"CPU\"\n                    className=\"flex-1\"\n                  >\n                    CPU\n                  </ToggleGroupItem>\n                  <ToggleGroupItem\n                    value=\"memory\"\n                    aria-label=\"Memory\"\n                    className=\"flex-1\"\n                  >\n                    Memory\n                  </ToggleGroupItem>\n                </ToggleGroup>\n              </div>\n\n              {/* 차트 래퍼 */}\n              <div className=\"flex flex-grow flex-col items-start gap-2.5 self-stretch\">\n                <ChartContainer\n                  config={hourlyChartConfig}\n                  className=\"h-[340px] w-full\"\n                >\n                  <AreaChart\n                    accessibilityLayer\n                    data={hourlyData}\n                    margin={{\n                      left: 6,\n                      right: 12,\n                    }}\n                  >\n                    <CartesianGrid vertical={false} />\n                    <XAxis\n                      dataKey=\"hour\"\n                      tickLine={false}\n                      axisLine={false}\n                      tickMargin={8}\n                      tickFormatter={(value) => value}\n                    />\n                    <YAxis\n                      tickLine={false}\n                      axisLine={false}\n                      tickMargin={8}\n                      tickFormatter={(value) => {\n                        if (value >= 1000) {\n                          return `${(value / 1000).toFixed(1)}GiB`;\n                        }\n                        return `${value}MiB`;\n                      }}\n                    />\n                    <ChartTooltip\n                      cursor={false}\n                      content={<ChartTooltipContent hideLabel />}\n                    />\n                    <Area\n                      dataKey=\"value\"\n                      type=\"step\"\n                      fill=\"var(--color-hourly)\"\n                      fillOpacity={0.4}\n                      stroke=\"var(--color-hourly)\"\n                    />\n                  </AreaChart>\n                </ChartContainer>\n              </div>\n            </div>\n\n            {/* 오른쪽: Usage Type Distribution Chart */}\n            <div className=\"flex min-w-0 flex-1 flex-col items-start gap-2 self-stretch p-4\">\n              {/* 제목 */}\n              <div className=\"flex h-8 items-center gap-2.5 self-stretch\">\n                <h3 className=\"text-foreground text-sm leading-none font-medium\">\n                  Usage Type Distribution Chart\n                </h3>\n              </div>\n\n              {/* 카드들 */}\n              <div className=\"flex min-w-0 flex-1 items-stretch gap-4 self-stretch\">\n                {/* CPU Card */}\n                <Card className=\"bg-background flex min-w-0 flex-1 flex-col gap-1 rounded-md p-3\">\n                  <CardHeader className=\"items-center gap-0 p-0\">\n                    <CardTitle className=\"text-base\">CPU</CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"flex-1 p-0 pb-2\">\n                    <ChartContainer\n                      config={cpuChartConfig}\n                      className=\"mx-auto aspect-square max-h-[120px]\"\n                    >\n                      <RadialBarChart\n                        data={cpuData}\n                        innerRadius={20}\n                        outerRadius={50}\n                      >\n                        <ChartTooltip\n                          cursor={false}\n                          content={\n                            <ChartTooltipContent hideLabel nameKey=\"metric\" />\n                          }\n                        />\n                        <RadialBar dataKey=\"value\" background />\n                      </RadialBarChart>\n                    </ChartContainer>\n                  </CardContent>\n                  <CardFooter className=\"p-0\">\n                    <ItemGroup className=\"w-full gap-0.5\">\n                      <Item className=\"gap-1.5 px-0.5 py-0 text-sm\">\n                        <ItemMedia variant=\"icon\" className=\"h-2 w-2\">\n                          <div className=\"bg-chart-1 h-1 w-1 rounded-full\" />\n                        </ItemMedia>\n                        <ItemContent>\n                          <ItemTitle className=\"text-muted-foreground text-sm leading-normal font-normal\">\n                            Usage: 0.06\n                          </ItemTitle>\n                        </ItemContent>\n                      </Item>\n                      <Item className=\"gap-1.5 px-0.5 py-0 text-sm\">\n                        <ItemMedia variant=\"icon\" className=\"h-2 w-2\">\n                          <div className=\"bg-chart-2 h-1 w-1 rounded-full\" />\n                        </ItemMedia>\n                        <ItemContent>\n                          <ItemTitle className=\"text-muted-foreground text-sm leading-normal font-normal\">\n                            Requests: 1.10\n                          </ItemTitle>\n                        </ItemContent>\n                      </Item>\n                      <Item className=\"gap-1.5 px-0.5 py-0 text-sm\">\n                        <ItemMedia variant=\"icon\" className=\"h-2 w-2\">\n                          <div className=\"bg-chart-3 h-1 w-1 rounded-full\" />\n                        </ItemMedia>\n                        <ItemContent>\n                          <ItemTitle className=\"text-muted-foreground text-sm leading-normal font-normal\">\n                            Limits: 0.20\n                          </ItemTitle>\n                        </ItemContent>\n                      </Item>\n                      <Item className=\"gap-1.5 px-0.5 py-0 text-sm\">\n                        <ItemMedia variant=\"icon\" className=\"h-2 w-2\">\n                          <div className=\"bg-chart-4 h-1 w-1 rounded-full\" />\n                        </ItemMedia>\n                        <ItemContent>\n                          <ItemTitle className=\"text-muted-foreground text-sm leading-normal font-normal\">\n                            Allocatable Capacity: 4.00\n                          </ItemTitle>\n                        </ItemContent>\n                      </Item>\n                      <Item className=\"gap-1.5 px-0.5 py-0 text-sm\">\n                        <ItemMedia variant=\"icon\" className=\"h-2 w-2\">\n                          <div className=\"bg-chart-5 h-1 w-1 rounded-full\" />\n                        </ItemMedia>\n                        <ItemContent>\n                          <ItemTitle className=\"text-muted-foreground text-sm leading-normal font-normal\">\n                            Capacity: 4.00\n                          </ItemTitle>\n                        </ItemContent>\n                      </Item>\n                    </ItemGroup>\n                  </CardFooter>\n                </Card>\n\n                {/* Memory Card */}\n                <Card className=\"bg-background flex min-w-0 flex-1 flex-col gap-1 rounded-md p-3\">\n                  <CardHeader className=\"items-center gap-0 p-0\">\n                    <CardTitle className=\"text-base\">Memory</CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"flex-1 p-0 pb-2\">\n                    <ChartContainer\n                      config={memoryChartConfig}\n                      className=\"mx-auto aspect-square max-h-[120px]\"\n                    >\n                      <RadialBarChart\n                        data={memoryData}\n                        innerRadius={20}\n                        outerRadius={50}\n                      >\n                        <ChartTooltip\n                          cursor={false}\n                          content={\n                            <ChartTooltipContent hideLabel nameKey=\"metric\" />\n                          }\n                        />\n                        <RadialBar dataKey=\"value\" background />\n                      </RadialBarChart>\n                    </ChartContainer>\n                  </CardContent>\n                  <CardFooter className=\"p-0\">\n                    <ItemGroup className=\"w-full gap-0.5\">\n                      <Item className=\"gap-1.5 px-0.5 py-0 text-sm\">\n                        <ItemMedia variant=\"icon\" className=\"h-2 w-2\">\n                          <div className=\"bg-chart-1 h-1 w-1 rounded-full\" />\n                        </ItemMedia>\n                        <ItemContent>\n                          <ItemTitle className=\"text-muted-foreground text-sm leading-normal font-normal\">\n                            Usage: 1.3GiB\n                          </ItemTitle>\n                        </ItemContent>\n                      </Item>\n                      <Item className=\"gap-1.5 px-0.5 py-0 text-sm\">\n                        <ItemMedia variant=\"icon\" className=\"h-2 w-2\">\n                          <div className=\"bg-chart-2 h-1 w-1 rounded-full\" />\n                        </ItemMedia>\n                        <ItemContent>\n                          <ItemTitle className=\"text-muted-foreground text-sm leading-normal font-normal\">\n                            Requests: 304.0MiB\n                          </ItemTitle>\n                        </ItemContent>\n                      </Item>\n                      <Item className=\"gap-1.5 px-0.5 py-0 text-sm\">\n                        <ItemMedia variant=\"icon\" className=\"h-2 w-2\">\n                          <div className=\"bg-chart-3 h-1 w-1 rounded-full\" />\n                        </ItemMedia>\n                        <ItemContent>\n                          <ItemTitle className=\"text-muted-foreground text-sm leading-normal font-normal\">\n                            Limits: 468.0MiB\n                          </ItemTitle>\n                        </ItemContent>\n                      </Item>\n                      <Item className=\"gap-1.5 px-0.5 py-0 text-sm\">\n                        <ItemMedia variant=\"icon\" className=\"h-2 w-2\">\n                          <div className=\"bg-chart-4 h-1 w-1 rounded-full\" />\n                        </ItemMedia>\n                        <ItemContent>\n                          <ItemTitle className=\"text-muted-foreground text-sm leading-normal font-normal\">\n                            Allocatable Capacity: 3.7GiB\n                          </ItemTitle>\n                        </ItemContent>\n                      </Item>\n                      <Item className=\"gap-1.5 px-0.5 py-0 text-sm\">\n                        <ItemMedia variant=\"icon\" className=\"h-2 w-2\">\n                          <div className=\"bg-chart-5 h-1 w-1 rounded-full\" />\n                        </ItemMedia>\n                        <ItemContent>\n                          <ItemTitle className=\"text-muted-foreground text-sm leading-normal font-normal\">\n                            Capacity: 3.8GiB\n                          </ItemTitle>\n                        </ItemContent>\n                      </Item>\n                    </ItemGroup>\n                  </CardFooter>\n                </Card>\n\n                {/* Pods Card */}\n                <Card className=\"bg-background flex min-w-0 flex-1 flex-col gap-1 rounded-md p-3\">\n                  <CardHeader className=\"items-center gap-0 p-0\">\n                    <CardTitle className=\"text-base\">Pods</CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"flex-1 p-0 pb-2\">\n                    <ChartContainer\n                      config={podsChartConfig}\n                      className=\"mx-auto aspect-square max-h-[120px]\"\n                    >\n                      <RadialBarChart\n                        data={podsData}\n                        innerRadius={20}\n                        outerRadius={50}\n                      >\n                        <ChartTooltip\n                          cursor={false}\n                          content={\n                            <ChartTooltipContent hideLabel nameKey=\"metric\" />\n                          }\n                        />\n                        <RadialBar dataKey=\"value\" background />\n                      </RadialBarChart>\n                    </ChartContainer>\n                  </CardContent>\n                  <CardFooter className=\"p-0\">\n                    <ItemGroup className=\"w-full gap-0.5\">\n                      <Item className=\"gap-1.5 px-0.5 py-0 text-sm\">\n                        <ItemMedia variant=\"icon\" className=\"h-2 w-2\">\n                          <div className=\"bg-chart-1 h-1 w-1 rounded-full\" />\n                        </ItemMedia>\n                        <ItemContent>\n                          <ItemTitle className=\"text-muted-foreground text-sm leading-normal font-normal\">\n                            Usage: 15\n                          </ItemTitle>\n                        </ItemContent>\n                      </Item>\n                      <Item className=\"gap-1.5 px-0.5 py-0 text-sm\">\n                        <ItemMedia variant=\"icon\" className=\"h-2 w-2\">\n                          <div className=\"bg-chart-2 h-1 w-1 rounded-full\" />\n                        </ItemMedia>\n                        <ItemContent>\n                          <ItemTitle className=\"text-muted-foreground text-sm leading-normal font-normal\">\n                            Allocatable: 110\n                          </ItemTitle>\n                        </ItemContent>\n                      </Item>\n                      <Item className=\"gap-1.5 px-0.5 py-0 text-sm\">\n                        <ItemMedia variant=\"icon\" className=\"h-2 w-2\">\n                          <div className=\"bg-chart-3 h-1 w-1 rounded-full\" />\n                        </ItemMedia>\n                        <ItemContent>\n                          <ItemTitle className=\"text-muted-foreground text-sm leading-normal font-normal\">\n                            Capacity: 110\n                          </ItemTitle>\n                        </ItemContent>\n                      </Item>\n                    </ItemGroup>\n                  </CardFooter>\n                </Card>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* 경고 테이블 */}\n        <div className=\"flex flex-1 flex-col items-start gap-1 self-stretch\">\n          {/* 헤더 */}\n          <div className=\"flex items-center gap-1\">\n            <TriangleAlert className=\"h-4 w-4 text-amber-500\" />\n            <span className=\"text-lg leading-none font-normal text-amber-500\">\n              Warnings\n            </span>\n            <span className=\"text-muted-foreground text-base leading-6 font-light\">\n              (3)\n            </span>\n          </div>\n\n          {/* 테이블 */}\n          <div className=\"flex flex-col items-start self-stretch\">\n            <Table className=\"w-full table-fixed\">\n              <TableHeader>\n                <TableRow className=\"border-border h-[40px]\">\n                  <TableHead className=\"text-foreground w-1/5 text-sm leading-5 font-medium\">\n                    Head Text\n                  </TableHead>\n                  <TableHead className=\"text-foreground w-1/5 text-sm leading-5 font-medium\">\n                    Head Text\n                  </TableHead>\n                  <TableHead className=\"text-foreground w-1/5 text-sm leading-5 font-medium\">\n                    Head Text\n                  </TableHead>\n                  <TableHead className=\"text-foreground w-1/5 text-sm leading-5 font-medium\">\n                    Head Text\n                  </TableHead>\n                  <TableHead className=\"text-foreground w-1/5 text-sm leading-5 font-medium\">\n                    Head Text\n                  </TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {warningData.map((row) => (\n                  <TableRow key={row.id} className=\"border-border h-[52px]\">\n                    <TableCell className=\"text-foreground text-sm leading-5 font-normal\">\n                      {row.col1}\n                    </TableCell>\n                    <TableCell className=\"text-foreground text-sm leading-5 font-normal\">\n                      {row.col2}\n                    </TableCell>\n                    <TableCell className=\"text-foreground text-sm leading-5 font-normal\">\n                      {row.col3}\n                    </TableCell>\n                    <TableCell className=\"text-foreground text-sm leading-5 font-normal\">\n                      {row.col4}\n                    </TableCell>\n                    <TableCell>\n                      {row.isVerified ? (\n                        <Badge\n                          variant=\"secondary\"\n                          className=\"bg-blue-500 text-white dark:bg-blue-600\"\n                        >\n                          <BadgeCheck className=\"h-3 w-3\" />\n                          {row.badge}\n                        </Badge>\n                      ) : (\n                        <Badge variant=\"default\">{row.badge}</Badge>\n                      )}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n\n          {/* Caption */}\n          <div className=\"flex flex-shrink-0 items-center justify-center gap-2.5 self-stretch pt-4\">\n            <span className=\"text-muted-foreground flex-1 text-center text-sm leading-5 font-normal\">\n              Caption text\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "src/registry/templates/contents/chart-data.stories.tsx",
      "content": "import type { Meta, StoryObj } from \"@storybook/react-vite\";\nimport { ChartData } from \"./chart-data\";\n\n/**\n * 차트와 테이블 조합의 모니터링 차트데이터 입니다.\n */\nconst meta: Meta<typeof ChartData> = {\n  title: \"templates/Contents/Chart Data\",\n  component: ChartData,\n  tags: [\"autodocs\"],\n  parameters: {\n    layout: \"fullscreen\",\n  },\n} satisfies Meta<typeof ChartData>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nexport const Default: Story = {};\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "templates",
    "storybook",
    "charts",
    "dashboard",
    "monitoring"
  ]
}