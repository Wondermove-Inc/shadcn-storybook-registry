{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button-group-story",
  "type": "registry:component",
  "title": "Button Group Story",
  "author": "Lloyd Richards <lloyd.d.richards@gmail.com>",
  "description": "Interactive Storybook stories demonstrating button group component usage and variants",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "button-group",
    "button",
    "input",
    "select",
    "dropdown-menu",
    "popover"
  ],
  "files": [
    {
      "path": "src/registry/atoms/button-group-story/button-group.stories.tsx",
      "content": "import React from \"react\";\nimport type { Meta, StoryObj } from \"@storybook/react-vite\";\n\nexport function ButtonGroupOrientation() {\n  return (\n    <ButtonGroup\n      orientation=\"vertical\"\n      aria-label=\"Media controls\"\n      className=\"h-fit\"\n    >\n      <Button variant=\"outline\" size=\"icon\">\n        <PlusIcon />\n      </Button>\n      <Button variant=\"outline\" size=\"icon\">\n        <MinusIcon />\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport function ButtonGroupSize() {\n  return (\n    <div className=\"flex flex-col items-start gap-8\">\n      <ButtonGroup>\n        <Button variant=\"outline\" size=\"sm\">\n          Small\n        </Button>\n        <Button variant=\"outline\" size=\"sm\">\n          Button\n        </Button>\n        <Button variant=\"outline\" size=\"sm\">\n          Group\n        </Button>\n        <Button variant=\"outline\" size=\"icon-sm\">\n          <PlusIcon />\n        </Button>\n      </ButtonGroup>\n      <ButtonGroup>\n        <Button variant=\"outline\">Default</Button>\n        <Button variant=\"outline\">Button</Button>\n        <Button variant=\"outline\">Group</Button>\n        <Button variant=\"outline\" size=\"icon\">\n          <PlusIcon />\n        </Button>\n      </ButtonGroup>\n      <ButtonGroup>\n        <Button variant=\"outline\" size=\"lg\">\n          Large\n        </Button>\n        <Button variant=\"outline\" size=\"lg\">\n          Button\n        </Button>\n        <Button variant=\"outline\" size=\"lg\">\n          Group\n        </Button>\n        <Button variant=\"outline\" size=\"icon-lg\">\n          <PlusIcon />\n        </Button>\n      </ButtonGroup>\n    </div>\n  );\n}\n\nexport function ButtonGroupNested() {\n  return (\n    <ButtonGroup>\n      <ButtonGroup>\n        <Button variant=\"outline\" size=\"sm\">\n          1\n        </Button>\n        <Button variant=\"outline\" size=\"sm\">\n          2\n        </Button>\n        <Button variant=\"outline\" size=\"sm\">\n          3\n        </Button>\n        <Button variant=\"outline\" size=\"sm\">\n          4\n        </Button>\n        <Button variant=\"outline\" size=\"sm\">\n          5\n        </Button>\n      </ButtonGroup>\n      <ButtonGroup>\n        <Button variant=\"outline\" size=\"icon-sm\" aria-label=\"Previous\">\n          <ArrowLeftIcon />\n        </Button>\n        <Button variant=\"outline\" size=\"icon-sm\" aria-label=\"Next\">\n          <ArrowRightIcon />\n        </Button>\n      </ButtonGroup>\n    </ButtonGroup>\n  );\n}\n\nexport function ButtonGroupSeparatorDemo() {\n  return (\n    <ButtonGroup>\n      <Button variant=\"secondary\" size=\"sm\">\n        Copy\n      </Button>\n      <ButtonGroupSeparator />\n      <Button variant=\"secondary\" size=\"sm\">\n        Paste\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport function ButtonGroupSplit() {\n  return (\n    <ButtonGroup>\n      <Button variant=\"secondary\">Button</Button>\n      <ButtonGroupSeparator />\n      <Button size=\"icon\" variant=\"secondary\">\n        <IconPlus />\n      </Button>\n    </ButtonGroup>\n  );\n}\nimport {\n  ButtonGroup,\n  ButtonGroupSeparator,\n} from \"@/components/ui/button-group\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport {\n  Archive,\n  AlertTriangle,\n  ArrowLeftIcon,\n  ArrowRightIcon,\n  Clock,\n  MinusIcon,\n  PlusIcon,\n  Search,\n  Mic,\n  UserPlus,\n  ChevronDown,\n  Send,\n  MoreHorizontal,\n} from \"lucide-react\";\nimport { IconPlus } from \"@tabler/icons-react\";\n\n/**\n * Button Group은 관련된 버튼들을 그룹화하여 하나의 단위로 표시하는 컴포넌트입니다.\n * shadcn/ui 공식 문서의 예제들을 기반으로 구현되었습니다.\n */\nconst meta: Meta<typeof ButtonGroup> = {\n  title: \"ui/ButtonGroup\",\n  component: ButtonGroup,\n  tags: [\"autodocs\"],\n  parameters: {\n    layout: \"centered\",\n  },\n  argTypes: {\n    orientation: {\n      control: { type: \"radio\" },\n      options: [\"horizontal\", \"vertical\"],\n    },\n  },\n  excludeStories:\n    /ButtonGroupOrientation$|ButtonGroupSize$|ButtonGroupNested$|ButtonGroupSeparatorDemo$|ButtonGroupSplit$/,\n} satisfies Meta<typeof ButtonGroup>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\n/**\n * 기본 버튼 그룹 - Archive, Report, Snooze 액션\n */\nexport const Default: Story = {\n  render: () => (\n    <ButtonGroup>\n      <Button variant=\"outline\">\n        <Archive />\n        Archive\n      </Button>\n      <Button variant=\"outline\">\n        <AlertTriangle />\n        Report\n      </Button>\n      <Button variant=\"outline\">\n        <Clock />\n        Snooze\n      </Button>\n    </ButtonGroup>\n  ),\n};\n\n/**\n * 방향 설정 버튼 그룹 - vertical orientation을 사용한 Plus/Minus 아이콘 버튼\n * aria-label과 className을 통해 접근성과 스타일링을 개선했습니다.\n */\nexport const Orientation: Story = {\n  render: () => <ButtonGroupOrientation />,\n};\n\n/**\n * 버튼 그룹 크기 변형 - Small, Default, Large 크기별로 텍스트와 아이콘 버튼 조합\n * 각 크기에 맞는 icon-sm, icon, icon-lg 사이즈를 사용합니다.\n */\nexport const Sizes: Story = {\n  render: () => <ButtonGroupSize />,\n};\n\n/**\n * 중첩된 버튼 그룹 - 페이지네이션 스타일의 숫자 버튼(1-5)과 화살표 네비게이션 버튼\n * 작은 크기(sm)를 사용하여 컴팩트한 디자인과 aria-label로 접근성을 개선했습니다.\n */\nexport const Nested: Story = {\n  render: () => <ButtonGroupNested />,\n};\n\n/**\n * 구분자가 있는 버튼 그룹 - Copy와 Paste 분리\n * secondary variant와 sm 크기를 사용하여 깔끔한 디자인을 제공합니다.\n */\nexport const Separator: Story = {\n  render: () => <ButtonGroupSeparatorDemo />,\n};\n\n/**\n * 분할 버튼 - 메인 버튼과 추가 액션 아이콘\n * ButtonGroupSeparator를 사용하여 버튼들을 시각적으로 분리하고\n * secondary variant로 일관된 스타일을 제공합니다.\n */\nexport const Split: Story = {\n  render: () => <ButtonGroupSplit />,\n};\n\n/**\n * 입력과 통합 - 검색 입력과 검색 버튼\n */\nexport const WithInput: Story = {\n  render: () => (\n    <ButtonGroup>\n      <Input placeholder=\"Search...\" className=\"rounded-r-none\" />\n      <Button variant=\"outline\">\n        <Search />\n      </Button>\n    </ButtonGroup>\n  ),\n};\n\n/**\n * 입력 그룹 - 음성 모드 토글과 입력\n */\nexport const InputGroup: Story = {\n  render: () => (\n    <ButtonGroup>\n      <Button variant=\"outline\" size=\"icon\">\n        <Mic />\n      </Button>\n      <Input placeholder=\"Voice mode...\" />\n    </ButtonGroup>\n  ),\n};\n\n/**\n * 드롭다운 메뉴와 함께 - Follow 버튼과 추가 액션\n */\nexport const WithDropdown: Story = {\n  render: () => (\n    <ButtonGroup>\n      <Button>Follow</Button>\n      <DropdownMenu>\n        <DropdownMenuTrigger asChild>\n          <Button variant=\"outline\" size=\"icon\">\n            <ChevronDown />\n          </Button>\n        </DropdownMenuTrigger>\n        <DropdownMenuContent>\n          <DropdownMenuItem>\n            <UserPlus />\n            Add to contacts\n          </DropdownMenuItem>\n          <DropdownMenuItem>\n            <MoreHorizontal />\n            More options\n          </DropdownMenuItem>\n        </DropdownMenuContent>\n      </DropdownMenu>\n    </ButtonGroup>\n  ),\n};\n\n/**\n * Select와 통합 - 통화 선택, 입력, 전송\n */\nexport const WithSelect: Story = {\n  render: () => (\n    <ButtonGroup>\n      <Select defaultValue=\"usd\">\n        <SelectTrigger className=\"w-20 rounded-r-none\">\n          <SelectValue />\n        </SelectTrigger>\n        <SelectContent>\n          <SelectItem value=\"usd\">USD</SelectItem>\n          <SelectItem value=\"eur\">EUR</SelectItem>\n          <SelectItem value=\"gbp\">GBP</SelectItem>\n        </SelectContent>\n      </Select>\n      <Input placeholder=\"Amount\" className=\"rounded-none\" />\n      <Button>\n        <Send />\n        Send\n      </Button>\n    </ButtonGroup>\n  ),\n};\n\n/**\n * Popover와 통합 - Copilot 버튼과 추가 옵션\n */\nexport const WithPopover: Story = {\n  render: () => (\n    <ButtonGroup>\n      <Button>Copilot</Button>\n      <Popover>\n        <PopoverTrigger asChild>\n          <Button variant=\"outline\" size=\"icon\">\n            <MoreHorizontal />\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent className=\"w-48\">\n          <div className=\"space-y-2\">\n            <Button variant=\"ghost\" className=\"w-full justify-start\">\n              Settings\n            </Button>\n            <Button variant=\"ghost\" className=\"w-full justify-start\">\n              Help\n            </Button>\n            <Button variant=\"ghost\" className=\"w-full justify-start\">\n              Feedback\n            </Button>\n          </div>\n        </PopoverContent>\n      </Popover>\n    </ButtonGroup>\n  ),\n};\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "atoms",
    "storybook",
    "button",
    "interaction",
    "group"
  ]
}