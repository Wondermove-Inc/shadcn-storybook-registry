{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "common-table-story",
  "type": "registry:component",
  "title": "CommonTable Story",
  "author": "Lloyd Richards <lloyd.d.richards@gmail.com>",
  "description": "Interactive Storybook stories for Kubernetes resource table interface with namespace dropdown, search functionality, and multi-type cell content",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "table",
    "dropdown-menu",
    "button",
    "input",
    "badge",
    "checkbox"
  ],
  "files": [
    {
      "path": "src/registry/templates/contents/common-table.tsx",
      "content": "\"use client\";\n\nimport React from \"react\";\nimport { Search, ChevronDown } from \"lucide-react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\n\n/**\n * 🎯 목적: CommonTable 테이블 행 데이터 타입 정의\n */\ninterface TableRowData {\n  id: string;\n  checked: boolean;\n  column2: string;\n  column3: string;\n  column4: { text: string; href?: string };\n  column5: {\n    text: string;\n    variant: \"default\" | \"secondary\" | \"destructive\" | \"outline\";\n  };\n  column6: string;\n  column7: { text: string; variant: \"default\" | \"outline\" | \"secondary\" };\n}\n\n/**\n * 🎯 목적: 테이블 샘플 데이터 - UIDL 명세에 따른 6개 행 구성\n */\nconst tableData: TableRowData[] = [\n  {\n    id: \"1\",\n    checked: false,\n    column2: \"Cell Text\",\n    column3: \"Cell Text\",\n    column4: { text: \"Link Button\", href: \"#\" },\n    column5: { text: \"Badge\", variant: \"default\" },\n    column6: \"Cell Text\",\n    column7: { text: \"Action Button\", variant: \"default\" },\n  },\n  {\n    id: \"2\",\n    checked: true,\n    column2: \"Cell Text\",\n    column3: \"Cell Text\",\n    column4: { text: \"Link Button\", href: \"#\" },\n    column5: { text: \"Badge\", variant: \"secondary\" },\n    column6: \"Cell Text\",\n    column7: { text: \"Action Button\", variant: \"outline\" },\n  },\n  {\n    id: \"3\",\n    checked: false,\n    column2: \"Cell Text\",\n    column3: \"Cell Text\",\n    column4: { text: \"Link Button\", href: \"#\" },\n    column5: { text: \"Badge\", variant: \"destructive\" },\n    column6: \"Cell Text\",\n    column7: { text: \"Action Button\", variant: \"secondary\" },\n  },\n  {\n    id: \"4\",\n    checked: true,\n    column2: \"Cell Text\",\n    column3: \"Cell Text\",\n    column4: { text: \"Link Button\", href: \"#\" },\n    column5: { text: \"Badge\", variant: \"outline\" },\n    column6: \"Cell Text\",\n    column7: { text: \"Action Button\", variant: \"default\" },\n  },\n  {\n    id: \"5\",\n    checked: false,\n    column2: \"Cell Text\",\n    column3: \"Cell Text\",\n    column4: { text: \"Link Button\", href: \"#\" },\n    column5: { text: \"Badge\", variant: \"default\" },\n    column6: \"Cell Text\",\n    column7: { text: \"Action Button\", variant: \"outline\" },\n  },\n  {\n    id: \"6\",\n    checked: false,\n    column2: \"Cell Text\",\n    column3: \"Cell Text\",\n    column4: { text: \"Link Button\", href: \"#\" },\n    column5: { text: \"Badge\", variant: \"secondary\" },\n    column6: \"Cell Text\",\n    column7: { text: \"Action Button\", variant: \"default\" },\n  },\n];\n\n/**\n * 🎯 목적: 네임스페이스 드롭다운 옵션\n */\nconst namespaceOptions = [\n  \"default\",\n  \"kube-system\",\n  \"kube-public\",\n  \"monitoring\",\n  \"istio-system\",\n];\n\n/**\n * 🎯 목적: CommonTable 컴포넌트 Props 타입\n */\ninterface CommonTableProps {\n  className?: string;\n}\n\n/**\n * 🎯 목적: Kubernetes 리소스를 위한 공통 테이블 컴포넌트\n *\n * 구성 요소:\n * - 상단 메뉴 (메뉴명, 네임스페이스 드롭다운, 검색 입력)\n * - 7개 열을 가진 데이터 테이블\n * - 헤더 행 (Head Text 레이블)\n * - 6개 데이터 행 (텍스트, 링크, 뱃지, 액션 버튼 포함)\n */\nexport function CommonTable({ className }: CommonTableProps) {\n  const [selectedNamespace, setSelectedNamespace] = React.useState(\"default\");\n  const [searchValue, setSearchValue] = React.useState(\"\");\n  const [data, setData] = React.useState(tableData);\n\n  /**\n   * 🎯 목적: 개별 체크박스 상태 변경 처리\n   */\n  const handleRowCheckChange = (id: string, checked: boolean) => {\n    setData((prev) =>\n      prev.map((row) => (row.id === id ? { ...row, checked } : row)),\n    );\n  };\n\n  /**\n   * 🎯 목적: 전체 선택/해제 처리\n   */\n  const handleSelectAll = (checked: boolean) => {\n    setData((prev) => prev.map((row) => ({ ...row, checked })));\n  };\n\n  /**\n   * 🎯 목적: 현재 선택된 행 개수 계산\n   */\n  const selectedCount = data.filter((row) => row.checked).length;\n  const isAllSelected = selectedCount === data.length;\n  const isIndeterminate = selectedCount > 0 && selectedCount < data.length;\n\n  return (\n    <div className={`flex h-screen w-full flex-col ${className || \"\"}`}>\n      {/* 상단 메뉴 섹션 */}\n      <div className=\"flex items-center justify-between gap-4 border-b p-4\">\n        {/* 왼쪽: 메뉴 이름 */}\n        <h2 className=\"text-lg font-semibold\">Resources</h2>\n\n        {/* 오른쪽: 네임스페이스 드롭다운과 검색 */}\n        <div className=\"flex items-center gap-3\">\n          {/* 네임스페이스 드롭다운 */}\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button\n                variant=\"outline\"\n                className=\"min-w-[120px] justify-between\"\n              >\n                {selectedNamespace}\n                <ChevronDown className=\"h-4 w-4\" />\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent>\n              {namespaceOptions.map((namespace) => (\n                <DropdownMenuItem\n                  key={namespace}\n                  onClick={() => setSelectedNamespace(namespace)}\n                >\n                  {namespace}\n                </DropdownMenuItem>\n              ))}\n            </DropdownMenuContent>\n          </DropdownMenu>\n\n          {/* 검색 입력 */}\n          <div className=\"relative\">\n            <Search className=\"text-muted-foreground absolute top-1/2 left-3 h-4 w-4 -translate-y-1/2 transform\" />\n            <Input\n              placeholder=\"Search resources...\"\n              value={searchValue}\n              onChange={(e) => setSearchValue(e.target.value)}\n              className=\"w-[250px] pl-9\"\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* 테이블 섹션 */}\n      <div className=\"flex-1 p-4\">\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead className=\"w-12\">\n                <Checkbox\n                  checked={isIndeterminate ? \"indeterminate\" : isAllSelected}\n                  onCheckedChange={handleSelectAll}\n                  aria-label=\"전체 선택\"\n                />\n              </TableHead>\n              <TableHead>Head Text</TableHead>\n              <TableHead>Head Text</TableHead>\n              <TableHead>Head Text</TableHead>\n              <TableHead>Head Text</TableHead>\n              <TableHead>Head Text</TableHead>\n              <TableHead>Head Text</TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {data.map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>\n                  <Checkbox\n                    checked={row.checked}\n                    onCheckedChange={(checked) =>\n                      handleRowCheckChange(row.id, !!checked)\n                    }\n                    aria-label={`행 ${row.id} 선택`}\n                  />\n                </TableCell>\n                <TableCell>{row.column2}</TableCell>\n                <TableCell>{row.column3}</TableCell>\n                <TableCell>\n                  <Button variant=\"link\" className=\"text-primary h-auto p-0\">\n                    {row.column4.text}\n                  </Button>\n                </TableCell>\n                <TableCell>\n                  <Badge variant={row.column5.variant}>\n                    {row.column5.text}\n                  </Badge>\n                </TableCell>\n                <TableCell>{row.column6}</TableCell>\n                <TableCell>\n                  <Button variant={row.column7.variant} size=\"sm\">\n                    {row.column7.text}\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "src/registry/templates/contents/common-table.stories.tsx",
      "content": "import type { Meta, StoryObj } from \"@storybook/react-vite\";\nimport { CommonTable } from \"./common-table\";\n\n/**\n * CommonTable 컴포넌트 - Kubernetes 리소스 테이블 인터페이스\n *\n * 특징:\n * - 네임스페이스 드롭다운과 검색 기능이 포함된 상단 메뉴\n * - 7개 열을 가진 데이터 테이블\n * - 텍스트, 링크, 뱃지, 액션 버튼 등 다양한 셀 타입\n * - shadcn/ui 컴포넌트 활용한 일관된 디자인\n */\nconst meta: Meta<typeof CommonTable> = {\n  title: \"templates/Contents/CommonTable\",\n  component: CommonTable,\n  parameters: {\n    layout: \"fullscreen\",\n  },\n  tags: [\"autodocs\"],\n} satisfies Meta<typeof CommonTable>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\n/**\n * 기본 CommonTable - 완전한 리소스 테이블 레이아웃\n */\nexport const Default: Story = {};\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "templates",
    "storybook",
    "table",
    "contents"
  ]
}