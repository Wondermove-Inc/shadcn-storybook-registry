{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "item-story",
  "type": "registry:component",
  "title": "Item Story",
  "author": "Lloyd Richards <lloyd.d.richards@gmail.com>",
  "description": "Interactive Storybook stories demonstrating versatile item component for displaying content with consistent styling",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "item",
    "avatar",
    "badge",
    "button"
  ],
  "files": [
    {
      "path": "src/registry/atoms/item-story/item.stories.tsx",
      "content": "import { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Item,\n  ItemActions,\n  ItemContent,\n  ItemDescription,\n  ItemFooter,\n  ItemGroup,\n  ItemHeader,\n  ItemMedia,\n  ItemSeparator,\n  ItemTitle,\n} from \"@/components/ui/item\";\nimport type { Meta, StoryObj } from \"@storybook/nextjs-vite\";\nimport {\n  Bell,\n  Calendar,\n  Download,\n  FileText,\n  MoreVertical,\n  Settings,\n  Shield,\n  Star,\n  Users,\n  Zap,\n} from \"lucide-react\";\nimport Link from \"next/link\";\n\n/**\n * A versatile component that you can use to display any content.\n * Provides flexible layout options for displaying various types of content with consistent styling.\n */\nconst meta = {\n  title: \"ui/Item\",\n  component: Item,\n  tags: [\"autodocs\"],\n  parameters: {\n    layout: \"centered\",\n  },\n} satisfies Meta<typeof Item>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\n/**\n * 기본 Item 사용 예제입니다.\n * 아이콘, 제목, 설명, 액션으로 구성됩니다.\n */\nexport const Default: Story = {\n  render: () => (\n    <div className=\"w-[400px]\">\n      <Item>\n        <ItemMedia variant=\"icon\">\n          <FileText />\n        </ItemMedia>\n        <ItemContent>\n          <ItemTitle>Document.pdf</ItemTitle>\n          <ItemDescription>Last modified 2 hours ago</ItemDescription>\n        </ItemContent>\n        <ItemActions>\n          <Button size=\"sm\" variant=\"ghost\">\n            <Download className=\"h-4 w-4\" />\n          </Button>\n        </ItemActions>\n      </Item>\n    </div>\n  ),\n};\n\n/**\n * ItemGroup을 사용하여 여러 Item을 그룹화할 수 있습니다.\n * ItemSeparator로 아이템 사이를 구분합니다.\n */\nexport const ItemGroupExample: Story = {\n  render: () => (\n    <div className=\"w-[400px]\">\n      <ItemGroup>\n        <Item>\n          <ItemMedia variant=\"icon\">\n            <Settings />\n          </ItemMedia>\n          <ItemContent>\n            <ItemTitle>Settings</ItemTitle>\n            <ItemDescription>Manage your account settings</ItemDescription>\n          </ItemContent>\n        </Item>\n        <ItemSeparator />\n        <Item>\n          <ItemMedia variant=\"icon\">\n            <Bell />\n          </ItemMedia>\n          <ItemContent>\n            <ItemTitle>Notifications</ItemTitle>\n            <ItemDescription>\n              Configure notification preferences\n            </ItemDescription>\n          </ItemContent>\n        </Item>\n        <ItemSeparator />\n        <Item>\n          <ItemMedia variant=\"icon\">\n            <Shield />\n          </ItemMedia>\n          <ItemContent>\n            <ItemTitle>Security</ItemTitle>\n            <ItemDescription>\n              Two-factor authentication and privacy\n            </ItemDescription>\n          </ItemContent>\n        </Item>\n      </ItemGroup>\n    </div>\n  ),\n};\n\n/**\n * outline variant를 사용하여 테두리가 있는 Item을 만들 수 있습니다.\n * 카드 형태의 UI에 적합합니다.\n */\nexport const OutlineVariant: Story = {\n  render: () => (\n    <div className=\"w-[400px]\">\n      <Item variant=\"outline\">\n        <ItemMedia variant=\"image\">\n          {/* eslint-disable-next-line @next/next/no-img-element */}\n          <img\n            src=\"https://images.unsplash.com/photo-1611162617474-5b21e879e113?w=150&h=150&fit=crop\"\n            alt=\"Project thumbnail\"\n          />\n        </ItemMedia>\n        <ItemContent>\n          <ItemTitle>Modern Dashboard</ItemTitle>\n          <ItemDescription>\n            A beautiful and responsive admin dashboard template\n          </ItemDescription>\n        </ItemContent>\n        <ItemActions>\n          <Badge>React</Badge>\n          <Badge variant=\"secondary\">TypeScript</Badge>\n        </ItemActions>\n      </Item>\n    </div>\n  ),\n};\n\n/**\n * muted variant는 배경색이 있는 Item을 만들 수 있습니다.\n * 선택된 상태나 강조가 필요할 때 사용합니다.\n */\nexport const MutedVariant: Story = {\n  render: () => (\n    <div className=\"w-[400px]\">\n      <Item variant=\"muted\">\n        <ItemMedia variant=\"icon\">\n          <Star className=\"fill-yellow-500 text-yellow-500\" />\n        </ItemMedia>\n        <ItemContent>\n          <ItemTitle>Featured Project</ItemTitle>\n          <ItemDescription>\n            This project has been starred by 1.2k users\n          </ItemDescription>\n        </ItemContent>\n        <ItemActions>\n          <Button size=\"sm\">View Project</Button>\n        </ItemActions>\n      </Item>\n    </div>\n  ),\n};\n\n/**\n * 작은 크기의 Item입니다.\n * 컴팩트한 리스트나 사이드바에 적합합니다.\n */\nexport const SmallSize: Story = {\n  render: () => (\n    <div className=\"w-[350px]\">\n      <ItemGroup>\n        <Item size=\"sm\">\n          <ItemMedia variant=\"icon\">\n            <Zap />\n          </ItemMedia>\n          <ItemContent>\n            <ItemTitle>Quick Actions</ItemTitle>\n          </ItemContent>\n        </Item>\n        <ItemSeparator />\n        <Item size=\"sm\">\n          <ItemContent>\n            <ItemTitle>Recent Files</ItemTitle>\n          </ItemContent>\n          <ItemActions>\n            <Badge variant=\"secondary\">12</Badge>\n          </ItemActions>\n        </Item>\n        <ItemSeparator />\n        <Item size=\"sm\">\n          <ItemContent>\n            <ItemTitle>Shared with Me</ItemTitle>\n          </ItemContent>\n          <ItemActions>\n            <Badge variant=\"secondary\">3</Badge>\n          </ItemActions>\n        </Item>\n      </ItemGroup>\n    </div>\n  ),\n};\n\n/**\n * asChild prop을 사용하여 Link로 렌더링할 수 있습니다.\n * 네비게이션 아이템에 유용합니다.\n */\nexport const AsLink: Story = {\n  render: () => (\n    <div className=\"w-[400px]\">\n      <Item asChild>\n        <Link href=\"/profile\">\n          <ItemMedia>\n            <Avatar>\n              <AvatarImage src=\"https://github.com/shadcn.png\" />\n              <AvatarFallback>CN</AvatarFallback>\n            </Avatar>\n          </ItemMedia>\n          <ItemContent>\n            <ItemTitle>shadcn</ItemTitle>\n            <ItemDescription>View profile and settings</ItemDescription>\n          </ItemContent>\n          <ItemActions>\n            <MoreVertical className=\"h-4 w-4\" />\n          </ItemActions>\n        </Link>\n      </Item>\n    </div>\n  ),\n};\n\n/**\n * Header와 Footer를 사용한 복잡한 레이아웃입니다.\n * 더 많은 정보를 구조적으로 표시할 수 있습니다.\n */\nexport const WithHeaderFooter: Story = {\n  render: () => (\n    <div className=\"w-[450px]\">\n      <Item variant=\"outline\">\n        <ItemHeader>\n          <ItemContent>\n            <ItemTitle>Team Meeting</ItemTitle>\n          </ItemContent>\n          <ItemActions>\n            <Badge>Upcoming</Badge>\n          </ItemActions>\n        </ItemHeader>\n        <ItemContent>\n          <ItemDescription>\n            Weekly sync-up with the product team to discuss Q4 roadmap\n          </ItemDescription>\n        </ItemContent>\n        <ItemFooter>\n          <ItemContent className=\"flex flex-row items-center gap-4\">\n            <div className=\"flex items-center gap-1\">\n              <Calendar className=\"text-muted-foreground h-4 w-4\" />\n              <span className=\"text-muted-foreground text-sm\">\n                Today, 3:00 PM\n              </span>\n            </div>\n            <div className=\"flex items-center gap-1\">\n              <Users className=\"text-muted-foreground h-4 w-4\" />\n              <span className=\"text-muted-foreground text-sm\">\n                8 participants\n              </span>\n            </div>\n          </ItemContent>\n          <ItemActions>\n            <Button size=\"sm\">Join</Button>\n          </ItemActions>\n        </ItemFooter>\n      </Item>\n    </div>\n  ),\n};\n\n/**\n * 여러 ItemMedia를 조합한 예제입니다.\n * 복잡한 미디어 표현이 가능합니다.\n */\nexport const MultipleMedia: Story = {\n  render: () => (\n    <div className=\"w-[400px]\">\n      <Item>\n        <ItemMedia>\n          <Avatar className=\"h-8 w-8\">\n            <AvatarFallback>JD</AvatarFallback>\n          </Avatar>\n          <Avatar className=\"-ml-2 h-8 w-8\">\n            <AvatarFallback>AS</AvatarFallback>\n          </Avatar>\n          <Avatar className=\"-ml-2 h-8 w-8\">\n            <AvatarFallback>+2</AvatarFallback>\n          </Avatar>\n        </ItemMedia>\n        <ItemContent>\n          <ItemTitle>Design System Updates</ItemTitle>\n          <ItemDescription>\n            4 people are collaborating on this file\n          </ItemDescription>\n        </ItemContent>\n        <ItemActions>\n          <Button size=\"sm\" variant=\"outline\">\n            Open\n          </Button>\n        </ItemActions>\n      </Item>\n    </div>\n  ),\n};\n\n/**\n * 중첩된 Item 구조 예제입니다.\n * 계층적인 정보를 표시할 수 있습니다.\n */\nexport const NestedItems: Story = {\n  render: () => (\n    <div className=\"w-[450px]\">\n      <ItemGroup>\n        <Item variant=\"muted\">\n          <ItemContent>\n            <ItemTitle>Frontend Development</ItemTitle>\n            <ItemDescription>3 courses available</ItemDescription>\n          </ItemContent>\n        </Item>\n        <div className=\"pl-8\">\n          <Item size=\"sm\">\n            <ItemContent>\n              <ItemTitle>React Fundamentals</ItemTitle>\n              <ItemDescription>12 lessons · 3 hours</ItemDescription>\n            </ItemContent>\n          </Item>\n          <ItemSeparator className=\"ml-4\" />\n          <Item size=\"sm\">\n            <ItemContent>\n              <ItemTitle>Advanced TypeScript</ItemTitle>\n              <ItemDescription>8 lessons · 2 hours</ItemDescription>\n            </ItemContent>\n          </Item>\n          <ItemSeparator className=\"ml-4\" />\n          <Item size=\"sm\">\n            <ItemContent>\n              <ItemTitle>Next.js Mastery</ItemTitle>\n              <ItemDescription>15 lessons · 4 hours</ItemDescription>\n            </ItemContent>\n          </Item>\n        </div>\n      </ItemGroup>\n    </div>\n  ),\n};\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "atoms",
    "storybook",
    "item",
    "list"
  ]
}