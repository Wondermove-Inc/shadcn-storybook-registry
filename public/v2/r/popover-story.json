{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "popover-story",
  "type": "registry:component",
  "title": "Popover Story",
  "author": "Lloyd Richards <lloyd.d.richards@gmail.com>",
  "description": "Interactive Storybook stories demonstrating popover component usage and variants",
  "registryDependencies": [
    "popover"
  ],
  "files": [
    {
      "path": "src/registry/atoms/popover-story/popover.stories.tsx",
      "content": "import React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport type { Meta, StoryObj } from \"@storybook/react-vite\";\nimport { expect, userEvent, within } from \"storybook/test\";\n\nfunction PopoverDemo() {\n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <Button variant=\"outline\">Open popover</Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-80\">\n        <div className=\"grid gap-4\">\n          <div className=\"space-y-2\">\n            <h4 className=\"leading-none font-medium\">Dimensions</h4>\n            <p className=\"text-muted-foreground text-sm\">\n              Set the dimensions for the layer.\n            </p>\n          </div>\n          <div className=\"grid gap-2\">\n            <div className=\"grid grid-cols-3 items-center gap-4\">\n              <Label htmlFor=\"width\">Width</Label>\n              <Input\n                id=\"width\"\n                defaultValue=\"100%\"\n                className=\"col-span-2 h-8\"\n              />\n            </div>\n            <div className=\"grid grid-cols-3 items-center gap-4\">\n              <Label htmlFor=\"maxWidth\">Max. width</Label>\n              <Input\n                id=\"maxWidth\"\n                defaultValue=\"300px\"\n                className=\"col-span-2 h-8\"\n              />\n            </div>\n            <div className=\"grid grid-cols-3 items-center gap-4\">\n              <Label htmlFor=\"height\">Height</Label>\n              <Input\n                id=\"height\"\n                defaultValue=\"25px\"\n                className=\"col-span-2 h-8\"\n              />\n            </div>\n            <div className=\"grid grid-cols-3 items-center gap-4\">\n              <Label htmlFor=\"maxHeight\">Max. height</Label>\n              <Input\n                id=\"maxHeight\"\n                defaultValue=\"none\"\n                className=\"col-span-2 h-8\"\n              />\n            </div>\n          </div>\n        </div>\n      </PopoverContent>\n    </Popover>\n  );\n}\n\n/**\n * Displays rich content in a portal, triggered by a button.\n */\nconst meta = {\n  title: \"ui/Popover\",\n  component: Popover,\n  tags: [\"autodocs\"],\n  parameters: {\n    layout: \"centered\",\n  },\n} satisfies Meta<typeof Popover>;\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\n\n/**\n * The default form of the popover with a form for setting dimensions.\n */\nexport const Default: Story = {\n  render: () => <PopoverDemo />,\n};\n\nexport const ShouldOpenPopover: Story = {\n  name: \"when popover trigger is clicked, should open popover\",\n  tags: [\"!dev\", \"!autodocs\"],\n  render: () => <PopoverDemo />,\n  play: async ({ canvasElement, step }) => {\n    const canvas = within(canvasElement);\n\n    await step(\"click 'Open popover' button to open popover\", async () => {\n      const openButton = canvas.getByRole(\"button\", { name: /open popover/i });\n      await userEvent.click(openButton);\n    });\n\n    const popoverHeading = await canvas.findByText(/Dimensions/i);\n    await expect(popoverHeading).toBeVisible();\n  },\n};\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "atoms",
    "storybook",
    "popover",
    "overlay"
  ]
}