{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "scroll-area-story",
  "type": "registry:component",
  "title": "Scroll Area Story",
  "author": "Lloyd Richards <lloyd.d.richards@gmail.com>",
  "description": "Interactive Storybook stories demonstrating scroll area component usage and variants",
  "registryDependencies": [
    "scroll-area"
  ],
  "files": [
    {
      "path": "src/registry/atoms/scroll-area-story/scroll-area.stories.tsx",
      "content": "import type { Meta, StoryObj } from \"@storybook/nextjs-vite\";\nimport * as React from \"react\"\nimport Image from \"next/image\"\nimport { ScrollArea, ScrollBar } from \"@/components/ui/scroll-area\"\nimport { Separator } from \"@/components/ui/separator\"\n\nconst tags = Array.from({ length: 50 }).map(\n  (_, i, a) => `v1.2.0-beta.${a.length - i}`\n)\n\ninterface Artwork {\n  artist: string\n  art: string\n}\n\nconst works: Artwork[] = [\n  {\n    artist: \"Ornella Binni\",\n    art: \"https://images.unsplash.com/photo-1465869185982-5a1a7522cbcb?auto=format&fit=crop&w=300&q=80\",\n  },\n  {\n    artist: \"Tom Byrom\",\n    art: \"https://images.unsplash.com/photo-1548516173-3cabfa4607e9?auto=format&fit=crop&w=300&q=80\",\n  },\n  {\n    artist: \"Vladimir Malyavko\",\n    art: \"https://images.unsplash.com/photo-1494337480532-3725c85fd2ab?auto=format&fit=crop&w=300&q=80\",\n  },\n]\n\n// Demo component from official docs\nexport function ScrollAreaDemo() {\n  return (\n    <ScrollArea className=\"h-72 w-48 rounded-md border\">\n      <div className=\"p-4\">\n        <h4 className=\"mb-4 text-sm leading-none font-medium\">Tags</h4>\n        {tags.map((tag) => (\n          <React.Fragment key={tag}>\n            <div className=\"text-sm\">{tag}</div>\n            <Separator className=\"my-2\" />\n          </React.Fragment>\n        ))}\n      </div>\n    </ScrollArea>\n  )\n}\n\n// Horizontal demo component from official docs\nexport function ScrollAreaHorizontalDemo() {\n  return (\n    <ScrollArea className=\"w-96 rounded-md border whitespace-nowrap\">\n      <div className=\"flex w-max space-x-4 p-4\">\n        {works.map((artwork) => (\n          <figure key={artwork.artist} className=\"shrink-0\">\n            <div className=\"overflow-hidden rounded-md\">\n              <Image\n                src={artwork.art}\n                alt={`Photo by ${artwork.artist}`}\n                className=\"aspect-[3/4] h-fit w-fit object-cover\"\n                width={300}\n                height={400}\n              />\n            </div>\n            <figcaption className=\"text-muted-foreground pt-2 text-xs\">\n              Photo by{\" \"}\n              <span className=\"text-foreground font-semibold\">\n                {artwork.artist}\n              </span>\n            </figcaption>\n          </figure>\n        ))}\n      </div>\n      <ScrollBar orientation=\"horizontal\" />\n    </ScrollArea>\n  )\n}\n\n/**\n * Augments native scroll functionality for custom, cross-browser styling.\n */\nconst meta = {\n  title: \"ui/ScrollArea\",\n  component: ScrollArea,\n  tags: [\"autodocs\"],\n  parameters: {\n    layout: \"centered\",\n  },\n  excludeStories: /.*Demo$/,\n  argTypes: {\n    className: {\n      control: 'text',\n      description: 'Additional CSS classes to apply'\n    },\n    children: {\n      control: false,\n      description: 'Content to be scrolled'\n    }\n  }\n} satisfies Meta<typeof ScrollArea>;\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\n\n/**\n * The default form of the scroll area with vertical scrolling.\n */\nexport const Default: Story = {\n  render: () => <ScrollAreaDemo />\n};\n\n/**\n * Basic usage with simple text content.\n */\nexport const BasicUsage: Story = {\n  render: () => (\n    <ScrollArea className=\"h-[200px] w-[350px] rounded-md border p-4\">\n      Jokester began sneaking into the castle in the middle of the night and leaving \n      jokes all over the place: under the king's pillow, in his soup, even in the \n      royal toilet. The king was furious, but he couldn't seem to stop Jokester. \n      And then, one day, the people of the kingdom discovered that the jokes left \n      by Jokester were so funny that they couldn't help but laugh. And once they \n      started laughing, they couldn't stop. The laughter spread throughout the \n      kingdom, bringing joy and happiness to everyone. Even the grumpy king couldn't \n      help but chuckle at some of the jokes. From that day on, Jokester became a \n      beloved figure in the kingdom, bringing laughter and joy to all.\n    </ScrollArea>\n  )\n};\n\n/**\n * Horizontal scrolling with images.\n */\nexport const HorizontalScrolling: Story = {\n  render: () => <ScrollAreaHorizontalDemo />\n};\n\n/**\n * Vertical scrolling with custom height.\n */\nexport const CustomHeight: Story = {\n  render: () => (\n    <ScrollArea className=\"h-[400px] w-[250px] rounded-md border\">\n      <div className=\"p-4\">\n        <h4 className=\"mb-4 text-sm font-medium leading-none\">Notifications</h4>\n        {Array.from({ length: 20 }).map((_, i) => (\n          <React.Fragment key={i}>\n            <div className=\"py-2\">\n              <p className=\"text-sm font-medium\">Notification {i + 1}</p>\n              <p className=\"text-sm text-muted-foreground\">\n                This is a sample notification message that might be longer than expected and needs scrolling.\n              </p>\n            </div>\n            {i < 19 && <Separator />}\n          </React.Fragment>\n        ))}\n      </div>\n    </ScrollArea>\n  )\n};\n\n/**\n * Both horizontal and vertical scrolling.\n */\nexport const BothDirections: Story = {\n  render: () => (\n    <ScrollArea className=\"h-[300px] w-[300px] rounded-md border\">\n      <div className=\"p-4\">\n        <table className=\"w-[600px]\">\n          <thead>\n            <tr className=\"border-b\">\n              <th className=\"text-left p-2\">Name</th>\n              <th className=\"text-left p-2\">Email</th>\n              <th className=\"text-left p-2\">Status</th>\n              <th className=\"text-left p-2\">Role</th>\n              <th className=\"text-left p-2\">Last Active</th>\n            </tr>\n          </thead>\n          <tbody>\n            {Array.from({ length: 30 }).map((_, i) => (\n              <tr key={i} className=\"border-b\">\n                <td className=\"p-2\">User {i + 1}</td>\n                <td className=\"p-2\">user{i + 1}@example.com</td>\n                <td className=\"p-2\">Active</td>\n                <td className=\"p-2\">Member</td>\n                <td className=\"p-2\">2024-01-{(i % 28) + 1}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      <ScrollBar orientation=\"horizontal\" />\n    </ScrollArea>\n  )\n};",
      "type": "registry:component"
    }
  ],
  "categories": [
    "atoms",
    "storybook",
    "scroll",
    "layout"
  ]
}