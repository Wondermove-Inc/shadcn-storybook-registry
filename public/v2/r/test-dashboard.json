{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "test-dashboard",
  "type": "registry:component",
  "title": "Test Dashboard",
  "author": "Lloyd Richards <lloyd.d.richards@gmail.com>",
  "description": "Complete dashboard template with data table, calendar, and charts based on Figma design",
  "dependencies": [
    "lucide-react",
    "recharts",
    "react-day-picker",
    "date-fns"
  ],
  "registryDependencies": [
    "badge",
    "button",
    "calendar",
    "card",
    "chart",
    "checkbox",
    "dropdown-menu",
    "input",
    "table"
  ],
  "files": [
    {
      "path": "src/registry/templates/test-dashboard/figma-dashboard-template.stories.tsx",
      "content": "import { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  ChartConfig,\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/components/ui/chart\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport type { Meta, StoryObj } from \"@storybook/nextjs-vite\";\nimport { addDays, addMonths } from \"date-fns\";\nimport {\n  BarChart3,\n  ChevronDown,\n  ChevronLeft,\n  ChevronRight,\n  ExternalLink,\n  MoreHorizontal,\n  SortDesc,\n  TrendingUp,\n} from \"lucide-react\";\nimport { useState } from \"react\";\nimport { DateRange } from \"react-day-picker\";\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n} from \"recharts\";\n\n/**\n * 🎯 목적: Figma 디자인을 기반으로 만든 대시보드 템플릿\n *\n * 이 템플릿은 Data Table, Calendar, Chart 컴포넌트를 포함한\n * 완전한 대시보드 레이아웃을 제공합니다.\n *\n * 📐 디자인 토큰 사용:\n * - Typography: text-2xl (24px), text-3xl (30px)\n * - Spacing: p-8 (32px), gap-6 (24px), space-y-8 (32px)\n * - Layout: max-w-7xl, h-96 (384px)\n * - 모든 값은 Storybook 디자인 토큰을 준수합니다\n */\nconst meta: Meta = {\n  title: \"templates/Test Dashboard\",\n  parameters: {\n    layout: \"fullscreen\",\n    viewport: {\n      defaultViewport: \"figmaDesktop\",\n    },\n    chromatic: {\n      viewports: [1721],\n    },\n  },\n} satisfies Meta;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\n// 🎯 차트 데이터\nconst chartData = [\n  { month: \"Jan\", value: 186 },\n  { month: \"Feb\", value: 305 },\n  { month: \"Mar\", value: 237 },\n  { month: \"Apr\", value: 273 },\n  { month: \"May\", value: 209 },\n  { month: \"Jun\", value: 214 },\n];\n\nconst chartConfig = {\n  value: {\n    label: \"Revenue\",\n    color: \"hsl(var(--primary))\",\n  },\n} satisfies ChartConfig;\n\n// 🎯 테이블 데이터\nconst invoiceData = [\n  { id: 1, email: \"david291@gmail.com\", amount: 2173.52, status: \"Success\" },\n  {\n    id: 2,\n    email: \"k.r.mastrangelo@outlook.com\",\n    amount: 2839.41,\n    status: \"Success\",\n  },\n  {\n    id: 3,\n    email: \"c_j_mccoy@gmail.com\",\n    amount: 6222.27,\n    status: \"Processing\",\n  },\n  {\n    id: 4,\n    email: \"s.t.sharkey@outlook.com\",\n    amount: 4171.32,\n    status: \"Success\",\n  },\n  {\n    id: 5,\n    email: \"patricia651@outlook.com\",\n    amount: 2012.93,\n    status: \"Failed\",\n  },\n];\n\n/**\n * 전체 대시보드 템플릿\n */\nexport const Default: Story = {\n  render: () => {\n    const [selectedRowIds, setSelectedRowIds] = useState<Set<number>>(\n      new Set(),\n    );\n    const [dateRange, setDateRange] = useState<DateRange | undefined>({\n      from: new Date(2025, 0, 12),\n      to: addDays(new Date(2025, 0, 12), 13),\n    });\n    const [currentMonth, setCurrentMonth] = useState(new Date(2025, 0));\n    const [emailFilter, setEmailFilter] = useState(\"\");\n\n    // 🎯 전체 선택 처리\n    const handleSelectAll = (checked: boolean) => {\n      if (checked) {\n        setSelectedRowIds(new Set(invoiceData.map((item) => item.id)));\n      } else {\n        setSelectedRowIds(new Set());\n      }\n    };\n\n    // 🎯 개별 선택 처리\n    const handleSelectRow = (id: number, checked: boolean) => {\n      const newSelectedIds = new Set(selectedRowIds);\n      if (checked) {\n        newSelectedIds.add(id);\n      } else {\n        newSelectedIds.delete(id);\n      }\n      setSelectedRowIds(newSelectedIds);\n    };\n\n    // 🎯 필터링된 데이터\n    const filteredData = invoiceData.filter((item) =>\n      item.email.toLowerCase().includes(emailFilter.toLowerCase()),\n    );\n\n    return (\n      <div className=\"bg-background min-h-screen p-8\">\n        <div className=\"mx-auto\" style={{ maxWidth: \"1625px\" }}>\n          {/* 🎯 목적: 2컬럼 그리드 레이아웃 - 디자인 토큰 기반 */}\n          <div\n            className=\"grid gap-6\"\n            style={{ gridTemplateColumns: \"768px 1fr\" }}\n          >\n            {/* 왼쪽 컬럼: 차트 카드 (전체 높이) */}\n            <Card className=\"shadow-sm\">\n              <CardHeader className=\"border-b\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-3\">\n                    <BarChart3 className=\"text-muted-foreground h-8 w-8\" />\n                    <span className=\"text-muted-foreground text-2xl font-medium\">\n                      Chart\n                    </span>\n                  </div>\n                  <Button\n                    variant=\"link\"\n                    className=\"flex h-auto items-center gap-2 p-0 text-base\"\n                  >\n                    View docs\n                    <ExternalLink className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </CardHeader>\n              <CardContent className=\"p-8\">\n                <div className=\"space-y-8\">\n                  <div>\n                    <CardTitle className=\"text-3xl font-semibold\">\n                      Bar Chart\n                    </CardTitle>\n                    <CardDescription className=\"text-muted-foreground mt-3 text-2xl\">\n                      January - June 2024\n                    </CardDescription>\n                  </div>\n\n                  <ChartContainer config={chartConfig} className=\"h-96\">\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\n                      <BarChart data={chartData}>\n                        <CartesianGrid strokeDasharray=\"0\" vertical={false} />\n                        <XAxis\n                          dataKey=\"month\"\n                          tickLine={false}\n                          axisLine={false}\n                          tickMargin={8}\n                        />\n                        <YAxis\n                          tickLine={false}\n                          axisLine={false}\n                          tickMargin={8}\n                          tickFormatter={(value) => `$${value}`}\n                        />\n                        <ChartTooltip content={<ChartTooltipContent />} />\n                        <Bar\n                          dataKey=\"value\"\n                          fill=\"hsl(var(--primary))\"\n                          radius={[8, 8, 0, 0]}\n                          className=\"fill-primary\"\n                        />\n                      </BarChart>\n                    </ResponsiveContainer>\n                  </ChartContainer>\n                </div>\n              </CardContent>\n              <CardFooter className=\"flex-col gap-4 px-8 pb-8\">\n                <div className=\"flex items-center gap-4 text-2xl leading-none font-medium\">\n                  Trending up by 5.2% this month\n                  <TrendingUp className=\"h-4 w-4\" />\n                </div>\n                <div className=\"text-muted-foreground text-2xl leading-none\">\n                  Showing total visitors for the last 6 months\n                </div>\n              </CardFooter>\n            </Card>\n\n            {/* 오른쪽 컬럼: 캘린더와 테이블 (세로 배치) */}\n            <div className=\"flex flex-col gap-6\">\n              {/* 캘린더 카드 */}\n              <Card className=\"shadow-sm\">\n                <CardContent className=\"p-0\">\n                  <div className=\"flex gap-4 p-3\">\n                    <div className=\"w-1/2\">\n                      <div className=\"mb-4 flex items-center justify-between\">\n                        <h3 className=\"text-sm font-medium\">January 2025</h3>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"icon\"\n                          onClick={() =>\n                            setCurrentMonth(addMonths(currentMonth, -1))\n                          }\n                        >\n                          <ChevronLeft className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                      <Calendar\n                        mode=\"range\"\n                        selected={dateRange}\n                        onSelect={setDateRange}\n                        month={currentMonth}\n                        className=\"rounded-md border-0\"\n                      />\n                    </div>\n                    <div className=\"w-1/2\">\n                      <div className=\"mb-4 flex items-center justify-between\">\n                        <h3 className=\"text-sm font-medium\">February 2025</h3>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"icon\"\n                          onClick={() =>\n                            setCurrentMonth(addMonths(currentMonth, 1))\n                          }\n                        >\n                          <ChevronRight className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                      <Calendar\n                        mode=\"range\"\n                        selected={dateRange}\n                        onSelect={setDateRange}\n                        month={addMonths(currentMonth, 1)}\n                        className=\"rounded-md border-0\"\n                      />\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* 데이터 테이블 */}\n              <Card className=\"shadow-sm\">\n                <CardHeader className=\"pb-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"relative max-w-sm\">\n                      <Input\n                        placeholder=\"Filter emails...\"\n                        value={emailFilter}\n                        onChange={(e) => setEmailFilter(e.target.value)}\n                        className=\"h-9 pr-8\"\n                      />\n                    </div>\n                    <DropdownMenu>\n                      <DropdownMenuTrigger asChild>\n                        <Button variant=\"outline\" className=\"gap-2\">\n                          Columns\n                          <ChevronDown className=\"h-4 w-4\" />\n                        </Button>\n                      </DropdownMenuTrigger>\n                      <DropdownMenuContent align=\"end\">\n                        <DropdownMenuItem>Status</DropdownMenuItem>\n                        <DropdownMenuItem>Email</DropdownMenuItem>\n                        <DropdownMenuItem>Amount</DropdownMenuItem>\n                      </DropdownMenuContent>\n                    </DropdownMenu>\n                  </div>\n                </CardHeader>\n                <CardContent className=\"p-0\">\n                  <div className=\"overflow-auto\">\n                    <Table>\n                      <TableHeader>\n                        <TableRow>\n                          <TableHead className=\"w-12\">\n                            <Checkbox\n                              checked={\n                                filteredData.length > 0 &&\n                                selectedRowIds.size === filteredData.length\n                              }\n                              onCheckedChange={handleSelectAll}\n                            />\n                          </TableHead>\n                          <TableHead>Status</TableHead>\n                          <TableHead>\n                            <Button\n                              variant=\"ghost\"\n                              className=\"-ml-4 h-auto p-2 hover:bg-transparent\"\n                            >\n                              Email\n                              <SortDesc className=\"ml-2 h-4 w-4\" />\n                            </Button>\n                          </TableHead>\n                          <TableHead className=\"text-right\">Amount</TableHead>\n                          <TableHead className=\"w-12\"></TableHead>\n                        </TableRow>\n                      </TableHeader>\n                      <TableBody>\n                        {filteredData.map((invoice) => (\n                          <TableRow key={invoice.id}>\n                            <TableCell>\n                              <Checkbox\n                                checked={selectedRowIds.has(invoice.id)}\n                                onCheckedChange={(checked) =>\n                                  handleSelectRow(\n                                    invoice.id,\n                                    checked as boolean,\n                                  )\n                                }\n                              />\n                            </TableCell>\n                            <TableCell>\n                              <Badge\n                                variant={\n                                  invoice.status === \"Success\"\n                                    ? \"default\"\n                                    : invoice.status === \"Processing\"\n                                      ? \"secondary\"\n                                      : \"destructive\"\n                                }\n                              >\n                                {invoice.status}\n                              </Badge>\n                            </TableCell>\n                            <TableCell className=\"font-medium\">\n                              {invoice.email}\n                            </TableCell>\n                            <TableCell className=\"text-right\">\n                              ${invoice.amount.toFixed(2)}\n                            </TableCell>\n                            <TableCell>\n                              <DropdownMenu>\n                                <DropdownMenuTrigger asChild>\n                                  <Button\n                                    variant=\"ghost\"\n                                    size=\"icon\"\n                                    className=\"h-8 w-8\"\n                                  >\n                                    <MoreHorizontal className=\"h-4 w-4\" />\n                                    <span className=\"sr-only\">Open menu</span>\n                                  </Button>\n                                </DropdownMenuTrigger>\n                                <DropdownMenuContent align=\"end\">\n                                  <DropdownMenuItem>\n                                    Copy email\n                                  </DropdownMenuItem>\n                                  <DropdownMenuItem>\n                                    View details\n                                  </DropdownMenuItem>\n                                  <DropdownMenuItem>Edit</DropdownMenuItem>\n                                </DropdownMenuContent>\n                              </DropdownMenu>\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </div>\n                </CardContent>\n                <CardFooter className=\"flex items-center justify-between border-t py-4\">\n                  <div className=\"text-muted-foreground text-sm\">\n                    {selectedRowIds.size} of {filteredData.length} row(s)\n                    selected.\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      className=\"h-9\"\n                      disabled\n                    >\n                      Previous\n                    </Button>\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      className=\"h-9\"\n                      disabled\n                    >\n                      Next\n                    </Button>\n                  </div>\n                </CardFooter>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "templates",
    "storybook",
    "dashboard",
    "data-table",
    "calendar",
    "charts"
  ]
}