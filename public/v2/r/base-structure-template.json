{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "base-structure-template",
  "type": "registry:component",
  "title": "Base Structure Template",
  "author": "Lloyd Richards <lloyd.d.richards@gmail.com>",
  "description": "A comprehensive file explorer interface template with sidebar navigation, file tree, search functionality, and AI assistant panel",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "sidebar",
    "input",
    "button",
    "card",
    "badge",
    "collapsible",
    "separator"
  ],
  "files": [
    {
      "path": "src/registry/templates/base-structure-template/base-structure-template.tsx",
      "content": "\"use client\";\n\nimport React from \"react\";\nimport {\n  ChevronDown,\n  ChevronRight,\n  File,\n  Folder,\n  FolderOpen,\n  Search,\n  Settings,\n  Plus,\n  MoreHorizontal,\n  MessageSquare,\n  Send,\n} from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"@/components/ui/collapsible\";\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarProvider,\n  SidebarTrigger,\n} from \"@/components/ui/sidebar\";\n\n// 🎯 목적: 파일 트리 항목의 타입 정의\ninterface FileTreeItem {\n  id: string;\n  name: string;\n  type: \"file\" | \"folder\";\n  children?: FileTreeItem[];\n  extension?: string;\n}\n\n// 🎯 목적: JSON 명세서에 따른 파일 트리 데이터 - 프로젝트 문서화 구조\nconst changedFiles: FileTreeItem[] = [\n  { id: \"readme\", name: \"README.md\", type: \"file\", extension: \"md\" },\n  {\n    id: \"api-hello-route\",\n    name: \"api/hello/route.ts\",\n    type: \"file\",\n    extension: \"ts\",\n  },\n  { id: \"app-layout\", name: \"app/layout.tsx\", type: \"file\", extension: \"tsx\" },\n];\n\nconst projectFiles: FileTreeItem[] = [\n  {\n    id: \"app\",\n    name: \"app\",\n    type: \"folder\",\n    children: [\n      {\n        id: \"api\",\n        name: \"api\",\n        type: \"folder\",\n        children: [\n          {\n            id: \"hello\",\n            name: \"hello\",\n            type: \"folder\",\n            children: [\n              { id: \"route\", name: \"route.ts\", type: \"file\", extension: \"ts\" },\n            ],\n          },\n        ],\n      },\n      { id: \"favicon\", name: \"favicon.ico\", type: \"file\", extension: \"ico\" },\n      { id: \"globals\", name: \"globals.css\", type: \"file\", extension: \"css\" },\n      { id: \"layout\", name: \"layout.tsx\", type: \"file\", extension: \"tsx\" },\n      { id: \"page\", name: \"page.tsx\", type: \"file\", extension: \"tsx\" },\n    ],\n  },\n  {\n    id: \"components\",\n    name: \"components\",\n    type: \"folder\",\n    children: [\n      {\n        id: \"ui\",\n        name: \"ui\",\n        type: \"folder\",\n        children: [\n          { id: \"button\", name: \"button.tsx\", type: \"file\", extension: \"tsx\" },\n          { id: \"card\", name: \"card.ts\", type: \"file\", extension: \"ts\" },\n        ],\n      },\n    ],\n  },\n  {\n    id: \"lib\",\n    name: \"lib\",\n    type: \"folder\",\n    children: [\n      { id: \"utils\", name: \"utils.ts\", type: \"file\", extension: \"ts\" },\n    ],\n  },\n  {\n    id: \"public\",\n    name: \"public\",\n    type: \"folder\",\n    children: [\n      { id: \"next\", name: \"next.svg\", type: \"file\", extension: \"svg\" },\n      { id: \"vercel\", name: \"vercel.svg\", type: \"file\", extension: \"svg\" },\n    ],\n  },\n  { id: \"gitignore\", name: \".gitignore\", type: \"file\", extension: \"\" },\n  { id: \"eslintrc\", name: \".eslintrc.json\", type: \"file\", extension: \"json\" },\n  { id: \"nextconfig\", name: \"next.config.js\", type: \"file\", extension: \"js\" },\n  { id: \"package\", name: \"package.json\", type: \"file\", extension: \"json\" },\n  { id: \"readme\", name: \"README.md\", type: \"file\", extension: \"md\" },\n  {\n    id: \"tailwindconfig\",\n    name: \"tailwind.config.js\",\n    type: \"file\",\n    extension: \"js\",\n  },\n  { id: \"tsconfig\", name: \"tsconfig.json\", type: \"file\", extension: \"json\" },\n];\n\n// 🎯 목적: 파일 확장자별 색상 매핑 - 시각적 구분을 위한 배지 색상\nconst getFileTypeColor = (extension?: string): string => {\n  switch (extension) {\n    case \"tsx\":\n    case \"jsx\":\n      return \"bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300\";\n    case \"ts\":\n    case \"js\":\n      return \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300\";\n    case \"css\":\n    case \"scss\":\n      return \"bg-pink-100 text-pink-800 dark:bg-pink-900 dark:text-pink-300\";\n    case \"json\":\n      return \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300\";\n    case \"md\":\n      return \"bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-300\";\n    default:\n      return \"bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-300\";\n  }\n};\n\n// 🎯 목적: 재귀적 파일 트리 렌더링 컴포넌트\ninterface FileTreeNodeProps {\n  item: FileTreeItem;\n  level: number;\n  onFileSelect: (file: FileTreeItem) => void;\n  selectedFileId?: string;\n}\n\nconst FileTreeNode: React.FC<FileTreeNodeProps> = ({\n  item,\n  level,\n  onFileSelect,\n  selectedFileId,\n}) => {\n  const [isOpen, setIsOpen] = React.useState(level < 2); // 2단계까지 기본 열림\n  const isSelected = selectedFileId === item.id;\n  const paddingLeft = `${level * 16}px`; // 중첩 레벨에 따른 들여쓰기\n\n  if (item.type === \"folder\") {\n    return (\n      <Collapsible open={isOpen} onOpenChange={setIsOpen}>\n        <CollapsibleTrigger asChild>\n          <SidebarMenuButton\n            className={`hover:bg-accent hover:text-accent-foreground w-full justify-start ${\n              isSelected ? \"bg-accent text-accent-foreground\" : \"\"\n            }`}\n            style={{ paddingLeft }}\n          >\n            {isOpen ? (\n              <ChevronDown className=\"mr-2 h-4 w-4\" />\n            ) : (\n              <ChevronRight className=\"mr-2 h-4 w-4\" />\n            )}\n            {isOpen ? (\n              <FolderOpen className=\"mr-2 h-4 w-4\" />\n            ) : (\n              <Folder className=\"mr-2 h-4 w-4\" />\n            )}\n            <span className=\"truncate\">{item.name}</span>\n          </SidebarMenuButton>\n        </CollapsibleTrigger>\n        <CollapsibleContent>\n          {item.children?.map((child) => (\n            <FileTreeNode\n              key={child.id}\n              item={child}\n              level={level + 1}\n              onFileSelect={onFileSelect}\n              selectedFileId={selectedFileId}\n            />\n          ))}\n        </CollapsibleContent>\n      </Collapsible>\n    );\n  }\n\n  return (\n    <SidebarMenuButton\n      className={`hover:bg-accent hover:text-accent-foreground w-full justify-start ${\n        isSelected ? \"bg-accent text-accent-foreground\" : \"\"\n      }`}\n      style={{ paddingLeft }}\n      onClick={() => onFileSelect(item)}\n    >\n      <File className=\"mr-2 h-4 w-4\" />\n      <span className=\"flex-1 truncate\">{item.name}</span>\n      {item.extension && (\n        <Badge\n          variant=\"secondary\"\n          className={`ml-2 text-xs ${getFileTypeColor(item.extension)}`}\n        >\n          {item.extension}\n        </Badge>\n      )}\n    </SidebarMenuButton>\n  );\n};\n\n// 🎯 목적: 메인 베이스 구조 템플릿 컴포넌트\nexport function BaseStructureTemplate() {\n  const [selectedFile, setSelectedFile] = React.useState<FileTreeItem | null>(\n    null,\n  );\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\n  const [chatMessage, setChatMessage] = React.useState(\"\");\n\n  // 🎯 목적: 파일 선택 핸들러 - 선택된 파일 상태 업데이트\n  const handleFileSelect = (file: FileTreeItem) => {\n    setSelectedFile(file);\n  };\n\n  // 🎯 목적: 검색 쿼리에 따른 파일 필터링 (실제 구현에서는 더 복잡한 로직 필요)\n  const filteredProjectFiles = React.useMemo(() => {\n    if (!searchQuery) return projectFiles;\n    // 간단한 파일명 검색 (실제로는 더 정교한 검색 로직 필요)\n    return projectFiles; // 여기서는 간단히 전체 트리 반환\n  }, [searchQuery]);\n\n  const filteredChangedFiles = React.useMemo(() => {\n    if (!searchQuery) return changedFiles;\n    return changedFiles; // 여기서는 간단히 전체 트리 반환\n  }, [searchQuery]);\n\n  return (\n    <SidebarProvider>\n      <div className=\"bg-background flex h-screen\">\n        {/* 사이드바 영역 - JSON 명세서에 따른 구조 */}\n        <Sidebar className=\"border-r\">\n          {/* 프로젝트 헤더 */}\n          <SidebarHeader className=\"border-b p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2\">\n                <Folder className=\"h-4 w-4\" />\n                <span className=\"text-sm font-medium\">\n                  Documentation v1.0.1\n                </span>\n              </div>\n              <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6\">\n                <ChevronDown className=\"h-3 w-3\" />\n              </Button>\n            </div>\n          </SidebarHeader>\n\n          <SidebarContent>\n            {/* Changes 섹션 */}\n            <SidebarGroup>\n              <SidebarGroupLabel className=\"text-muted-foreground text-xs font-medium tracking-wide uppercase\">\n                Changes\n              </SidebarGroupLabel>\n              <SidebarGroupContent>\n                <SidebarMenu>\n                  {filteredChangedFiles.map((item) => (\n                    <SidebarMenuItem key={item.id}>\n                      <SidebarMenuButton\n                        className=\"hover:bg-accent hover:text-accent-foreground w-full justify-start text-sm\"\n                        onClick={() => handleFileSelect(item)}\n                      >\n                        <File className=\"mr-2 h-4 w-4\" />\n                        <span className=\"flex-1 truncate\">{item.name}</span>\n                        {item.extension && (\n                          <Badge\n                            variant=\"secondary\"\n                            className={`ml-2 text-xs ${getFileTypeColor(item.extension)}`}\n                          >\n                            {item.extension}\n                          </Badge>\n                        )}\n                      </SidebarMenuButton>\n                    </SidebarMenuItem>\n                  ))}\n                </SidebarMenu>\n              </SidebarGroupContent>\n            </SidebarGroup>\n\n            {/* Files 섹션 */}\n            <SidebarGroup>\n              <SidebarGroupLabel className=\"text-muted-foreground text-xs font-medium tracking-wide uppercase\">\n                Files\n              </SidebarGroupLabel>\n              <SidebarGroupContent>\n                <SidebarMenu>\n                  {filteredProjectFiles.map((item) => (\n                    <SidebarMenuItem key={item.id}>\n                      <FileTreeNode\n                        item={item}\n                        level={0}\n                        onFileSelect={handleFileSelect}\n                        selectedFileId={selectedFile?.id}\n                      />\n                    </SidebarMenuItem>\n                  ))}\n                </SidebarMenu>\n              </SidebarGroupContent>\n            </SidebarGroup>\n          </SidebarContent>\n        </Sidebar>\n\n        {/* 메인 콘텐츠 영역 */}\n        <div className=\"flex flex-1 flex-col\">\n          {/* 상단 헤더 */}\n          <header className=\"bg-background border-border flex h-auto w-full shrink-0 items-center justify-between gap-2.5 self-stretch overflow-hidden border-b p-2\">\n            {/* 왼쪽 여백 */}\n            <div className=\"flex items-center\"></div>\n\n            {/* 중앙 검색 영역 */}\n            <div className=\"flex flex-grow items-center justify-center gap-2\">\n              <div className=\"bg-background/[0.045] border-border flex h-9 w-[373px] shrink-0 items-center gap-2 rounded-lg border px-3 py-1 shadow-sm\">\n                <div className=\"flex items-center justify-center gap-2\">\n                  <Search className=\"text-muted-foreground h-4 w-4\" />\n                </div>\n                <Input\n                  placeholder=\"Search...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"text-muted-foreground flex-grow border-0 bg-transparent p-0 focus-visible:ring-0 focus-visible:ring-offset-0\"\n                />\n              </div>\n            </div>\n\n            {/* 우측 버튼 그룹 */}\n            <div className=\"flex items-center\">\n              <div className=\"flex items-center\">\n                {/* 패널 토글 버튼 */}\n                <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  className=\"flex h-8 w-8 shrink-0 items-center justify-center gap-2 rounded-lg bg-transparent p-2\"\n                >\n                  <svg\n                    width=\"16\"\n                    height=\"16\"\n                    viewBox=\"0 0 16 16\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M6 2V14M3.33333 2H12.6667C13.403 2 14 2.59695 14 3.33333V12.6667C14 13.403 13.403 14 12.6667 14H3.33333C2.59695 14 2 13.403 2 12.6667V3.33333C2 2.59695 2.59695 2 3.33333 2Z\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"1.33\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    />\n                  </svg>\n                </Button>\n\n                {/* 하단 패널 토글 버튼 (비활성화) */}\n                <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  className=\"flex h-8 w-8 shrink-0 items-center justify-center gap-2 rounded-lg bg-transparent p-2 opacity-50\"\n                >\n                  <svg\n                    width=\"16\"\n                    height=\"16\"\n                    viewBox=\"0 0 16 16\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M2 10H14M3.33333 2H12.6667C13.403 2 14 2.59695 14 3.33333V12.6667C14 13.403 13.403 14 12.6667 14H3.33333C2.59695 14 2 13.403 2 12.6667V3.33333C2 2.59695 2.59695 2 3.33333 2Z\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"1.33\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    />\n                  </svg>\n                </Button>\n\n                {/* AI 어시스턴트 버튼 */}\n                <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  className=\"flex h-8 w-8 shrink-0 items-center justify-center gap-2 rounded-lg bg-transparent p-2\"\n                >\n                  <svg\n                    width=\"16\"\n                    height=\"16\"\n                    viewBox=\"0 0 16 16\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M7.99998 5.33335V2.66669H5.33331M1.33331 9.33335H2.66665M13.3333 9.33335H14.6666M9.99998 8.66669V10M5.99998 8.66669V10M3.99998 5.33335H12C12.7364 5.33335 13.3333 5.93031 13.3333 6.66669V12C13.3333 12.7364 12.7364 13.3334 12 13.3334H3.99998C3.2636 13.3334 2.66665 12.7364 2.66665 12V6.66669C2.66665 5.93031 3.2636 5.33335 3.99998 5.33335Z\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"1.33\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    />\n                  </svg>\n                </Button>\n\n                {/* 설정 버튼 */}\n                <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  className=\"flex h-8 w-8 shrink-0 items-center justify-center gap-2 rounded-lg bg-transparent p-2\"\n                >\n                  <Settings className=\"h-4 w-4\" />\n                </Button>\n              </div>\n            </div>\n          </header>\n\n          <div className=\"flex flex-1\">\n            {/* 메인 콘텐츠 */}\n            <main className=\"flex-1 p-6\">\n              {selectedFile ? (\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      <File className=\"h-5 w-5\" />\n                      {selectedFile.name}\n                      {selectedFile.extension && (\n                        <Badge\n                          className={getFileTypeColor(selectedFile.extension)}\n                        >\n                          {selectedFile.extension}\n                        </Badge>\n                      )}\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"bg-muted rounded-lg p-4 font-mono text-sm\">\n                      {selectedFile.type === \"file\" ? (\n                        <div className=\"space-y-2\">\n                          <div className=\"text-muted-foreground\">\n                            // {selectedFile.name} 파일의 내용\n                          </div>\n                          <div>\n                            {selectedFile.extension === \"tsx\" && (\n                              <div>\n                                <div className=\"text-blue-600\">import</div>{\" \"}\n                                <div className=\"text-green-600\">React</div>{\" \"}\n                                <div className=\"text-blue-600\">from</div>{\" \"}\n                                <div className=\"text-orange-600\">\"react\"</div>;\n                              </div>\n                            )}\n                            {selectedFile.extension === \"css\" && (\n                              <div>\n                                <div className=\"text-purple-600\">\n                                  .container\n                                </div>{\" \"}\n                                {\"{\"}\n                                <br />\n                                <div className=\"ml-4\">\n                                  <div className=\"text-blue-600\">display</div>:{\" \"}\n                                  <div className=\"text-green-600\">flex</div>;\n                                </div>\n                                <br />\n                                {\"}\"}\n                              </div>\n                            )}\n                            {selectedFile.extension === \"json\" && (\n                              <div>\n                                {\"{\"}\n                                <br />\n                                <div className=\"ml-4\">\n                                  <div className=\"text-blue-600\">\"name\"</div>:{\" \"}\n                                  <div className=\"text-green-600\">\n                                    \"project\"\n                                  </div>\n                                  ,\n                                </div>\n                                <br />\n                                <div className=\"ml-4\">\n                                  <div className=\"text-blue-600\">\"version\"</div>\n                                  :{\" \"}\n                                  <div className=\"text-green-600\">\"1.0.0\"</div>\n                                </div>\n                                <br />\n                                {\"}\"}\n                              </div>\n                            )}\n                            {![\"tsx\", \"css\", \"json\"].includes(\n                              selectedFile.extension || \"\",\n                            ) && (\n                              <div className=\"text-muted-foreground\">\n                                파일 내용을 표시할 수 없습니다.\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      ) : (\n                        <div className=\"text-muted-foreground\">\n                          폴더를 선택했습니다. 파일을 선택해주세요.\n                        </div>\n                      )}\n                    </div>\n                  </CardContent>\n                </Card>\n              ) : (\n                <div className=\"flex h-full items-center justify-center\">\n                  <div className=\"text-center\">\n                    <File className=\"text-muted-foreground mx-auto mb-4 h-12 w-12\" />\n                    <h3 className=\"text-foreground mb-2 text-lg font-medium\">\n                      파일을 선택해주세요\n                    </h3>\n                    <p className=\"text-muted-foreground\">\n                      왼쪽 사이드바에서 파일을 선택하면 내용을 확인할 수\n                      있습니다.\n                    </p>\n                  </div>\n                </div>\n              )}\n            </main>\n\n            {/* AI 어시스턴트 패널 */}\n            <aside className=\"bg-background border-border flex w-80 flex-col border-l\">\n              <div className=\"flex flex-col gap-9 p-6\">\n                {/* 헤더 */}\n                <div className=\"flex flex-col gap-2\">\n                  <h3 className=\"text-foreground text-lg leading-7 font-semibold\">\n                    Skuber+ AI Assistant\n                  </h3>\n                  <p className=\"text-muted-foreground self-stretch text-sm leading-5\">\n                    Please set up the API key to use the AI Assistant.\n                  </p>\n                </div>\n\n                {/* 닫기 아이콘 */}\n                <div className=\"relative flex h-4 w-4 shrink-0 items-start rounded-sm\">\n                  <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    className=\"h-4 w-4 p-0 opacity-70 hover:opacity-100\"\n                  >\n                    <svg\n                      width=\"16\"\n                      height=\"16\"\n                      viewBox=\"0 0 16 16\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <g opacity=\"0.7\">\n                        <path\n                          d=\"M12 4L4 12M4 4L12 12\"\n                          stroke=\"currentColor\"\n                          strokeWidth=\"1.33\"\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                        />\n                      </g>\n                    </svg>\n                  </Button>\n                </div>\n\n                {/* 설정 폼 */}\n                <div className=\"flex flex-col items-end gap-6 self-stretch\">\n                  {/* AI Provider 필드 */}\n                  <div className=\"flex flex-col gap-3 self-stretch\">\n                    <label className=\"text-foreground self-stretch text-sm leading-5 font-medium\">\n                      AI Provider\n                    </label>\n                    <div className=\"bg-background border-border flex shrink-0 items-center gap-2 self-stretch rounded-lg border px-3 py-1 shadow-sm\">\n                      <span className=\"text-muted-foreground flex-1 text-sm leading-5\">\n                        OpenAI (GPT-4)\n                      </span>\n                      <div className=\"flex items-center justify-center gap-2\">\n                        <svg\n                          width=\"16\"\n                          height=\"16\"\n                          viewBox=\"0 0 16 16\"\n                          fill=\"none\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                          <path\n                            d=\"M4 6L8 10L12 6\"\n                            stroke=\"currentColor\"\n                            strokeWidth=\"1.33\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            className=\"text-muted-foreground\"\n                          />\n                        </svg>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* API Key 필드 */}\n                  <div className=\"flex flex-col gap-3 self-stretch\">\n                    <label className=\"text-foreground self-stretch text-sm leading-5 font-medium\">\n                      API Key\n                    </label>\n                    <Input\n                      type=\"text\"\n                      placeholder=\"Please enter the API key\"\n                      className=\"text-muted-foreground placeholder:text-muted-foreground\"\n                      value={chatMessage}\n                      onChange={(e) => setChatMessage(e.target.value)}\n                    />\n                  </div>\n\n                  {/* 시작 버튼 */}\n                  <Button className=\"h-9 px-4 font-medium\">\n                    Start AI Assistant\n                  </Button>\n                </div>\n              </div>\n            </aside>\n          </div>\n        </div>\n      </div>\n    </SidebarProvider>\n  );\n}\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "templates",
    "storybook",
    "layout",
    "navigation",
    "file-explorer"
  ]
}