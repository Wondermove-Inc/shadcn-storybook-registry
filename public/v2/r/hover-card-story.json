{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "hover-card-story",
  "type": "registry:component",
  "title": "Hover Card Story",
  "author": "Lloyd Richards <lloyd.d.richards@gmail.com>",
  "description": "Interactive Storybook stories demonstrating hover card component usage and variants",
  "registryDependencies": [
    "hover-card"
  ],
  "files": [
    {
      "path": "src/registry/atoms/hover-card-story/hover-card.stories.tsx",
      "content": "import type { Meta, StoryObj } from \"@storybook/nextjs-vite\";\nimport { expect, userEvent, waitFor, within } from \"storybook/test\";\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  HoverCard,\n  HoverCardContent,\n  HoverCardTrigger,\n} from \"@/components/ui/hover-card\";\n\n/**\n * A hover card with avatar and profile information.\n */\nconst meta = {\n  title: \"ui/HoverCard\",\n  component: HoverCard,\n  tags: [\"autodocs\"],\n  parameters: {\n    layout: \"centered\",\n  },\n  argTypes: {\n    openDelay: {\n      control: \"number\",\n      description:\n        \"The duration from when the mouse enters the trigger until the hover card opens (ms)\",\n    },\n    closeDelay: {\n      control: \"number\",\n      description:\n        \"The duration from when the mouse leaves the trigger until the hover card closes (ms)\",\n    },\n  },\n  args: {\n    openDelay: 700,\n    closeDelay: 300,\n  },\n  render: (args) => (\n    <HoverCard openDelay={args.openDelay} closeDelay={args.closeDelay}>\n      <HoverCardTrigger asChild>\n        <Button variant=\"link\">@nextjs</Button>\n      </HoverCardTrigger>\n      <HoverCardContent className=\"w-80\">\n        <div className=\"flex justify-between gap-4\">\n          <Avatar>\n            <AvatarImage src=\"https://github.com/vercel.png\" />\n            <AvatarFallback>VC</AvatarFallback>\n          </Avatar>\n          <div className=\"space-y-1\">\n            <h4 className=\"text-sm font-semibold\">@nextjs</h4>\n            <p className=\"text-sm\">\n              The React Framework – created and maintained by @vercel.\n            </p>\n            <div className=\"text-muted-foreground text-xs\">\n              Joined December 2021\n            </div>\n          </div>\n        </div>\n      </HoverCardContent>\n    </HoverCard>\n  ),\n} satisfies Meta<typeof HoverCard>;\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\n\n/**\n * The default hover card showing user profile information.\n */\nexport const Default: Story = {\n  render: (args) => (\n    <HoverCard openDelay={args.openDelay} closeDelay={args.closeDelay}>\n      <HoverCardTrigger asChild>\n        <Button variant=\"link\">@nextjs</Button>\n      </HoverCardTrigger>\n      <HoverCardContent className=\"w-80\">\n        <div className=\"flex justify-between gap-4\">\n          <Avatar>\n            <AvatarImage src=\"https://github.com/vercel.png\" />\n            <AvatarFallback>VC</AvatarFallback>\n          </Avatar>\n          <div className=\"space-y-1\">\n            <h4 className=\"text-sm font-semibold\">@nextjs</h4>\n            <p className=\"text-sm\">\n              The React Framework – created and maintained by @vercel.\n            </p>\n            <div className=\"text-muted-foreground text-xs\">\n              Joined December 2021\n            </div>\n          </div>\n        </div>\n      </HoverCardContent>\n    </HoverCard>\n  ),\n};\n\nexport const ShouldShowHoverCard: Story = {\n  name: \"when hovering over trigger, should show hover card content\",\n  tags: [\"!dev\", \"!autodocs\"],\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    // 🎯 목적: Hover Card가 트리거에 호버 시 열리고, 콘텐츠가 표시되는지 확인\n    const trigger = canvas.getByRole(\"button\", { name: /@nextjs/i });\n    await expect(trigger).toBeInTheDocument();\n\n    // 트리거에 호버하여 Hover Card 열기\n    await userEvent.hover(trigger);\n\n    // Hover Card 콘텐츠가 표시되는지 확인\n    await waitFor(async () => {\n      const heading = await canvas.findByRole(\"heading\", {\n        name: /@nextjs/i,\n      });\n      await expect(heading).toBeInTheDocument();\n    });\n\n    // 추가 콘텐츠 확인\n    const description = canvas.getByText(\n      /the react framework – created and maintained by @vercel/i,\n    );\n    await expect(description).toBeInTheDocument();\n\n    // 호버 해제\n    await userEvent.unhover(trigger);\n  },\n};\n\nexport const ShouldHideOnUnhover: Story = {\n  name: \"when unhover from trigger, should hide hover card content\",\n  tags: [\"!dev\", \"!autodocs\"],\n  render: () => (\n    <HoverCard>\n      <HoverCardTrigger asChild>\n        <Button variant=\"link\" data-testid=\"hover-trigger\">\n          @nextjs\n        </Button>\n      </HoverCardTrigger>\n      <HoverCardContent className=\"w-80\" data-testid=\"hover-content\">\n        <div className=\"flex justify-between gap-4\">\n          <Avatar>\n            <AvatarImage src=\"https://github.com/vercel.png\" />\n            <AvatarFallback>VC</AvatarFallback>\n          </Avatar>\n          <div className=\"space-y-1\">\n            <h4 className=\"text-sm font-semibold\" data-testid=\"profile-name\">\n              @nextjs\n            </h4>\n            <p className=\"text-sm\" data-testid=\"profile-description\">\n              The React Framework – created and maintained by @vercel.\n            </p>\n            <div\n              className=\"text-muted-foreground text-xs\"\n              data-testid=\"joined-date\"\n            >\n              Joined December 2021\n            </div>\n          </div>\n        </div>\n      </HoverCardContent>\n    </HoverCard>\n  ),\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    // 🎯 목적: Hover Card가 호버 해제 시 사라지고, 모든 콘텐츠가 올바르게 표시되는지 확인\n\n    // 트리거 확인\n    const trigger = canvas.getByTestId(\"hover-trigger\");\n    await expect(trigger).toBeInTheDocument();\n\n    // Hover Card 콘텐츠가 초기에는 보이지 않음\n    const content = canvas.queryByTestId(\"hover-content\");\n    expect(content).not.toBeInTheDocument();\n\n    // 트리거에 호버하여 Hover Card 열기\n    await userEvent.hover(trigger);\n\n    // Hover Card 콘텐츠가 표시될 때까지 대기\n    await waitFor(\n      async () => {\n        const profileName = await canvas.findByTestId(\"profile-name\");\n        await expect(profileName).toBeInTheDocument();\n      },\n      { timeout: 1000 },\n    );\n\n    // 모든 콘텐츠 확인\n    const profileName = canvas.getByTestId(\"profile-name\");\n    await expect(profileName).toHaveTextContent(\"@nextjs\");\n\n    const profileDescription = canvas.getByTestId(\"profile-description\");\n    await expect(profileDescription).toHaveTextContent(\n      \"The React Framework – created and maintained by @vercel.\",\n    );\n\n    const joinedDate = canvas.getByTestId(\"joined-date\");\n    await expect(joinedDate).toHaveTextContent(\"Joined December 2021\");\n\n    // 호버 해제\n    await userEvent.unhover(trigger);\n\n    // Hover Card 콘텐츠가 사라지는지 확인\n    await waitFor(\n      () => {\n        const hiddenContent = canvas.queryByTestId(\"hover-content\");\n        expect(hiddenContent).not.toBeInTheDocument();\n      },\n      { timeout: 1000 },\n    );\n  },\n};\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "atoms",
    "storybook",
    "hover",
    "popover"
  ]
}