{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "textarea-story",
  "type": "registry:component",
  "title": "Textarea Story",
  "author": "Lloyd Richards <lloyd.d.richards@gmail.com>",
  "description": "Interactive Storybook stories demonstrating textarea component usage and variants",
  "registryDependencies": [
    "textarea",
    "button",
    "label"
  ],
  "files": [
    {
      "path": "src/registry/atoms/textarea-story/textarea.stories.tsx",
      "content": "import React from \"react\";\nimport type { Meta, StoryObj } from \"@storybook/react-vite\";\nimport { expect, userEvent, within } from \"storybook/test\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\n\n// Default example from official docs\nexport function TextareaDemo() {\n  return <Textarea placeholder=\"Type your message here.\" />;\n}\n\n// With Label example from official docs\nexport function TextareaWithLabel() {\n  return (\n    <div className=\"grid w-full gap-3\">\n      <Label htmlFor=\"message\">Your message</Label>\n      <Textarea placeholder=\"Type your message here.\" id=\"message\" />\n    </div>\n  );\n}\n\n// With Text example from official docs\nexport function TextareaWithText() {\n  return (\n    <div className=\"grid w-full gap-3\">\n      <Label htmlFor=\"message-2\">Your Message</Label>\n      <Textarea placeholder=\"Type your message here.\" id=\"message-2\" />\n      <p className=\"text-muted-foreground text-sm\">\n        Your message will be copied to the support team.\n      </p>\n    </div>\n  );\n}\n\n// With Button example from official docs\nexport function TextareaWithButton() {\n  return (\n    <div className=\"grid w-full gap-2\">\n      <Textarea placeholder=\"Type your message here.\" />\n      <Button>Send message</Button>\n    </div>\n  );\n}\n\n// Disabled example from official docs\nexport function TextareaDisabled() {\n  return <Textarea placeholder=\"Type your message here.\" disabled />;\n}\n\n/**\n * Displays a form textarea or a component that looks like a textarea.\n */\nconst meta = {\n  title: \"ui/Textarea\",\n  component: Textarea,\n  tags: [\"autodocs\"],\n  parameters: {\n    layout: \"centered\",\n  },\n  args: {\n    placeholder: \"Type your message here.\",\n    disabled: false,\n  },\n  excludeStories: /.*Demo$|.*WithLabel$|.*WithText$|.*WithButton$|.*Disabled$/,\n} satisfies Meta<typeof Textarea>;\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\n\n/**\n * The default form of the textarea.\n */\nexport const Default: Story = {};\n\n/**\n * Textarea with a label.\n */\nexport const WithLabel: Story = {\n  render: () => <TextareaWithLabel />,\n};\n\n/**\n * Textarea with label and helper text.\n */\nexport const WithText: Story = {\n  render: () => <TextareaWithText />,\n};\n\n/**\n * Textarea with a button.\n */\nexport const WithButton: Story = {\n  render: () => <TextareaWithButton />,\n};\n\n/**\n * Disabled textarea.\n */\nexport const Disabled: Story = {\n  args: {\n    disabled: true,\n  },\n};\n\nexport const ShouldEnterMultilineText: Story = {\n  name: \"when user enters multiline text, should see it in the textarea\",\n  tags: [\"!dev\", \"!autodocs\"],\n  render: () => (\n    <div className=\"grid w-full gap-3\">\n      <Label htmlFor=\"message-test\">Your message</Label>\n      <Textarea placeholder=\"Type your message here.\" id=\"message-test\" />\n    </div>\n  ),\n  play: async ({ canvasElement, step }) => {\n    const canvas = within(canvasElement);\n    const textarea = canvas.getByPlaceholderText(/type your message here/i);\n    const multilineMessage = \"This is line 1\\nThis is line 2\\nThis is line 3\";\n\n    await step(\"focus and type multiline text into textarea\", async () => {\n      await userEvent.click(textarea);\n      await userEvent.type(textarea, multilineMessage);\n    });\n\n    expect(textarea).toHaveValue(multilineMessage);\n  },\n};\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "atoms",
    "storybook",
    "textarea",
    "form"
  ]
}