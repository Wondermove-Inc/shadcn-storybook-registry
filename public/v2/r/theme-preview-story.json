{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "theme-preview-story",
  "type": "registry:component",
  "title": "Theme Preview Story",
  "author": "Lloyd Richards <lloyd.d.richards@gmail.com>",
  "description": "OKLCH theme preview and design token visualization with light/dark mode switching",
  "dependencies": [
    "next-themes",
    "lucide-react"
  ],
  "registryDependencies": [
    "card",
    "button",
    "badge",
    "dropdown-menu"
  ],
  "files": [
    {
      "path": "src/registry/tokens/theme-preview-story/theme-preview.stories.tsx",
      "content": "\"use client\";\n\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport type { Meta, StoryObj } from \"@storybook/react-vite\";\nimport { Moon, Sun } from \"lucide-react\";\nimport React, { useEffect, useState } from \"react\";\n\n/**\n * 🎯 목적: OKLCH 테마 미리보기 및 디자인 토큰 시각화\n *\n * 이 스토리는 프로젝트에 적용된 OKLCH 색상 체계를 시각적으로 보여줍니다.\n * - OKLCH(Oklab Lightness Chroma Hue): 지각적으로 균일한 색 공간\n * - 더 넓은 색역(P3) 지원으로 더 생생한 색상 표현 가능\n * - 브라우저 호환성: 93% (PostCSS fallback으로 100%)\n * - Light/Dark 모드 전환 지원\n */\nconst meta = {\n  title: \"design/Theme Preview\",\n  tags: [\"autodocs\"],\n  parameters: {\n    layout: \"padded\",\n    docs: {\n      description: {\n        component:\n          \"OKLCH 색상 체계를 사용한 전체 테마 미리보기. 모든 디자인 토큰과 실제 컴포넌트 적용 예시를 확인할 수 있습니다.\",\n      },\n    },\n  },\n} satisfies Meta;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\n/**\n * 🎨 전체 테마 미리보기\n *\n * 프로젝트의 모든 색상 토큰을 시각적으로 표시합니다.\n * 우측 상단의 테마 전환 버튼으로 Light/Dark 모드를 전환할 수 있습니다.\n */\nexport const AllTokens: Story = {\n  render: () => {\n    const [theme, setTheme] = useState<\"light\" | \"dark\">(\"light\");\n\n    // 🎯 목적: Storybook iframe의 실제 <html> 요소에 테마 클래스 적용\n    // <html>/<body> 태그를 직접 렌더링하지 않고 document.documentElement 조작\n    useEffect(() => {\n      document.documentElement.className =\n        theme === \"dark\" ? \"theme-default-dark\" : \"theme-default-light\";\n    }, [theme]);\n\n    return (\n      <div className=\"relative space-y-8\">\n        {/* Theme Switcher Button */}\n        <div className=\"absolute top-4 right-4 z-10\">\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"ghost\" size=\"icon\">\n                <Sun className=\"h-5 w-5 scale-100 rotate-0 transition-all dark:scale-0 dark:-rotate-90\" />\n                <Moon className=\"absolute h-5 w-5 scale-0 rotate-90 transition-all dark:scale-100 dark:rotate-0\" />\n                <span className=\"sr-only\">테마 전환</span>\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\">\n              <DropdownMenuItem\n                onClick={() => setTheme(\"light\")}\n                className={theme === \"light\" ? \"bg-accent\" : \"\"}\n              >\n                <Sun className=\"mr-2 h-4 w-4\" />\n                <span>라이트</span>\n              </DropdownMenuItem>\n              <DropdownMenuItem\n                onClick={() => setTheme(\"dark\")}\n                className={theme === \"dark\" ? \"bg-accent\" : \"\"}\n              >\n                <Moon className=\"mr-2 h-4 w-4\" />\n                <span>다크</span>\n              </DropdownMenuItem>\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </div>\n        {/* 색상 팔레트 섹션 */}\n        <section>\n          <h2 className=\"mb-4 text-2xl font-bold\">색상 팔레트</h2>\n          <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n            {/* Background Colors */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">Background</CardTitle>\n                <CardDescription>배경 색상</CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-2\">\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"bg-background h-10 w-10 rounded-md border\" />\n                  <code className=\"text-sm\">--background</code>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"bg-foreground h-10 w-10 rounded-md border\" />\n                  <code className=\"text-sm\">--foreground</code>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Card Colors */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">Card</CardTitle>\n                <CardDescription>카드 색상</CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-2\">\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"bg-card h-10 w-10 rounded-md border\" />\n                  <code className=\"text-sm\">--card</code>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"bg-card-foreground h-10 w-10 rounded-md border\" />\n                  <code className=\"text-sm\">--card-foreground</code>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Primary Colors */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">Primary</CardTitle>\n                <CardDescription>주요 색상</CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-2\">\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"bg-primary h-10 w-10 rounded-md border\" />\n                  <code className=\"text-sm\">--primary</code>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"bg-primary-foreground h-10 w-10 rounded-md border\" />\n                  <code className=\"text-sm\">--primary-foreground</code>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Secondary Colors */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">Secondary</CardTitle>\n                <CardDescription>보조 색상</CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-2\">\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"bg-secondary h-10 w-10 rounded-md border\" />\n                  <code className=\"text-sm\">--secondary</code>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"bg-secondary-foreground h-10 w-10 rounded-md border\" />\n                  <code className=\"text-sm\">--secondary-foreground</code>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Muted Colors */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">Muted</CardTitle>\n                <CardDescription>약한 색상</CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-2\">\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"bg-muted h-10 w-10 rounded-md border\" />\n                  <code className=\"text-sm\">--muted</code>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"bg-muted-foreground h-10 w-10 rounded-md border\" />\n                  <code className=\"text-sm\">--muted-foreground</code>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Accent Colors */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">Accent</CardTitle>\n                <CardDescription>강조 색상</CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-2\">\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"bg-accent h-10 w-10 rounded-md border\" />\n                  <code className=\"text-sm\">--accent</code>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"bg-accent-foreground h-10 w-10 rounded-md border\" />\n                  <code className=\"text-sm\">--accent-foreground</code>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Destructive Colors */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">Destructive</CardTitle>\n                <CardDescription>위험/삭제 색상</CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-2\">\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"bg-destructive h-10 w-10 rounded-md border\" />\n                  <code className=\"text-sm\">--destructive</code>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"bg-destructive-foreground h-10 w-10 rounded-md border\" />\n                  <code className=\"text-sm\">--destructive-foreground</code>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Border & Input */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">Border & Input</CardTitle>\n                <CardDescription>테두리 & 입력 색상</CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-2\">\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"border-border bg-background h-10 w-10 rounded-md border-2\" />\n                  <code className=\"text-sm\">--border</code>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"border-input bg-background h-10 w-10 rounded-md border-2\" />\n                  <code className=\"text-sm\">--input</code>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Ring */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">Ring</CardTitle>\n                <CardDescription>포커스 링 색상</CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-2\">\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"bg-background ring-ring h-10 w-10 rounded-md border ring-2 ring-offset-2\" />\n                  <code className=\"text-sm\">--ring</code>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </section>\n\n        {/* 차트 색상 섹션 */}\n        <section>\n          <h2 className=\"mb-4 text-2xl font-bold\">차트 색상</h2>\n          <div className=\"grid gap-4 md:grid-cols-5\">\n            {[1, 2, 3, 4, 5].map((i) => (\n              <Card key={i}>\n                <CardHeader>\n                  <CardTitle className=\"text-lg\">Chart {i}</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div\n                    className={`h-20 w-full rounded-md border`}\n                    style={{\n                      backgroundColor: `var(--chart-${i})`,\n                    }}\n                  />\n                  <code className=\"text-sm\">--chart-{i}</code>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </section>\n\n        {/* 실제 컴포넌트 적용 예시 */}\n        <section>\n          <h2 className=\"mb-4 text-2xl font-bold\">컴포넌트 적용 예시</h2>\n          <div className=\"grid gap-4 md:grid-cols-2\">\n            <Card>\n              <CardHeader>\n                <CardTitle>버튼 변형</CardTitle>\n                <CardDescription>\n                  다양한 버튼 스타일에 테마가 적용된 모습\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"flex flex-wrap gap-2\">\n                <Button variant=\"default\">Default</Button>\n                <Button variant=\"secondary\">Secondary</Button>\n                <Button variant=\"outline\">Outline</Button>\n                <Button variant=\"ghost\">Ghost</Button>\n                <Button variant=\"destructive\">Destructive</Button>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>배지 변형</CardTitle>\n                <CardDescription>\n                  다양한 배지 스타일에 테마가 적용된 모습\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"flex flex-wrap gap-2\">\n                <Badge variant=\"default\">Default</Badge>\n                <Badge variant=\"secondary\">Secondary</Badge>\n                <Badge variant=\"outline\">Outline</Badge>\n                <Badge variant=\"destructive\">Destructive</Badge>\n              </CardContent>\n            </Card>\n\n            <Card className=\"md:col-span-2\">\n              <CardHeader>\n                <CardTitle>카드 예시</CardTitle>\n                <CardDescription>\n                  카드 컴포넌트에서 background, card, border 토큰 사용\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-muted-foreground text-sm\">\n                  이 카드는 <code>--card</code>, <code>--card-foreground</code>,{\" \"}\n                  <code>--border</code> 색상을 사용합니다.\n                </p>\n              </CardContent>\n              <CardFooter>\n                <Button>액션</Button>\n              </CardFooter>\n            </Card>\n          </div>\n        </section>\n\n        {/* OKLCH 정보 */}\n        <section>\n          <Card>\n            <CardHeader>\n              <CardTitle>OKLCH 색상 체계에 대하여</CardTitle>\n              <CardDescription>\n                이 프로젝트는 OKLCH 색 공간을 사용합니다\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div>\n                <h3 className=\"mb-2 font-semibold\">장점</h3>\n                <ul className=\"text-muted-foreground list-inside list-disc space-y-1 text-sm\">\n                  <li>지각적으로 균일한 색상 표현 (HSL보다 자연스러움)</li>\n                  <li>더 넓은 색역(P3) 지원으로 더 생생한 색상</li>\n                  <li>Tailwind CSS v4의 기본 색상 형식</li>\n                  <li>일관된 밝기와 채도 조절</li>\n                </ul>\n              </div>\n              <div>\n                <h3 className=\"mb-2 font-semibold\">브라우저 지원</h3>\n                <p className=\"text-muted-foreground text-sm\">\n                  Chrome 111+, Firefox 113+, Safari 15.4+ (93%)\n                  <br />\n                  PostCSS fallback 플러그인으로 구형 브라우저 100% 지원\n                </p>\n              </div>\n              <div>\n                <h3 className=\"mb-2 font-semibold\">형식</h3>\n                <code className=\"bg-muted block rounded-md p-2 text-sm\">\n                  oklch(lightness chroma hue)\n                  <br />\n                  예: oklch(0.623 0.214 259.815)\n                </code>\n              </div>\n            </CardContent>\n          </Card>\n        </section>\n      </div>\n    );\n  },\n};\n\n/**\n * 🎨 컴포넌트별 색상 적용 예시\n *\n * 각 shadcn/ui 컴포넌트가 테마 색상을 어떻게 사용하는지 보여줍니다.\n * 우측 상단의 테마 전환 버튼으로 Light/Dark 모드를 전환할 수 있습니다.\n */\nexport const ComponentShowcase: Story = {\n  render: () => {\n    const [theme, setTheme] = useState<\"light\" | \"dark\">(\"light\");\n\n    // 🎯 목적: Storybook iframe의 실제 <html> 요소에 테마 클래스 적용\n    // <html>/<body> 태그를 직접 렌더링하지 않고 document.documentElement 조작\n    useEffect(() => {\n      document.documentElement.className =\n        theme === \"dark\" ? \"theme-default-dark\" : \"theme-default-light\";\n    }, [theme]);\n\n    return (\n      <div className=\"relative space-y-6\">\n        {/* Theme Switcher Button */}\n        <div className=\"absolute top-4 right-4 z-10\">\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"ghost\" size=\"icon\">\n                <Sun className=\"h-5 w-5 scale-100 rotate-0 transition-all dark:scale-0 dark:-rotate-90\" />\n                <Moon className=\"absolute h-5 w-5 scale-0 rotate-90 transition-all dark:scale-100 dark:rotate-0\" />\n                <span className=\"sr-only\">테마 전환</span>\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\">\n              <DropdownMenuItem\n                onClick={() => setTheme(\"light\")}\n                className={theme === \"light\" ? \"bg-accent\" : \"\"}\n              >\n                <Sun className=\"mr-2 h-4 w-4\" />\n                <span>라이트</span>\n              </DropdownMenuItem>\n              <DropdownMenuItem\n                onClick={() => setTheme(\"dark\")}\n                className={theme === \"dark\" ? \"bg-accent\" : \"\"}\n              >\n                <Moon className=\"mr-2 h-4 w-4\" />\n                <span>다크</span>\n              </DropdownMenuItem>\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <h2 className=\"text-2xl font-bold\">컴포넌트 쇼케이스</h2>\n        </div>\n\n        {/* Primary Actions */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Primary Actions</CardTitle>\n            <CardDescription>\n              --primary와 --primary-foreground 사용\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"flex gap-2\">\n            <Button>Save</Button>\n            <Button>Submit</Button>\n            <Badge>New</Badge>\n          </CardContent>\n        </Card>\n\n        {/* Secondary Actions */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Secondary Actions</CardTitle>\n            <CardDescription>\n              --secondary와 --secondary-foreground 사용\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"flex gap-2\">\n            <Button variant=\"secondary\">Cancel</Button>\n            <Button variant=\"secondary\">Back</Button>\n            <Badge variant=\"secondary\">Draft</Badge>\n          </CardContent>\n        </Card>\n\n        {/* Destructive Actions */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Destructive Actions</CardTitle>\n            <CardDescription>\n              --destructive와 --destructive-foreground 사용\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"flex gap-2\">\n            <Button variant=\"destructive\">Delete</Button>\n            <Button variant=\"destructive\">Remove</Button>\n            <Badge variant=\"destructive\">Error</Badge>\n          </CardContent>\n        </Card>\n\n        {/* Muted Elements */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Muted Elements</CardTitle>\n            <CardDescription>--muted와 --muted-foreground 사용</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-muted-foreground text-sm\">\n              이것은 muted foreground 색상을 사용한 보조 텍스트입니다.\n            </p>\n            <div className=\"bg-muted mt-4 rounded-md p-4\">\n              <p className=\"text-sm\">muted background를 사용한 영역</p>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  },\n};\n",
      "type": "registry:component"
    },
    {
      "path": "src/components/theme-switcher.tsx",
      "content": "import { Button } from \"@/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Moon, Sun } from \"lucide-react\";\nimport { useTheme } from \"next-themes\";\nimport { useEffect, useState } from \"react\";\n\n// Storybook globals hook types\ntype GlobalsUpdate = Record<string, string>;\ntype UseGlobalsReturn = [GlobalsUpdate, (globals: GlobalsUpdate) => void];\ntype UseGlobalsHook = () => UseGlobalsReturn;\n\n// Storybook globals hook (only available in Storybook environment)\nlet useGlobals: UseGlobalsHook | undefined;\ntry {\n  useGlobals = require(\"@storybook/preview-api\").useGlobals as UseGlobalsHook;\n} catch {\n  // Not in Storybook environment\n}\n\n/**\n * 🎯 목적: 라이트/다크 테마 전환을 위한 UI 컴포넌트\n * - Storybook 환경: globals.theme 직접 제어 (theme-default-light ↔ theme-default-dark)\n * - Next.js 환경: next-themes를 사용하여 테마 상태 관리\n * - 드롭다운 메뉴로 Light, Dark, System 선택 제공\n * - 현재 테마에 따라 아이콘 동적 표시\n */\nexport function ThemeSwitcher() {\n  const { theme, setTheme } = useTheme();\n  const [mounted, setMounted] = useState(false);\n\n  // Storybook globals (if available)\n  const storybookGlobals = useGlobals?.();\n  const isStorybook = !!storybookGlobals;\n\n  // 🎯 목적: 하이드레이션 불일치 방지를 위한 마운트 상태 관리\n  // 클라이언트 사이드에서만 테마 UI 렌더링\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  // 서버 사이드 렌더링 시 placeholder 반환\n  if (!mounted) {\n    return (\n      <Button variant=\"ghost\" size=\"icon\" disabled>\n        <Sun className=\"h-5 w-5\" />\n        <span className=\"sr-only\">테마 전환</span>\n      </Button>\n    );\n  }\n\n  // Storybook 환경에서의 현재 테마 파악\n  const getCurrentMode = () => {\n    if (isStorybook && storybookGlobals) {\n      const [globals] = storybookGlobals;\n      const currentTheme = globals.theme || \"blue-light\";\n      return currentTheme.includes(\"-dark\") ? \"dark\" : \"light\";\n    }\n    return theme || \"light\";\n  };\n\n  // Storybook 환경에서의 테마 전환\n  const handleThemeChange = (mode: \"light\" | \"dark\" | \"system\") => {\n    if (isStorybook && storybookGlobals) {\n      const [globals, updateGlobals] = storybookGlobals;\n      const currentTheme = globals.theme || \"blue-light\";\n\n      // Extract color prefix (e.g., \"blue\" from \"blue-light\")\n      const colorPrefix = currentTheme.split(\"-\")[0];\n\n      if (mode === \"light\") {\n        updateGlobals({ theme: `${colorPrefix}-light` });\n      } else if (mode === \"dark\") {\n        updateGlobals({ theme: `${colorPrefix}-dark` });\n      }\n      // system은 Storybook에서 지원하지 않음\n    } else {\n      // Next.js 환경에서는 next-themes 사용\n      setTheme(mode);\n    }\n  };\n\n  const currentMode = getCurrentMode();\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"ghost\" size=\"icon\">\n          <Sun className=\"h-5 w-5 scale-100 rotate-0 transition-all dark:scale-0 dark:-rotate-90\" />\n          <Moon className=\"absolute h-5 w-5 scale-0 rotate-90 transition-all dark:scale-100 dark:rotate-0\" />\n          <span className=\"sr-only\">테마 전환</span>\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\">\n        <DropdownMenuItem\n          onClick={() => handleThemeChange(\"light\")}\n          className={currentMode === \"light\" ? \"bg-accent\" : \"\"}\n        >\n          <Sun className=\"mr-2 h-4 w-4\" />\n          <span>라이트</span>\n        </DropdownMenuItem>\n        <DropdownMenuItem\n          onClick={() => handleThemeChange(\"dark\")}\n          className={currentMode === \"dark\" ? \"bg-accent\" : \"\"}\n        >\n          <Moon className=\"mr-2 h-4 w-4\" />\n          <span>다크</span>\n        </DropdownMenuItem>\n        {!isStorybook && (\n          <DropdownMenuItem\n            onClick={() => handleThemeChange(\"system\")}\n            className={currentMode === \"system\" ? \"bg-accent\" : \"\"}\n          >\n            <Sun className=\"mr-2 h-4 w-4\" />\n            <span>시스템</span>\n          </DropdownMenuItem>\n        )}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "foundation",
    "tokens",
    "storybook",
    "theme"
  ]
}