{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "aspect-ratio-story",
  "type": "registry:component",
  "title": "Aspect Ratio Story",
  "author": "Lloyd Richards <lloyd.d.richards@gmail.com>",
  "description": "Interactive Storybook stories demonstrating aspect ratio component usage and variants",
  "registryDependencies": [
    "aspect-ratio"
  ],
  "files": [
    {
      "path": "src/registry/atoms/aspect-ratio-story/aspect-ratio.stories.tsx",
      "content": "import type { Meta, StoryObj } from \"@storybook/nextjs-vite\";\nimport Image from \"next/image\";\n\nimport { AspectRatio } from \"@/components/ui/aspect-ratio\";\n\nexport function AspectRatioDemo() {\n  return (\n    <div className=\"w-[450px]\">\n      <AspectRatio ratio={16 / 9} className=\"bg-muted rounded-lg\">\n        <Image\n          src=\"https://images.unsplash.com/photo-1588345921523-c2dcdb7f1dcd?w=800&dpr=2&q=80\"\n          alt=\"Photo by Drew Beamer\"\n          fill\n          className=\"h-full w-full rounded-lg object-cover dark:brightness-[0.2] dark:grayscale\"\n        />\n      </AspectRatio>\n    </div>\n  );\n}\n\n/**\n * Displays content within a desired ratio.\n */\nconst meta: Meta<typeof AspectRatio> = {\n  title: \"ui/AspectRatio\",\n  component: AspectRatio,\n  tags: [\"autodocs\"],\n  parameters: {\n    layout: \"centered\",\n  },\n  args: {\n    ratio: 16 / 9,\n    className: \"bg-muted rounded-lg w-[450px]\",\n  },\n  excludeStories: /.*Demo$/,\n} satisfies Meta<typeof AspectRatio>;\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\n\n/**\n * The default 16:9 aspect ratio with Image.\n */\nexport const Default: Story = {\n  render: (args) => (\n    <div className=\"w-[450px]\">\n      <AspectRatio {...args}>\n        <Image\n          src=\"https://images.unsplash.com/photo-1588345921523-c2dcdb7f1dcd?w=800&dpr=2&q=80\"\n          alt=\"Photo by Drew Beamer\"\n          fill\n          className=\"h-full w-full rounded-lg object-cover dark:brightness-[0.2] dark:grayscale\"\n        />\n      </AspectRatio>\n    </div>\n  ),\n};\n\n/**\n * 16:9 aspect ratio (Widescreen).\n */\nexport const Widescreen: Story = {\n  args: {\n    ratio: 16 / 9,\n  },\n  render: (args) => (\n    <div className=\"w-[450px]\">\n      <AspectRatio {...args}>\n        <div className=\"flex h-full items-center justify-center bg-gradient-to-br from-blue-500 to-purple-600 text-lg font-semibold text-white\">\n          16:9\n        </div>\n      </AspectRatio>\n    </div>\n  ),\n};\n\n/**\n * 4:3 aspect ratio (Standard).\n */\nexport const Standard: Story = {\n  args: {\n    ratio: 4 / 3,\n  },\n  render: (args) => (\n    <div className=\"w-[450px]\">\n      <AspectRatio {...args}>\n        <div className=\"flex h-full items-center justify-center bg-gradient-to-br from-green-500 to-teal-600 text-lg font-semibold text-white\">\n          4:3\n        </div>\n      </AspectRatio>\n    </div>\n  ),\n};\n\n/**\n * 1:1 aspect ratio (Square).\n */\nexport const Square: Story = {\n  args: {\n    ratio: 1 / 1,\n  },\n  render: (args) => (\n    <div className=\"w-[300px]\">\n      <AspectRatio {...args}>\n        <div className=\"flex h-full items-center justify-center bg-gradient-to-br from-pink-500 to-rose-600 text-lg font-semibold text-white\">\n          1:1\n        </div>\n      </AspectRatio>\n    </div>\n  ),\n};\n\n/**\n * 21:9 aspect ratio (Ultrawide).\n */\nexport const Ultrawide: Story = {\n  args: {\n    ratio: 21 / 9,\n  },\n  render: (args) => (\n    <div className=\"w-[600px]\">\n      <AspectRatio {...args}>\n        <div className=\"flex h-full items-center justify-center bg-gradient-to-br from-orange-500 to-red-600 text-lg font-semibold text-white\">\n          21:9\n        </div>\n      </AspectRatio>\n    </div>\n  ),\n};\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "atoms",
    "storybook",
    "layout",
    "responsive"
  ]
}