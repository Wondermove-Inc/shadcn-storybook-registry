{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "toggle-story",
  "type": "registry:component",
  "title": "Toggle Story",
  "author": "Lloyd Richards <lloyd.d.richards@gmail.com>",
  "description": "Interactive Storybook stories demonstrating toggle component usage and variants",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "toggle"
  ],
  "files": [
    {
      "path": "src/registry/atoms/toggle-story/toggle.stories.tsx",
      "content": "import type { Meta, StoryObj } from \"@storybook/nextjs-vite\";\nimport { Bold, Italic, Underline } from \"lucide-react\";\n\nimport { Toggle } from \"@/components/ui/toggle\";\n\n// Default example from official docs\nexport function ToggleDemo() {\n  return (\n    <Toggle aria-label=\"Toggle italic\">\n      <Bold className=\"h-4 w-4\" />\n    </Toggle>\n  )\n}\n\n// Outline example from official docs\nexport function ToggleOutline() {\n  return (\n    <Toggle variant=\"outline\" aria-label=\"Toggle italic\">\n      <Italic className=\"h-4 w-4\" />\n    </Toggle>\n  )\n}\n\n// With Text example from official docs\nexport function ToggleWithText() {\n  return (\n    <Toggle aria-label=\"Toggle italic\">\n      <Italic className=\"h-4 w-4\" />\n      Italic\n    </Toggle>\n  )\n}\n\n// Small size example from official docs\nexport function ToggleSm() {\n  return (\n    <Toggle size=\"sm\" aria-label=\"Toggle italic\">\n      <Italic className=\"h-4 w-4\" />\n    </Toggle>\n  )\n}\n\n// Large size example from official docs\nexport function ToggleLg() {\n  return (\n    <Toggle size=\"lg\" aria-label=\"Toggle italic\">\n      <Italic className=\"h-4 w-4\" />\n    </Toggle>\n  )\n}\n\n// Disabled example from official docs\nexport function ToggleDisabled() {\n  return (\n    <Toggle aria-label=\"Toggle italic\" disabled>\n      <Underline className=\"h-4 w-4\" />\n    </Toggle>\n  )\n}\n\n/**\n * A two-state button that can be either on or off.\n */\nconst meta: Meta<typeof Toggle> = {\n  title: \"ui/Toggle\",\n  component: Toggle,\n  tags: [\"autodocs\"],\n  parameters: {\n    layout: \"centered\",\n  },\n  excludeStories: /.*Demo$|.*Outline$|.*WithText$|.*Sm$|.*Lg$|.*Disabled$/,\n  render: () => <ToggleDemo />\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof Toggle>;\n\n/**\n * The default form of the toggle.\n */\nexport const Default: Story = {};\n\n/**\n * Toggle with outline variant.\n */\nexport const Outline: Story = {\n  render: () => <ToggleOutline />\n};\n\n/**\n * Toggle with text label.\n */\nexport const WithText: Story = {\n  render: () => <ToggleWithText />\n};\n\n/**\n * Small sized toggle.\n */\nexport const Small: Story = {\n  render: () => <ToggleSm />\n};\n\n/**\n * Large sized toggle.\n */\nexport const Large: Story = {\n  render: () => <ToggleLg />\n};\n\n/**\n * Disabled toggle.\n */\nexport const Disabled: Story = {\n  render: () => <ToggleDisabled />\n};",
      "type": "registry:component"
    }
  ],
  "categories": [
    "atoms",
    "storybook",
    "toggle",
    "form"
  ]
}