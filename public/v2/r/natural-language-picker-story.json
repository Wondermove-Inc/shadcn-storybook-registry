{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "natural-language-picker-story",
  "type": "registry:component",
  "title": "Natural Language Picker Story",
  "author": "Lloyd Richards <lloyd.d.richards@gmail.com>",
  "description": "Interactive Storybook stories demonstrating natural language date input parsing (e.g., 'tomorrow', 'next week')",
  "dependencies": [
    "chrono-node",
    "date-fns",
    "lucide-react"
  ],
  "registryDependencies": [
    "calendar",
    "popover",
    "input",
    "button"
  ],
  "files": [
    {
      "path": "src/registry/atoms/natural-language-picker-story/natural-language-picker.stories.tsx",
      "content": "\"use client\"\n\nimport type { Meta, StoryObj } from \"@storybook/nextjs-vite\";\nimport * as React from \"react\";\nimport { parseDate } from \"chrono-node\";\nimport { CalendarIcon } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\n\nfunction formatDate(date: Date | undefined) {\n  if (!date) {\n    return \"\";\n  }\n\n  return date.toLocaleDateString(\"en-US\", {\n    day: \"2-digit\",\n    month: \"long\",\n    year: \"numeric\",\n  });\n}\n\nconst meta: Meta = {\n  title: \"ui/Calendar/Blocks/Natural Language Picker\",\n  parameters: {\n    layout: \"centered\",\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\n\nexport const Default: Story = {\n  render: () => {\n    const [open, setOpen] = React.useState(false);\n    const [value, setValue] = React.useState(\"In 2 days\");\n    const [date, setDate] = React.useState<Date | undefined>(\n      parseDate(value) || undefined\n    );\n    const [month, setMonth] = React.useState<Date | undefined>(date);\n\n    return (\n      <div className=\"flex flex-col gap-3\">\n        <Label htmlFor=\"date\" className=\"px-1\">\n          Schedule Date\n        </Label>\n        <div className=\"relative flex gap-2\">\n          <Input\n            id=\"date\"\n            value={value}\n            placeholder=\"Tomorrow or next week\"\n            className=\"bg-background pr-10\"\n            onChange={(e) => {\n              setValue(e.target.value);\n              const date = parseDate(e.target.value);\n              if (date) {\n                setDate(date);\n                setMonth(date);\n              }\n            }}\n            onKeyDown={(e) => {\n              if (e.key === \"ArrowDown\") {\n                e.preventDefault();\n                setOpen(true);\n              }\n            }}\n          />\n          <Popover open={open} onOpenChange={setOpen}>\n            <PopoverTrigger asChild>\n              <Button\n                id=\"date-picker\"\n                variant=\"ghost\"\n                className=\"absolute top-1/2 right-2 size-6 -translate-y-1/2\"\n              >\n                <CalendarIcon className=\"size-3.5\" />\n                <span className=\"sr-only\">Select date</span>\n              </Button>\n            </PopoverTrigger>\n            <PopoverContent className=\"w-auto overflow-hidden p-0\" align=\"end\">\n              <Calendar\n                mode=\"single\"\n                selected={date}\n                captionLayout=\"dropdown\"\n                month={month}\n                onMonthChange={setMonth}\n                onSelect={(date) => {\n                  setDate(date);\n                  setValue(formatDate(date));\n                  setOpen(false);\n                }}\n              />\n            </PopoverContent>\n          </Popover>\n        </div>\n        <div className=\"text-muted-foreground px-1 text-sm\">\n          Your post will be published on{\" \"}\n          <span className=\"font-medium\">{formatDate(date)}</span>.\n        </div>\n      </div>\n    );\n  },\n};",
      "type": "registry:component"
    }
  ],
  "categories": [
    "atoms",
    "storybook",
    "calendar",
    "date-picker",
    "nlp"
  ]
}